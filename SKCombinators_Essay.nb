(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    615129,      13382]
NotebookOptionsPosition[    586345,      12922]
NotebookOutlinePosition[    586790,      12941]
CellTagsIndexPosition[    586747,      12938]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
A Machine Learning Analysis of Halting in the SKI Combinator Calculus\
\>", "Title",
 CellChangeTimes->{{3.739710360008836*^9, 3.73971036095286*^9}, {
   3.739710520650638*^9, 3.739710534984561*^9}, 3.739881927697475*^9, {
   3.73989701624303*^9, 3.739897040692593*^9}, {3.739897262296648*^9, 
   3.739897266362566*^9}, {3.739897517339345*^9, 3.7398975434460907`*^9}, {
   3.7399014852423143`*^9, 
   3.7399014856023083`*^9}},ExpressionUUID->"ec14c10b-e02a-4061-ad68-\
7ef17987e975"],

Cell[TextData[StyleBox["Euan Ong", "Author"]], "Authors",
 CellChangeTimes->{{3.73989704547736*^9, 3.7398970466022577`*^9}, 
   3.7403566230059547`*^9},ExpressionUUID->"a94335d6-91f9-437f-9269-\
94002258176a"],

Cell["\<\
Much of machine learning is driven by the question: can we learn what we \
cannot compute? The learnability of the halting problem, the canonical \
undecidable problem, to an arbitrarily high accuracy for Turing machines was \
proven by Lathrop (Lathrop, 1996). The SKI combinator calculus can be seen as \
a reduced form of the untyped lambda calculus, which is Turing-complete \
(Turing, 1937); hence, the SKI combinator calculus forms a universal model of \
computation. In this vein, we analyse the growth and halting times of SKI \
combinator expressions, estimate the probability of an SKI combinator \
expression halting after a given number of steps, and investigate the \
feasibility of a machine learning approach to predicting whether a given SKI \
combinator expression is likely to halt.\
\>", "Abstract",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQfaP26yHPu68dHx9xPgqiTT4JnwPRSlN3g+mMrvPL
vIB0svQ9MN2i/3k9iH62W2wDiJ5yh30riK69/e4ciJ77RfcaiN60MfwGiG7w
vsHtDaQr7tnwgOgDRrXiINrzOYckiF5SvVgJRF8966gKoo9abtIG0SJcvgYg
ep1LgjmI1rOYbwuiP0QFhYDod8LLwTRP4aNEEN0gLZMKoo3F7+SCaP5LS/NA
tImVZjmI5p0hUQWi3Xz4m0D0vwjWbhDNd+joFBD9befOaSDaaZHJahDd/Dv5
MIgutOI8nwOkS+7EXgDRaTbfroLoY5ukr4FojobJt0G0W/XMOyBawu/MdKV7
QHd+Y5oJotf0tJmrAmmfbYvANAAwgMgd
  
  "],ExpressionUUID->"69f9e600-7ff1-45c6-a38f-d2e873195b61"],

Cell[CellGroupData[{

Cell["SK Combinators", "Section",
 CellChangeTimes->{{3.739897465441671*^9, 3.739897467163404*^9}, {
  3.739925236221477*^9, 
  3.7399252403397923`*^9}},ExpressionUUID->"ca42a369-ab26-4492-bbe5-\
539a6af55613"],

Cell["\<\
What we will refer to as \[OpenCurlyQuote]SK Combinators\[CloseCurlyQuote] \
are expressions in the SKI combinator calculus,  a simple Turing-complete \
language introduced by Sch\[ODoubleDot]nfinkel (1924) and Curry (1930). In \
the same way that NAND gates can be used to construct any expression in \
Boolean logic, SK combinators were posed as a way to construct any expression \
in predicate logic, and being a reduced form of the untyped lambda calculus, \
any functional programming language can be implemented by a machine that \
implements SK combinators. While implementations of this language exist, \
these serve little functional purpose - instead, this language, a simple \
idealisation of transformations on symbolic expressions [NKS], provides a \
useful tool for studying complex computational systems.\
\>", "Text",
 CellChangeTimes->{{3.739897469830686*^9, 3.739897493411273*^9}, 
   3.7398975459909277`*^9, {3.739898938700757*^9, 3.7398989389102983`*^9}, {
   3.7403468365201197`*^9, 3.740346879230699*^9}, {3.740356713433547*^9, 
   3.74035674299601*^9}, {3.74035692309785*^9, 3.7403569400135393`*^9}, {
   3.74035705120328*^9, 3.740357175590393*^9}, {3.7403572678137903`*^9, 
   3.740357572440346*^9}, {3.7403576874533854`*^9, 3.7403577100079203`*^9}, {
   3.74035775075948*^9, 3.740357828127983*^9}, {3.7403579200695887`*^9, 
   3.740358151760367*^9}, {3.7403590520009937`*^9, 3.740359060387681*^9}, {
   3.7403593914826612`*^9, 
   3.7403594362438307`*^9}},ExpressionUUID->"7eee9944-15a7-4ef4-b297-\
f91e20a48ecb"],

Cell[CellGroupData[{

Cell["Rules and Expressions", "Subsection",
 CellChangeTimes->{{3.740359065063195*^9, 
  3.740359073201489*^9}},ExpressionUUID->"0073fdca-aba4-41c3-9a29-\
9fd3f83c8d80"],

Cell[TextData[{
 "\nFormally, SK combinator expressions are binary trees whose leaves are \
labelled either '",
 StyleBox["S",
  FontSlant->"Italic"],
 "', '",
 StyleBox["K",
  FontSlant->"Italic"],
 "' or '",
 StyleBox["I",
  FontSlant->"Italic"],
 "': each tree ",
 StyleBox["(xy)",
  FontSlant->"Italic"],
 " represents a function ",
 StyleBox["x",
  FontSlant->"Italic"],
 " applied to an argument ",
 StyleBox["y",
  FontSlant->"Italic"],
 ". When the expression is evaluated (i.e. when the function is applied to \
the argument), the tree is transformed into another tree, the 'value'. The \
basic 'rules' for evaluating combinator expressions are given below:"
}], "Text",
 CellChangeTimes->{{3.739897469830686*^9, 3.739897493411273*^9}, 
   3.7398975459909277`*^9, {3.739898938700757*^9, 3.7398989389102983`*^9}, {
   3.7403468365201197`*^9, 3.740346879230699*^9}, {3.740356713433547*^9, 
   3.74035674299601*^9}, {3.74035692309785*^9, 3.7403569400135393`*^9}, {
   3.74035705120328*^9, 3.740357175590393*^9}, {3.7403572678137903`*^9, 
   3.740357572440346*^9}, {3.7403576874533854`*^9, 3.7403577100079203`*^9}, {
   3.74035775075948*^9, 3.740357828127983*^9}, {3.7403579200695887`*^9, 
   3.740358151760367*^9}, {3.7403590520009937`*^9, 
   3.7403590530980186`*^9}},ExpressionUUID->"a86e485b-1b31-4ab5-956b-\
23f0dd7cdbd4"],

Cell[TextData[StyleBox["k[x_][y_] := x",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.74035828481124*^9, 3.740358295294909*^9}, 
   3.740360508123988*^9},
 CellLabel->"",ExpressionUUID->"b55e4ff2-fd91-4732-9823-aa583e391b54"],

Cell[TextData[{
 "The K combinator or \[OpenCurlyQuote]constant function\[CloseCurlyQuote]: \
when applied to ",
 StyleBox["x",
  FontSlant->"Italic"],
 ", returns the function ",
 StyleBox["k[x]",
  FontSlant->"Italic"],
 ", which when applied to some ",
 StyleBox["y",
  FontSlant->"Italic"],
 " will return ",
 StyleBox["x",
  FontSlant->"Italic"],
 "."
}], "NumberedFigureCaption",
 CellChangeTimes->{{3.740358425333702*^9, 3.740358448537176*^9}, {
  3.7403585628745327`*^9, 
  3.740358636510193*^9}},ExpressionUUID->"bed0d78a-6101-41f7-8edb-\
8516f9c42f9c"],

Cell[TextData[StyleBox["s[x_][y_][z_] := x[z][y[z]]",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.74035828481124*^9, 3.740358295294909*^9}, 
   3.7403586523625803`*^9, 
   3.740360528307934*^9},ExpressionUUID->"d876a614-d62a-400b-ab76-\
77f795ba7b6b"],

Cell[TextData[{
 "The S combinator or \[OpenCurlyQuote]fusion function\[CloseCurlyQuote]: \
when applied to ",
 StyleBox["x, y, z",
  FontSlant->"Italic"],
 ", returns ",
 StyleBox["x",
  FontSlant->"Italic"],
 " applied to ",
 StyleBox["z",
  FontSlant->"Italic"],
 ", which is in turn applied to the result of ",
 StyleBox["y",
  FontSlant->"Italic"],
 " applied to ",
 StyleBox["z",
  FontSlant->"Italic"],
 "."
}], "NumberedFigureCaption",
 CellChangeTimes->{{3.740358425333702*^9, 3.740358448537176*^9}, {
  3.7403585628745327`*^9, 
  3.7403587134087687`*^9}},ExpressionUUID->"58783a23-2e05-4fe5-ac38-\
56af59ba2dd4"],

Cell[TextData[StyleBox["i[x_] := x",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.74035828481124*^9, 3.740358295294909*^9}, {
   3.740358716226993*^9, 3.74035873192546*^9}, 
   3.740360538266795*^9},ExpressionUUID->"01348c00-c37d-4106-9c59-\
f82a47732409"],

Cell[TextData[{
 "The I combinator or \[OpenCurlyQuote]identity function\[CloseCurlyQuote]: \
when applied to ",
 StyleBox["x",
  FontSlant->"Italic"],
 ", returns ",
 StyleBox["x",
  FontSlant->"Italic"],
 "."
}], "NumberedFigureCaption",
 CellChangeTimes->{{3.740358425333702*^9, 3.740358448537176*^9}, {
  3.7403585628745327`*^9, 3.740358636510193*^9}, {3.740358721544074*^9, 
  3.7403587219394007`*^9}, {3.7403587632066507`*^9, 
  3.740358772180724*^9}},ExpressionUUID->"f2226f25-85ff-4924-8a41-\
70aca1d4fa3f"],

Cell[TextData[{
 "Note that the I combinator ",
 StyleBox["I[x]",
  FontSlant->"Italic"],
 " is equivalent to the function ",
 StyleBox["S[K][a][x]",
  FontSlant->"Italic"],
 ", as the latter will evaluate to the former in two steps:"
}], "Text",
 CellChangeTimes->{{3.7403587754213333`*^9, 
  3.740358885389083*^9}},ExpressionUUID->"e1e460a0-bcb6-4a18-8bb1-\
f318a0115346"],

Cell[TextData[StyleBox["S[K][a][x]\n= K[x][a[x]]\n= x",
 FontSlant->"Italic"]], "Text",
 CellChangeTimes->{{3.7403589053440533`*^9, 
  3.740358958398403*^9}},ExpressionUUID->"257936dd-1048-4817-985e-\
4d9e00bf14dd"],

Cell["\<\
Thus the I combinator is redundant as it is simply \[OpenCurlyQuote]syntactic \
sugar\[CloseCurlyQuote] - for the purposes of this exploration it will be \
ignored.

These rules can be expressed in the Wolfram Language as follows:\
\>", "Text",
 CellChangeTimes->{{3.7403582574213867`*^9, 3.740358260820231*^9}, {
  3.740358965548933*^9, 3.740359029991932*^9}, {3.740359122765504*^9, 
  3.7403591314520397`*^9}},ExpressionUUID->"d6eceea1-b56a-456f-8ef4-\
10a47c10ea3e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SKRules", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", "x_", "]"}], "[", "y_", "]"}], "\[RuleDelayed]", " ", 
     "x"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", "x_", "]"}], "[", "y_", "]"}], "[", "z_", "]"}], 
     "\[RuleDelayed]", " ", 
     RowBox[{
      RowBox[{"x", "[", "z", "]"}], "[", 
      RowBox[{"y", "[", "z", "]"}], "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{3.740359155087339*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"35377374-7b86-42ce-aa86-ff7bee5afbc6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"k", "[", "x_", "]"}], "[", "y_", "]"}], "\[RuleDelayed]", "x"}],
    ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", "x_", "]"}], "[", "y_", "]"}], "[", "z_", "]"}], 
    "\[RuleDelayed]", 
    RowBox[{
     RowBox[{"x", "[", "z", "]"}], "[", 
     RowBox[{"y", "[", "z", "]"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.74035915893797*^9, 3.740360168625463*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"8cb6c0d4-aeaf-4c35-9b94-ff1628dff370"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluation", "Subsection",
 CellChangeTimes->{{3.739897469830686*^9, 3.739897493411273*^9}, 
   3.7398975459909277`*^9, {3.739898938700757*^9, 3.7398989389102983`*^9}, {
   3.7403468365201197`*^9, 3.740346879230699*^9}, {3.740356713433547*^9, 
   3.74035674299601*^9}, {3.74035692309785*^9, 3.7403569400135393`*^9}, {
   3.74035705120328*^9, 3.740357175590393*^9}, {3.7403572678137903`*^9, 
   3.740357572440346*^9}, {3.7403576874533854`*^9, 3.7403577100079203`*^9}, {
   3.74035775075948*^9, 3.740357828127983*^9}, {3.7403579200695887`*^9, 
   3.74035812237066*^9}, {3.7403590803943872`*^9, 3.7403591011269693`*^9}, {
   3.7403592667728167`*^9, 
   3.740359268484783*^9}},ExpressionUUID->"9760dc58-cb54-4dd2-8e25-\
ccd85499c856"],

Cell["\<\
The result of applying these rules to a given expression is given by the \
following functions:\
\>", "Text",
 CellChangeTimes->{{3.740359269808498*^9, 3.740359293285581*^9}, 
   3.740359808512059*^9},ExpressionUUID->"51ec8012-ee53-424b-9eb2-\
c9b7421aa847"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SKNext", "[", "expr_", "]"}], ":=", 
   RowBox[{"expr", "/.", "SKRules"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7403593273510447`*^9, 3.740359330239264*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"27974881-a153-4b4e-8f44-7af2cb1a093e"],

Cell[TextData[{
 "Returns the next \[OpenCurlyQuote]step\[CloseCurlyQuote] of evaluation of \
the expression ",
 StyleBox["expr",
  FontSlant->"Italic"],
 " - evaluating all functions in ",
 StyleBox["expr",
  FontSlant->"Italic"],
 " according to the rules above without evaluating any \[OpenCurlyQuote]new\
\[CloseCurlyQuote]/transformed functions."
}], "NumberedFigureCaption",
 CellChangeTimes->{{3.740359343395685*^9, 3.740359350855681*^9}, {
  3.740359525605049*^9, 
  3.740359574371934*^9}},ExpressionUUID->"6374d849-19c2-4454-bfef-\
d5c49a12d618"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SKEvaluate", "[", 
    RowBox[{"expr_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", "/.", "SKRules"}], "&"}], ",", "expr", ",", "n"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.740359814226987*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"c279123a-d3ca-46d7-88d7-3a3c986ea9d1"],

Cell[TextData[{
 "Returns the next ",
 StyleBox["n",
  FontSlant->"Italic"],
 " steps of evaluation of the expression ",
 StyleBox["expr",
  FontSlant->"Italic"]
}], "NumberedFigureCaption",
 CellChangeTimes->{{3.7403598269691*^9, 
  3.740359843112208*^9}},ExpressionUUID->"44535661-47aa-434c-94f4-\
4a27720262b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SKEvaluateUntilHalt", "[", 
     RowBox[{"expr_", ",", "n_"}], "]"}], " ", ":=", " ", 
    RowBox[{"FixedPointList", "[", 
     RowBox[{"SKNext", ",", "expr", ",", 
      RowBox[{"n", "+", "1"}]}], "]"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{3.740359814226987*^9, 3.74035986811007*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"57744649-8b88-46f4-b647-36d9cfa90adc"],

Cell[TextData[{
 "Returns the steps of evaluation of ",
 StyleBox["expr",
  FontSlant->"Italic"],
 " until either it reaches a fixed point or it has been evaluated for n \
steps, whichever comes first."
}], "NumberedFigureCaption",
 CellChangeTimes->{{3.7403598269691*^9, 3.740359843112208*^9}, {
  3.74035988723818*^9, 
  3.740359960201639*^9}},ExpressionUUID->"a8b239ac-2739-4fad-bdc9-\
959467bbe0cd"],

Cell["\<\
Note that, due to the Church-Rosser theorem, the order in which the rules are \
applied does not affect the final result, as long as the combinator evaluates \
to a fixed point / \[OpenCurlyQuote]halts\[CloseCurlyQuote]. For combinators \
with no fixed point, which do not halt, the behaviour demonstrated as they \
evaluate could change based on the order of application of the rules - this \
is not explored here and is a topic for potential future investigation.\
\>", "Text",
 CellChangeTimes->{{3.740359607318737*^9, 
  3.7403597752487907`*^9}},ExpressionUUID->"46fea085-5766-4fc2-b27e-\
5c41587dbe21"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.740360002916765*^9, 
  3.740360003953145*^9}},ExpressionUUID->"e5bbda52-67f8-4c08-b99d-\
971bf23caac1"],

Cell["\<\
The functions above can be used to evaluate a number of interesting SK \
combinator expressions:\
\>", "Text",
 CellChangeTimes->{{3.740360005339683*^9, 3.740360005884597*^9}, {
  3.7403600555443573`*^9, 
  3.740360101562024*^9}},ExpressionUUID->"51db2589-f382-440c-863f-\
62ef62f95080"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"SKEvaluateUntilHalt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", "k", "]"}], "[", "a", "]"}], "[", "x", "]"}], ",", 
     "10"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", 
     RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.740360111945114*^9, 3.7403601378485603`*^9}, {
  3.740360180959793*^9, 3.740360186345509*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"4003d655-b845-4f6b-81cc-0947dfc2e219"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", "k", "]"}], "[", "a", "]"}], "[", "x", "]"}]},
    {
     RowBox[{
      RowBox[{"k", "[", "x", "]"}], "[", 
      RowBox[{"a", "[", "x", "]"}], "]"}]},
    {"x"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.7403601308790216`*^9, 3.74036013822906*^9}, {
  3.740360175524172*^9, 3.740360186727504*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"61bf225d-3886-478d-9711-dcb822da5a03"]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["I",
  FontSlant->"Italic"],
 " combinator"
}], "NumberedFigureCaption",
 CellChangeTimes->{{3.740360210551961*^9, 3.7403602165048637`*^9}, {
  3.7403603554880733`*^9, 
  3.740360358434696*^9}},ExpressionUUID->"62bd2151-9c5f-4d1f-9a53-\
b2d58c503e39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"SKEvaluateUntilHalt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"k", "[", 
          RowBox[{"s", "[", "i", "]"}], "]"}], "]"}], "[", "k", "]"}], "[", 
       "a", "]"}], "[", "b", "]"}], ",", "10"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", 
     RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.740360267043441*^9, 3.7403603037866096`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"f81cc690-546f-4b99-90b3-fc5af930850d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"k", "[", 
          RowBox[{"s", "[", "i", "]"}], "]"}], "]"}], "[", "k", "]"}], "[", 
       "a", "]"}], "[", "b", "]"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"k", "[", 
         RowBox[{"s", "[", "i", "]"}], "]"}], "[", "a", "]"}], "[", 
       RowBox[{"k", "[", "a", "]"}], "]"}], "[", "b", "]"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", "i", "]"}], "[", 
       RowBox[{"k", "[", "a", "]"}], "]"}], "[", "b", "]"}]},
    {
     RowBox[{"b", "[", 
      RowBox[{
       RowBox[{"k", "[", "a", "]"}], "[", "b", "]"}], "]"}]},
    {
     RowBox[{"b", "[", "a", "]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.74036027526198*^9, 3.740360304229006*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"62a06fde-1ff0-4e92-9004-95fd92fcc5db"]
}, Open  ]],

Cell[TextData[{
 "The reversal expression - ",
 StyleBox["s[k][s[i]][k][a][b]",
  FontSlant->"Italic"],
 " takes two terms, ",
 StyleBox["a",
  FontSlant->"Italic"],
 " and ",
 StyleBox["b",
  FontSlant->"Italic"],
 ", and returns ",
 StyleBox["b[a]",
  FontSlant->"Italic"],
 "."
}], "NumberedFigureCaption",
 CellChangeTimes->{{3.740360322688055*^9, 
  3.740360353084692*^9}},ExpressionUUID->"1712df3a-a0a8-4442-ae57-\
5e907c40de9b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Growth and Halting", "Section",
 CellChangeTimes->{{3.740360425652671*^9, 
  3.740360428971609*^9}},ExpressionUUID->"ea77a23f-3183-490d-a405-\
6f1cf89f3d42"],

Cell[CellGroupData[{

Cell["Halting", "Subsection",
 CellChangeTimes->{{3.740360437859543*^9, 
  3.740360438714745*^9}},ExpressionUUID->"257a0f97-6845-4851-a7e4-\
07bd117bea08"],

Cell["", "Text",
 CellChangeTimes->{{3.7403602636118183`*^9, 
  3.7403602646134357`*^9}},ExpressionUUID->"ade51938-3ffe-4fad-8c96-\
ce8651990b4f"],

Cell["", "Text",
 CellChangeTimes->{{3.74036010597104*^9, 
  3.740360106404791*^9}},ExpressionUUID->"5c690fd0-3101-4467-a9d0-\
8fa0fa30956c"]
}, Open  ]],

Cell[TextData[StyleBox["E\n<Write about SKI combinators and what halting \
means - nb, we are not trying to *solve* the *halting problem* which is \
undecidable. Talk about \
https://www.ics.uci.edu/~rickl/publications/1996-icml.pdf>\n\
https://en.wikipedia.org/wiki/Unlambda", "Text",
 FontWeight->"Plain"]], "Subsection",
 CellChangeTimes->{{3.739897469830686*^9, 3.739897493411273*^9}, 
   3.7398975459909277`*^9, {3.739898938700757*^9, 3.7398989389102983`*^9}, {
   3.7403468365201197`*^9, 3.740346879230699*^9}, {3.740356713433547*^9, 
   3.74035674299601*^9}, {3.74035692309785*^9, 3.7403569400135393`*^9}, {
   3.74035705120328*^9, 3.740357175590393*^9}, {3.7403572678137903`*^9, 
   3.740357572440346*^9}, {3.7403576874533854`*^9, 3.7403577100079203`*^9}, {
   3.74035775075948*^9, 3.740357828127983*^9}, {3.7403579200695887`*^9, 
   3.74035812237066*^9}, {3.7403590803943872`*^9, 3.7403590980489264`*^9}, {
   3.740359989917395*^9, 
   3.740359991532155*^9}},ExpressionUUID->"284039a4-77fd-4ca8-8d01-\
5690d6ec119b"],

Cell[CellGroupData[{

Cell["Rasterization - add examples", "Subsection",
 CellChangeTimes->{{3.739722555662521*^9, 3.739722565341758*^9}, 
   3.739723240513896*^9, {3.739825105542655*^9, 
   3.739825110284614*^9}},ExpressionUUID->"89c774c8-252b-4c4c-8fb4-\
86eada9fc7f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SKRasterize", "[", "func_", "]"}], ":=", 
   RowBox[{"SKRasterize", "[", 
    RowBox[{"func", ",", "10"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SKRasterize", "[", 
   RowBox[{"func_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"SKRules", ",", "SKEvaluate", ",", "SKArray", ",", "SKGrid"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SKRules", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", "x_", "]"}], "[", "y_", "]"}], "\[RuleDelayed]", 
         " ", "x"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"s", "[", "x_", "]"}], "[", "y_", "]"}], "[", "z_", "]"}], 
         "\[RuleDelayed]", " ", 
         RowBox[{
          RowBox[{"x", "[", "z", "]"}], "[", 
          RowBox[{"y", "[", "z", "]"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SKEvaluate", "[", "expr_", "]"}], ":=", 
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "/.", "SKRules"}], "&"}], ",", "expr", ",", "n"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SKArray", "[", "expr_", "]"}], ":=", 
      RowBox[{"Characters", "/@", 
       RowBox[{"ToString", "/@", 
        RowBox[{"SKEvaluate", "[", "expr", "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SKGrid", "[", "exp_", "]"}], ":=", 
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{"SKArray", "[", "exp", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ColorRules", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<s\>\"", "\[Rule]", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", 
             RowBox[{"\"\<k\>\"", "\[Rule]", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "1", ",", "0"}], "]"}]}], ",", 
             RowBox[{"\"\<[\>\"", "\[Rule]", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
             RowBox[{"\"\<]\>\"", "\[Rule]", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "0", ",", "0"}], "]"}]}]}], "}"}]}], ",", 
          RowBox[{"PixelConstrained", "\[Rule]", "True"}], ",", 
          RowBox[{"Frame", "\[Rule]", "False"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"SKGrid", "[", "func", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdz1tIkwEAxfExTWIQ5RRdIZVEEAl5QbpKpXOpoDbCCkrZMtSHLluKlg1F
bUwtGbFoihl+aIobWqLixMKkhgMzexqYaWSlBaVgy5rlrO//PRx+HDgvJzrf
cKpALpPJ9ojBpUL/Xt/Mt+SqVE8C9o1XJuFC8UPJ1gJjCsZlWDR4YO2cHjvd
ly+grqv8Bpq9YXcwO+rMXRw62mvD0AarHW+/jRDwoDepC69tn3RgUUujB3va
O8bx8QOdF9t01yWD8kre48kv2xYw/ZD8O9rz/i1h/ctEH35aLF3HnE3yoJ+i
EYqz4aif6Y9Gs3pwN2bYXu/DPkNWItac1hzGDn+ZZJsiQY3G/cckK9rVuTj4
Iysf/fPWS/j1kaMYLTvLTOh0jFVgk/FpNVpv2Wvx84jZij2WZQGvfkjrRlWg
/AmOHIlxoas5VtIdGfocJ4ZnPTht9Kf+EZ1cG9Xgxh0x2r+igfuZkt7R5Fy0
n1+RjGs9cRHfmfqL0KZyxkfOij+VrjT0lQ5k4/FfghbrMmt/o9NQsopzi68C
0v7K1nU0KbfIVfTOMAWOCYWbsflmtxLNwfPuKNEp/aoHw+/FTmC6dtcbFFpe
TOGzld5pDAlpmMPgDTkf8T8x/ILz
  "],
 CellLabel->"In[8]:=",ExpressionUUID->"772fdb93-b262-4d48-93d6-f32f8f7d1a97"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SKRules", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"k", "[", "x_", "]"}], "[", "y_", "]"}], "\[RuleDelayed]", " ",
       "x"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", "x_", "]"}], "[", "y_", "]"}], "[", "z_", "]"}], 
      "\[RuleDelayed]", " ", 
      RowBox[{
       RowBox[{"x", "[", "z", "]"}], "[", 
       RowBox[{"y", "[", "z", "]"}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SKEvaluate", "[", 
    RowBox[{"expr_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", "/.", "SKRules"}], "&"}], ",", "expr", ",", "n"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SKEvaluate", "[", "expr_", "]"}], ":=", 
   RowBox[{"SKEvaluate", "[", 
    RowBox[{"expr", ",", "10"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SKArray", "[", "expr_", "]"}], ":=", 
   RowBox[{"SKArray", "[", 
    RowBox[{"expr", ",", "10"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SKArray", "[", 
    RowBox[{"expr_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Characters", "/@", 
    RowBox[{"ToString", "/@", 
     RowBox[{"SKEvaluate", "[", 
      RowBox[{"expr", ",", "n"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SKGrid", "[", "exp_", "]"}], ":=", 
   RowBox[{"SKGrid", "[", 
    RowBox[{"exp", ",", "10"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SKGrid", "[", 
    RowBox[{"exp_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"SKArray", "[", 
      RowBox[{"exp", ",", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ColorRules", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<s\>\"", "\[Rule]", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", 
          RowBox[{"\"\<k\>\"", "\[Rule]", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "1", ",", "0"}], "]"}]}], ",", 
          RowBox[{"\"\<[\>\"", "\[Rule]", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
          RowBox[{"\"\<]\>\"", "\[Rule]", 
           RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "0", ",", "0"}], "]"}]}]}], "}"}]}], ",", 
       RowBox[{"PixelConstrained", "\[Rule]", "True"}], ",", 
       RowBox[{"Frame", "\[Rule]", "False"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SKRasterize", "[", "func_", "]"}], ":=", 
   RowBox[{"SKRasterize", "[", 
    RowBox[{"func", ",", "10"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7398055666193047`*^9, 3.739805692154375*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"5c997991-14dd-4731-bc6d-0c199606cc86"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SKRasterize", "[", 
   RowBox[{"func_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"SKGrid", "[", 
   RowBox[{"func", ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739805631131955*^9, 
  3.739805648603589*^9}},ExpressionUUID->"44462981-0def-4370-a211-\
a99c7780c91f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SKLengths", "[", 
    RowBox[{"exp_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"StringLength", "/@", 
    RowBox[{"ToString", "/@", 
     RowBox[{"SKEvaluate", "[", 
      RowBox[{"exp", ",", "n"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739805713971086*^9, 3.739805733230749*^9}, {
  3.739805767027569*^9, 3.739805775171236*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"bcc82660-a876-43d6-947e-36ea700893ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SKRasterize", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", "s", "]"}], "[", "k", "]"}], "[", 
    RowBox[{"s", "[", 
     RowBox[{
      RowBox[{"s", "[", "s", "]"}], "[", "k", "]"}], "]"}], "]"}], "[", "k", 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.739720242645289*^9, 3.739720272457425*^9}, {
  3.739720316583209*^9, 3.73972032729284*^9}, {3.739720606559185*^9, 
  3.739720619169464*^9}, {3.739722663389285*^9, 3.7397227101491547`*^9}, {
  3.739723331054202*^9, 3.739723349322867*^9}, {3.739723387614841*^9, 
  3.739723399089094*^9}, {3.739793985801839*^9, 3.739794000327961*^9}, {
  3.739795487836405*^9, 3.739795490915393*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"1bf35d8a-d0a9-4e28-a3e1-f3783ac3dac9"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztlsFtA0EIRVdKbq4ileSQDlxCJJ/TekqIL74gE5ZhdsHDQ7Is72M+aGDB
H98/19vbtm2X++fr/nnfHvb7uT0167n8Puu8V1/zH9X3xud+58a3eDS/7Pun
fvvymRXfum84HD7OpZ/2O6pX5bxXX/Nfdf5m14f67svnrPPUf258i2fnl12/
7vWXPPv/wSwujfn1/LlXX/Nnfo3Fp/98+pp/1/6zeHZ9u/VHlf0HP5ZLW7X/
2U8+fc2/yvzX/KvGz64//bMvn6r3T/325XNWflX2d3UujfcjJ372/a5enyin
vj59zf9V6+flVeY7HJ7BpZ/2O6pX5bxXX/NfdT5G9bPr270/LD67vtHz9Mfc
+BbPzo/+8elr/lXni+TR+9X8q9a3e39k58d+i5336mv+XfvP4vSXT1/zr7bf
rLzhx3Jpq/Yv88Onr/m/6vzPjk//+fQ1/679p+WRvT/g8P+4NOZTzfjsJ5++
5t9lP1WZL3A4vC+XdtR+yD7v1df8R/WjPJpf9v13r5/FZ+dfZb7A4fC+XNqq
+yGaf/Z5r77mP6of5bPzq/L+wOFwOPxB/gC8OCEk
   
   "], {{0, 0}, Offset[{938, 154}, {0, 0}]}, {0, 1}],
  Frame->False,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{938, 154},
  ImageSizeRaw->{938, 154},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{0, 938}, {0, 154}},
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{
  3.739793908857373*^9, {3.739793986823134*^9, 3.739794001143067*^9}, {
   3.739795400645287*^9, 3.7397954058187017`*^9}, 3.739795442939967*^9, {
   3.7397954773439207`*^9, 3.7397955384961357`*^9}, {3.7397955854866257`*^9, 
   3.739795607024767*^9}, {3.739805697402145*^9, 3.739805700800355*^9}},
 CellLabel->
  "Out[244]=",ExpressionUUID->"38ae7b1b-213e-4db4-94de-28a19a485786"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SKFuncs", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", "k", "]"}],
      "[", "k", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", "s", "]"}],
      "[", "s", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", "s", 
       "]"}], "[", "s", "]"}], "[", "k", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", "s", "]"}], "[", "s", "]"}], "[", 
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", "s", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", "s", 
       "]"}], "[", "s", "]"}], "[", "s", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", "s", 
       "]"}], "[", "s", "]"}], "[", "s", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", "s", "]"}], "[", "s", "]"}], "[", 
      RowBox[{"s", "[", 
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "[", "k", "]"}], 
    ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", "s", "]"}], "[", "k", "]"}], "[", 
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", "s", "]"}], "[", "k",
      "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", "s", "]"}], "[", "s", "]"}], "[", 
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", "s", "]"}], "[", "k",
      "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", "s", "]"}], "[", "s", "]"}], "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", 
     RowBox[{"s", "[", "k", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", 
         RowBox[{
          RowBox[{"s", "[", "s", "]"}], "[", "s", "]"}], "]"}], "]"}], "[", 
       "s", "]"}], "[", "s", "]"}], "[", "k", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", "s", "]"}], "[", "k", "]"}], "[", 
      RowBox[{"s", "[", 
       RowBox[{
        RowBox[{"s", "[", "s", "]"}], "[", "k", "]"}], "]"}], "]"}], "[", "k",
      "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.739723410559664*^9, 3.739723589561578*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"dedad5af-20ea-4a62-87ce-affbc249cc54"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", "k", "]"}], 
    "[", "k", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", "s", "]"}], 
    "[", "s", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", "s", "]"}],
      "[", "s", "]"}], "[", "k", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", "s", "]"}], "[", "s", "]"}], "[", 
     RowBox[{"s", "[", 
      RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", "s", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", "s", "]"}],
      "[", "s", "]"}], "[", "s", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", "s", "]"}],
      "[", "s", "]"}], "[", "s", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", "s", "]"}], "[", "s", "]"}], "[", 
     RowBox[{"s", "[", 
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "[", "k", "]"}], 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", "s", "]"}], "[", "k", "]"}], "[", 
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", "s", "]"}], "[", "k", 
    "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", "s", "]"}], "[", "s", "]"}], "[", 
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", "s", "]"}], "[", "k", 
    "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", "s", "]"}], "[", "s", "]"}], "[", 
      RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", 
    RowBox[{"s", "[", "k", "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", 
        RowBox[{
         RowBox[{"s", "[", "s", "]"}], "[", "s", "]"}], "]"}], "]"}], "[", 
      "s", "]"}], "[", "s", "]"}], "[", "k", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", "s", "]"}], "[", "k", "]"}], "[", 
     RowBox[{"s", "[", 
      RowBox[{
       RowBox[{"s", "[", "s", "]"}], "[", "k", "]"}], "]"}], "]"}], "[", "k", 
    "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.739723590983914*^9, 3.739793913937608*^9, 
  3.739795545325589*^9, 3.7398727982243643`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"ef1d2a43-9479-4902-b655-509eeecbda6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SKRasterize", "/@", "SKFuncs"}]], "Input",
 CellChangeTimes->{{3.7397235936914*^9, 3.7397235973748283`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"2d64a5c4-e0e3-46fc-8991-20ef14f5f382"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[RasterBox[CompressedData["
1:eJztlTEOwyAMRS2lW6+QpSfpHXqESp179RwhWbpYsVwEAQPPEgN5+NtR/Mnj
/X19FhG5H2s91k1+sT3lNLznmnt7T8fThcNH5jrwHxyO/+DwGbgO/AeH4z84
fGSuz1n7XD0rP7V+Luf+gEfi+py1t/Ry82f3b+36fL+29b0+vPyr+4+uz/yl
8db/l164Dubvv/ze3t/jpfuLMt/RuY6r5i9V3zpfSr83/+CPMbmOWvNb2r+t
69e+P3L1o8zffHwHlOaCAA==
     "], {{0, 0}, Offset[{980, 385}, {0, 0}]}, {0, 
     1}],
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{980, 385},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
    PlotRange->{{0, 980}, {0, 385}},
    PlotRangeClipping->True], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJztlcEJw0AMBAXOzy34k0rSQ0oI+J3WU0L8yeewsEC5jDY+wWHwMrfLIuPr
43lfJzObt7Ns52Kfed1sd47et08VPqur+6vzWZ3293JEebp/uj91f3U+q9P+
Xo4oT/dP96fur85nddrfyxHl6f7p/tT91fmsTvt7OaI83T/dn7q/Op/VaX8v
R5Sn+6f7U/dX57M67e/liPJ0/3R/6v7qfFan/b0cUb53/ur303xW/7X/kd/Q
bXfG/tXke+vfzldlv6vr7aj+n3rfT38/4/v4T72dsb/nuL/K/p1PfwO/Yqgp

     "], {{0, 0}, Offset[{980, 385}, {0, 0}]}, {0, 1}],
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{980, 385},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
    PlotRange->{{0, 980}, {0, 385}},
    PlotRangeClipping->True], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJztlUFOw0AMRSPBjlNwEtZsOQISa67OEeja0q8dPFPb4Vmqqszz/99pJ5PX
z++Pr6fjOF5un/fb5/mw9fN2/9qu22/PT+nP5mf56vmn6bO8W77qX5Xv3S8c
DofDr8ltn7pWfll9dJ5V+Vm+ev5p+izvlq/6d+V7vPr/rdZnebd81V/lz/k7
W5/l3fJVf9X5a3m356N6/1Xrs7xbvurvms/7Y7Y+y7vlq/5Hvx+8ueDwK3Nb
/+X9cTZ/+v17vPr9Vq3P8m75qn9VfpfzCw6Hw3dxW9Hz96z+rL/qX+Wfvf/V
853Nf/T/V63P8m75qn9VfpfzBQ6Hw6dyW9668tutz/Ld+dHfuWr+6fos75av
+lfldzlf4HA4fCq35a0rv+76LJ+eP12f5dX5Ho8+p1H/LucLHA6HT+W2vHXl
5+mn+1frs7xbvuqP+nd5fuBwOBx+TW7LW1d+u/VZXj1/9f17fPd80X0Y9e/y
/MDhcDj8mtyWt678PP10/93zVedH90nUv8v+hsPhcDj8L9yWt678duuzfHf+
1fxVf9S/y/6Gw+FwODzGfwFClvhL
     "], {{0, 0}, Offset[{949, 143}, {0, 0}]}, {
     0, 1}],
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{949, 143},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
    PlotRange->{{0, 949}, {0, 143}},
    PlotRangeClipping->True], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJzt1s1NAzEYhOGV4EYVVEIPlIDEmTNdUwK5cLFYDHjH8/28lqJIfjTO7Leb
wOPL2/Pr3XEcD7fX++11f3ytj6fj2zXbH9/J/y6v9ur9yK/l1e7u555v97za
o/dbdff9655Xe/V+3fNqd/dzz7d7Xu3R++32bM9H9rzaq/cjv5ZXu7ufe77d
82qP3m/V3feve17t1ft1z6vd3c893+55tUfvt9uzPR/Z82qv3o/8Wl7t7n7u
+XbPqz16v1V337/uebVX79c9r3Z3P/d8u+fVHr3fbs/2fGTPq716P/JrebW7
+7nn2z2v9uj9Vt19/7rn1V69X/e82t393PPtnld79H67PdvzkT2v9ur91Nfn
7tc9r/bo/Wbuvj/Z82p393PPt3te7dH7Xe2z68VxHFf7uFS/z93zaq/ez51f
dXf/7Hm1V+9Hfi2v9uj9/upR/r/BcRzH8f/4uGb7Z+eR/3lf7dX7Zc+rXd3P
Pb/sebVH7zd6lL9/OI7jOI7jo49rtn923iyvPj97Xu3ufu75Zs+rPVq/KL+P
OI7jOI7jeC8f12z/7Dx1ftXVn++ejzuv9t39onw/cRzHcRzHcRzf5+Oa7Z+d
Fz2vdvf1ufNuv7p/lO8njuM4juM4juP7fFyz/bPzZvns57vzar+6X5TnG8dx
HMdxHMdx/Nw/AXXHmF4=
     "], {{0, 0}, Offset[{968, 88}, {0, 0}]}, {0, 1}],
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{968, 88},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
    PlotRange->{{0, 968}, {0, 88}},
    PlotRangeClipping->True,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzt2r1qwlAYBuAj7ZS5s2R0du5sh9KLCFIwQ3+wXlqnrr2wYyKlYDFCTFK+
lidDPBHMd973AVHxodptHp+qXb2uyrtt9bqp12/l6mXbPHU1S+n6I6X0XKZ2
nZvl16nIzWOR+67m7as7Lwff72bk+y1Hvt+FeSdOuTqQJqRIkSKNEBYpUqRI
I6REihQp0kBhkSJFijRCSqRIkSINFBYpUqRII6REihQp0kBhkSJFijRCSqRI
kSINFBYpUqRII6REihQp0kBhkSJFijRCSqRIkSINFBYpUqRII6REihQp0kBh
kSJFejbimLtehOzytr3M7VG3J61qVata1apWtapVrWpVq1qdoNVBSSb+Xr78
7uNwzJWiFKUoRSlKUYpSlKKU3q8tRmlrcZzuXTrppJNOOumk+7fpLh0w4ke0
fHzc26u92qu92qu9du61c/KgED/GfxpvvPHGxxrfebPzqxN/ETDZZJNN/s3J
/d44T/06kk8cRhll1B8flWZ7ncKopQ==\
\>"]], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJzt1UFqAzEMhWFDu+spepLeoTdooetevUdoNt2YuCI8iyeNf0MI+ONJGs9k
8vr5/f71NMZ4uX0+bp/n8bd+3sbdFe3P313yqrvnd+dVP71/5O776z6f7P7u
8+l+vt3zqp/eP3L3/XXnVXfP786rfnr/3d7t+XGfv3t+d1710/tH7r6/7rzq
V+/vvj/dz7d7XvXT+z/q0bw4foLPi/8/T151+mv93XnV3fO786qf3j+ao+r/
F47jOJ7j84r2V/Wy86q753dff+Tu63PnVT+tf5X3F47jOI7j+31e0f6qXpTv
Xj97vuz+3fOqn9a/yvsFx3Ecx/F+Pq9of1UvO696dv/q9bvnVT+tf5X3C47j
OI7j/Xxe0f6qXvW86t37d8+r7u4f+e75qrxfcBzHcRzv5/OK9lf1onz3+u68
6lfrX+X3g+M4juM4fjWfV7S/qpedV909v/v6I8+eb3f9Kr8fHMdxHMfxq/m8
ov1VvSjfvX72fO7+u+tXeb5xHMdxHMfxx3xe0f6qXnZe9ez+1P+/TtXnH8dx
HMdxHP8F5XowZw==
     "], {{0, 0}, Offset[{970, 110}, {0, 0}]}, {0, 1}],
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{970, 110},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
    PlotRange->{{0, 970}, {0, 110}},
    PlotRangeClipping->True], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJzt1UFqAzEMhWFDu+spepLeoTdooetevUdoNt2YuCI8iyeNf0MI+ONJGs9k
8vr5/f71NMZ4uX0+bp/n8bd+3sbdFe3P313yqrvnd+dVP71/5O776z6f7P7u
8+l+vt3zqp/eP3L3/XXnVXfP786rfnr/3d7t+XGfv3t+d1710/tH7r6/7rzq
V+/vvj/dz7d7XvXT+z/q0bw4foLPi/8/T151+mv93XnV3fO786qf3j+ao+r/
F47jOJ7j84r2V/Wy86q753dff+Tu63PnVT+tf5X3F47jOI7j+31e0f6qXpTv
Xj97vuz+3fOqn9a/yvsFx3Ecx/F+Pq9of1UvO696dv/q9bvnVT+tf5X3C47j
OI7j/Xxe0f6qXvW86t37d8+r7u4f+e75qrxfcBzHcRzv5/OK9lf1onz3+u68
6lfrX+X3g+M4juM4fjWfV7S/qpedV909v/v6I8+eb3f9Kr8fHMdxHMfxq/m8
ov1VvSjfvX72fO7+u+tXeb5xHMdxHMfxx3xe0f6qXnZe9ez+1P+/TtXnH8dx
HMdxHP8F5XowZw==
     "], {{0, 0}, Offset[{970, 110}, {0, 0}]}, {0, 1}],
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{970, 110},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
    PlotRange->{{0, 970}, {0, 110}},
    PlotRangeClipping->True], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJzt1sGNkzEYBNBIcKMKKqEHSkDiTKX0QgnshYsVY+86/sdf8iytVvLLOIk9
cfL1x6/vPz/dbrcvb3+/3/4+3/6NP99ud8dovv3/0Xzv8Vc9/6vl0756/rs9
fT7V82nf3S/3Vzaf9tPvr1VPn2/1fNqv7udovzjnnHPOOeeccz7v7RjN99Z7
b773+Kvy6fdfLZ/21fPf7fqZzac93U/3a+182tP9Tbv+Z/NpT/ff/V07n/Z0
f1dd/2vn0356//Uzm097up/u19r5tKf7W93T/ameT/vV/X+28/H9kc2nPf39
4fdP7Xza0/3d7T4ftfNpP/3zoZ/ZfNrT/XS/1s6nPd3f0z3dj+r5tF/d79F+
cc4555z3vB2j+d56p+dXfXYfr8pX2/90Pu2r5592/c3m057ur/u3dj7t6f6m
PX3+1fNpv7q/o/3inHPOOeecc/5Yb8dovrfes+d3++w5nbo/1fNpXz3/3f7o
fq7mq/UrnU/76f1e9fT5Vs+n/ep+jvaLc84555xzzjnnr+PtGM331pP//3za
Z3uQWj99PtXzad/dr92uv9l82tP9Te9/9Xzafb8+dz7t6fvp0T46D84555xz
zjl/NW/HaL633ij/3vV7j9/1+l49n/bV89/t6fOpnk/77n65v7L5tJ9+f7V+
yu8PzjnnnHPOOeec81f3dozme+vtzq96+vVXz6d9tsenPn/6/Krn057uX+91
pL8/OOecc84555xzzjnnH/d2jOZ7652e3+2z+/yo9avtfzqf9t396D1P+n7h
nHPOOeecc84555xzft/bMZrvrffs+bSn33/1/Ok++zmdXf+U+4VzzjnnnHPO
Oeecc875fW/HaL633ihfff3q+bTP9nB2/VM+P5xzzjnnnHPOOeecc875nP8F
gZXOFg==
     "], {{0, 0}, Offset[{820, 44}, {0, 0}]}, {0, 1}],
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{820, 44},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
    PlotRange->{{0, 820}, {0, 44}},
    PlotRangeClipping->True], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJzt1cFt3EAMQFEBzi1VuJL0kBIC5JweUrFLsC+5DMxQC4rzqfUfYGFYb0hx
yR3p9defn79fjuP4/vH5+/H5dvxbbz+OT1d2ff27K/7R/NH+q/LfrX/d/a96
9/y67z99Pp6P3vhup89Ht9Pzo+dP10/H0777fGX90nVd1/XJvq7sepRvenzV
6frpeNrP/o6p/PR86PnS9dPxtHefj273/NWcrp+Op50+f3T/6fnR9dPxtHf/
/n0/1Jyun46nnX4/XO3T5ufzoeZ0/XQ87dOfD/R86PnS9dPxtHefD98fNafr
p+Npn/7+WD3rt67ruv7cvq7sepSvO77qdP1+fzae9rPncOr96fnR86frp+Np
p89PVAf9/tZ1Xdd1Xd/l677o/2q+KfHd3l1fNufu+uj4bt89v2r/ov1T5/fV
51/16vzp+/v77XWfX7Pju/1u9UX7d9WX9UvXdV3/v68ru57lORtfvf/u+G6n
66vOtzs/PX96Ppl313d1/6L9U+f31edf9e7nS3Qf+v2q67qu67r+bL6u7HqU
79H4aP+u+++O7/a71Rftnzq/u/X36vo8/7X4bp9eX+bV30eUh36/6rqu67qu
P5uvK7se5cviH80f7e+qj47vdrq+q/sb7Z86X7r/md+tvmj/2fxTnr+6ruu6
ruu6fidfV3Y9ytcdX/Xu+5/t89T+0vPJnK6vOt8oD33+dV3XdV3XdV3Xz/q6
sutRvunx3X62z1P7M72/mXfXX51vlIc+/7qu67qu67qu62d9Xdn1KF8W/2j+
aP9V+Xd//+7+Vf1u851yfnRd13Vd13Vd15/X3wFUL8hc
     
     "], {{0, 0}, Offset[{910, 77}, {0, 0}]}, {0, 1}],
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{910, 77},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
    PlotRange->{{0, 910}, {0, 77}},
    PlotRangeClipping->True], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJzt1kGu1DgUBdBC9IxVsBL2wBKQesxi2ChLgAmT0nc7rfzLe698IiFUOb7O
jeNK/c/fvn/99+Pj8fj0+9+PD4/HP48/x88vjzeP3fnn/6fk057uV71+0/Np
n9ZvNd7+rMmn3fupdz7t0/qtxk/tV72/Ts+nvbpf9fqenk979353vfr5nZ5P
+6v3Oz2f9up+1et7ej7t3fulfXXfu8/vdf2dV++/6fm0p/tVr9/0fNqn9VuN
77o+0/Np9/7pnU/7tH6r8fZnTT7t3k+982mf1m81vqrfzu/2r95/p+fTXt2v
en1Pz6e9e7+7Xv38Ts+n/dX7nZ5Pe3W/6vU9PZ/27v3Svrrv3ef3uv7/9Wn7
tzqf9nS/6vWbnk/7tH6r8fZnTT7t3k+982mf1m81vsvfX6vzU/dfdT7t3n+9
82mf1m81vuv6TM+n3fundz7t0/qtxtufNfm0ez/1zqd9Wr/V+Kp+d/3u/VXv
z9Pzaa/uV72+p+fT3r3fXa9+fqfn0/7q/U7Pp726X/X6np5Pe/d+aV/d9+7z
e11/1WPXi3POOeecc85P8edjd3413y6fnv/0fNo9/975tE/rtxrfpd+0/TXt
+Xs/9cqnfVq/1Xj7syafdu+n3vm0T+u3Gl/Vb+d3+3fff9X9Ts+nvXu/nVc/
n+n5tFf3q17f0/Np797vrnf7+2i33pxzzjnnnHPOOeecc84555wn/PnYnV/N
l87f9er+1fm0p/tVr9/0fNqn9VuN77o+p+fT7v3VO5/2af1W46f2q95f1c+/
uv/0fNpfvZ/8vXzau/fbebffr916cs4555xzzjnnnHPOOeecc84555zzx5vH
7vxqvu75tKf7Va9fdT7tnl/vfNqn9VuN73r96v1TnU+791fvfNqn9VuN/1v9
duvFOeecc84555xzzjnnnHPOOeecc84555yf7M/H7vxqvlfPp72639V9UnV/
0/NpT/erXr/p+bRP67ca/17X7/L7yjnnnHPOOeecc84555xzzjnnnHPOOeec
c875JH8+dudX88n/9/m0v3q/6fm0p/tVr9/0fNq799v51d+pq/N3+X3lnHPO
Oeecc84555xzzjnnnHPOOeecc84553ySPx+786v5dvn0/NPzaa/uV72+0/Np
n9ZvNf7q/F3ev5xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc97Fn4/d+dV8
6fxdT1+/en2q82mv7nf1e3R1/i7ff84555xzzjnnnHPOOeecc84555xzzjnn
nHPOOef8rWN3fjVf93zaq++vOl/t6f5Xv0dX5+/y/eecc84555xzzjnnnHPO
Oeecc84555xzzjnnnHPO3zp251fz7fLT56/Op/1vr/9q/NX5u3x/OOecc845
55xzzjnnnHPOOeecc84555xzzjnnnPOZ/gvPgD7z
     
     "], {{0, 0}, Offset[{806, 22}, {0, 0}]}, {0, 1}],
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{806, 22},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
    PlotRange->{{0, 806}, {0, 22}},
    PlotRangeClipping->True], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJzt1kFOAzEMheGRYMcpOAl34AiVWHMcrskR6IZNVOt1cBI/lz8SQs03jjOO
G3i9fL5/PB3H8XL9+br+PB+/4/vtuDnU/Pi7S3zWu+eP4tTne9c/m99t/9X9
WX0+yt3qw/2xN797f46u3hfHcRzHcRzH8cfx8bnoc3a9R4nPevf8qs+y+zub
323/1f1ZfT7K3erD/bE3v3t/Zt29PtX9737+bvXhftqbn/70js969/zV/em+
/+r+rD4f5W714f7Ym9+9P2e7W33cz6/6++nen2714f7cm9+9P5VX9091fNa7
56/uX/f9V/dn9fkod6sP98fe/O79edZVPXAcx3Hc2ceh5qP1zsZHz0fxWZ+9
/27xWe+ev7r/lLu/X3X//rfz6xaf9e753ftzdJf/P3Acx3Ecx3F8po9DzUfr
7Y6Pno/iV7v7+3F+OXer3+74rHfP79a/Ln8/cBzHcRzHcRzHXXwcaj5aT8Wv
Xv/e9/zr/s7m313f6vdX7lYft/5/9Pxu/ely/+I4juM4juM4juNzfBxqPlpv
dXzWV+efXZ/oedf6dI/Pevf81f0X7aP6fsRxHMdxHMdxHMd7+DjUfLSee3zW
u+fvHp/16vzKZ9c3en7W/l3uLxzHcRzHcRzHcRy/NdR8tJ6K775+dXzWu+e/
t49n7d/l+4njOI7jOI7jOI7juPZxqPlovdXxWa/ef/X7K1+9v9n1i56fVR+X
7yeO4ziO4ziO4ziO49rHoeaj9VR89/VX7686/+z6RM/Pqo/L9wfHcRzHcRzH
cRzH8Qr/AT8UZRA=
     "], {{0, 0}, Offset[{906, 66}, {0, 0}]}, {0, 1}],
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{906, 66},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
    PlotRange->{{0, 906}, {0, 66}},
    PlotRangeClipping->True], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJzt1UtOxTAMQNFKMGMVrIQ9sAQkxozZNUvgTZgEjFPc9Cb0RkLo5TSOnU/7
+PL2/Hq3bdvD7e/99ne/fbWPp+3HlvW3/3vHj46/+viq0/nT9Wce5ZX9nmV+
en/o/aXzp+vPnD7fVb/6/aDPF50/XX/m9P26+v2oOp0/XX/m9Pke7fT+0ft/
9v5m9a7ibfN8HBN/tfWdbX+uVn/m9PerOj+9P/T+0vnT9WdOn++qez9qTu8/
vX70+KrT+dP1Zz7b+d47P70/9P7S+dP1Z06f76N9tf2lzwe9/77fak7vX+b0
+tLjq07nT9efOX3+fX/VnM6frj9z+nzv9Ww9dV3XddbblvVH8bLxe+NHzx8V
/+z6R6/f3vmj58+af7b18/z93l91On+6/szp+xnlQX+fdF3XdV3Xz/a2Zf1R
vNHjq07nT9efee85cf3/5nT+1l8bT/vo+xnNQ3+fdF3XdV3Xz/a2Zf1RvNnH
V53On66/6nT99PrR+Vt/bfzs3vue740/y/dJ13Vd13X9bG9b1h/Fy8aPjk+P
H+10ffT60PnT9Ve99z3QG3+W95eu67qu67quH+lty/qjeKPHV53On64/c7q+
1dYner43/iz3X9d1Xdd1Xdf17797+6N42fjV44/Ob/T89PjR3nvOe+PPcj91
Xdd1Xdd1XT/P25b1R/FGj6fj0/PPvv5754+e740/y/3RdV3XdV3Xdf3/eNuy
/ije7OPp+FVfvf7ec9gbf5b7o+u6ruu6ruv6yv4JbnvaXQ==
     
     "], {{0, 0}, Offset[{968, 88}, {0, 0}]}, {0, 1}],
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{968, 88},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
    PlotRange->{{0, 968}, {0, 88}},
    PlotRangeClipping->True], ",", 
   GraphicsBox[RasterBox[CompressedData["
1:eJztlsFtA0EIRVdKbq4ileSQDlxCJJ/TekqIL74gE5ZhdsHDQ7Is72M+aGDB
H98/19vbtm2X++fr/nnfHvb7uT0167n8Puu8V1/zH9X3xud+58a3eDS/7Pun
fvvymRXfum84HD7OpZ/2O6pX5bxXX/Nfdf5m14f67svnrPPUf258i2fnl12/
7vWXPPv/wSwujfn1/LlXX/Nnfo3Fp/98+pp/1/6zeHZ9u/VHlf0HP5ZLW7X/
2U8+fc2/yvzX/KvGz64//bMvn6r3T/325XNWflX2d3UujfcjJ372/a5enyin
vj59zf9V6+flVeY7HJ7BpZ/2O6pX5bxXX/NfdT5G9bPr270/LD67vtHz9Mfc
+BbPzo/+8elr/lXni+TR+9X8q9a3e39k58d+i5336mv+XfvP4vSXT1/zr7bf
rLzhx3Jpq/Yv88Onr/m/6vzPjk//+fQ1/679p+WRvT/g8P+4NOZTzfjsJ5++
5t9lP1WZL3A4vC+XdtR+yD7v1df8R/WjPJpf9v13r5/FZ+dfZb7A4fC+XNqq
+yGaf/Z5r77mP6of5bPzq/L+wOFwOPxB/gC8OCEk
     
     "], {{0, 0}, Offset[{938, 154}, {0, 0}]}, {0, 1}],
    Frame->False,
    FrameLabel->{None, None},
    FrameTicks->{{None, None}, {None, None}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{938, 154},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
    PlotRange->{{0, 938}, {0, 154}},
    PlotRangeClipping->True]}], "}"}]], "Output",
 CellChangeTimes->{{3.739872795354082*^9, 3.739872802088291*^9}},
 CellLabel->
  "Out[135]=",ExpressionUUID->"715d1696-78dd-4bc6-8b85-905699338a1b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.739825389419155*^9, 
  3.739825389588488*^9}},ExpressionUUID->"615d303a-241a-43f8-a6f1-\
0711cb1592c4"]
}, Open  ]],

Cell["Random SK combinators ()", "Subsection",
 CellChangeTimes->{{3.739825132754468*^9, 
  3.7398251387012997`*^9}},ExpressionUUID->"4d0b8b23-908c-45ca-a37f-\
5139bc0264f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Investigating growth of SK combinators", "Section",
 CellChangeTimes->{{3.739805558312024*^9, 3.739805565233453*^9}, {
  3.73980570435955*^9, 3.739805704766777*^9}, {3.739825115129383*^9, 
  3.739825123963097*^9}},ExpressionUUID->"3a23b572-89cd-4fc9-8d1c-\
9dc750dc94c5"],

Cell[CellGroupData[{

Cell["Halting Graphs", "Subsection",
 CellChangeTimes->{{3.739925476130082*^9, 
  3.739925477779193*^9}},ExpressionUUID->"e1f31e58-9667-4ec1-9dcf-\
c28137665188"],

Cell["SKLengths generates a table of length of combinator", "Text",
 CellChangeTimes->{{3.739825399493352*^9, 
  3.7398254116955547`*^9}},ExpressionUUID->"a7bd15c6-9fee-4535-89e8-\
4a9da75c29bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"SKLengths", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"k", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"k", "[", 
             RowBox[{
              RowBox[{"k", "[", 
               RowBox[{"k", "[", 
                RowBox[{"s", "[", 
                 RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "[", "s", 
              "]"}], "]"}], "[", 
            RowBox[{
             RowBox[{"k", "[", "s", "]"}], "[", "k", "]"}], "]"}], "[", 
           RowBox[{"s", "[", "k", "]"}], "]"}], "[", "k", "]"}], "]"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"k", "[", "k", "]"}], "]"}], "[", "s", "]"}], "]"}], "[", 
          RowBox[{"k", "[", "k", "]"}], "]"}], "[", "k", "]"}], "]"}], "[", 
       RowBox[{"s", "[", 
        RowBox[{"k", "[", 
         RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
      RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], ",", "40"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.739805705597587*^9, 3.739805823107706*^9}, 
   3.739805961161746*^9, {3.739805997795199*^9, 3.739805999611822*^9}, {
   3.739806042346089*^9, 3.739806059528076*^9}, {3.739806127652773*^9, 
   3.73980614203404*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"eb6340b1-b051-419a-af62-8e7cc87804ac"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxd0jsKwkAYReEfK0sLCwsLIyIqIsZXjK8ZH6AoNoIbEKzdQpbsEqLmquQM
hMOX20wxwe1xuRfMrP363s3O033ir14/1LNaVPdqSd2pZdWpFexV9ajWsiYn
uS4f5AbcVGO15XP3tg7chXtwHw7hATyER/AYnsARPIVjeAbP4QW8hFewg33e
CWxr7LBtsMO2xQ7/3sV3/zsFuuhCOg==
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 41.}, {0, 85.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.739806142733952*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"f2bd913c-c291-4ebe-8a52-47e1ec318b37"]
}, Closed]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.739801932458644*^9, 
  3.739801933140833*^9}},ExpressionUUID->"5c8d4e0b-ed1c-43a3-b97d-\
45ffe526cf09"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"exprs", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomSKExpr", "[", "40", "]"}], ",", "10"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImageCollage", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"SKLengths", "[", 
      RowBox[{
       RowBox[{"exprs", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", "40"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.739806555116588*^9, 3.739806595739133*^9}, {
  3.739806629510995*^9, 3.739806657337747*^9}, {3.7398067007945843`*^9, 
  3.7398067013236217`*^9}, {3.739807331208415*^9, 3.739807335507842*^9}, {
  3.740088568142768*^9, 3.740088570173761*^9}, {3.7401358314502974`*^9, 
  3.740135843226812*^9}},
 CellLabel->
  "In[510]:=",ExpressionUUID->"9a02eef6-b2ed-4120-ae3d-6951b951baa4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Wl3Yte97/s9zr13jPPwvoX7EqKiEQIhhECAQIi+kRCiE9W6yuUqV5Wr
cTmOEw9vx9mJs3284zTbaewkdhw79jhjnHf3v8yJhKRCVUJiobnW4vvgk0KL
JnMuyT8mf+aa8//r3Cn0/8e//du/3fufg/8ptB+uvvFG+63i/zv4oXz73vWr
t/d7qdv396/uv7HY+b8GB//P4LGf/z//9m//9+D2lStXBAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAIA1+v2+8TYAAMaRzwBgT+QzAAAAMDnGzwBgT+QzANgT
+QwAAABMjvEzANgT+QwA9kQ+AwAAAJNj/AwA9kQ+A4A9kc8AAADA5Bg/A4C1
/JGE7HeLo59D8bT0Blmr8rbXLA+OLejj6WpTH+v32xIJ+cdeh3wGAGuRzwAA
AMDlY/wMANZZjmeGdYxOcXRsb/BzOhbUt/OtnmznViUQU4+riap1LCfzJ+oh
h8hnALAO+QwAAACY0T+Y88E4GgCmszDQ6DQkX9o5Ua/YyKRGt+P1jrQr6xKr
tKRViY2Od/s98XgWTrweuQwA1iCfAQDTIPcBYDrkKABYLLw2yNbS2PGQnnvX
k2DAK7FKU/KJpdF95W7r1PrGi4z3DQCcjHwGAFwAOQ8A0yFHAcBa/khyrL6R
LO3odURVbUP9vF7ZO1HfqPW7zK8DgBkjnwEAF0HuA8B0yFEAsJY/unGivpHZ
6Uqvc7SvlRJKFgfHcvq2LxQZPH5v7HXIZwCwFvkMALgIch8ApkOOAoC1vJHE
aH3RYe3i5DXau6XhuqL53c7oWCoaHHudV+azxyP+YFS8/oDx/gKAU1xKPg+o
fPb4lyxtOwDAHNZbAoDpTJOfgZWEZNrvSDCaMd4PAHAij8fz0vtelc+htS1p
/vh/SzTXNd4HAHCji+bz8npxmM9bHeN9AABYg7ozAExnmhzN3/ilHl8nt980
3g8AcJtX5XMgnND5Gy/dNN5OAJg3r8pn32JI53Oq8ZbxdgIArEH9GQCmc9Ec
XUnV9Nhaj6+bT4z3AwDc5pX1jaUVnb+J+j3j7QSAeXPW+Ln26EvJ3/yV8XYC
AKxB/RkApnOhdYw8Hinf/1zqb/1NGs9/kEz7x8b7AQBu86pc9nj9fP8HAIac
NW7O3fil1B99abydAABrUH8GgOlcJEfV9d6q7rGW35edp99Itvcz4/0AALc5
K58bb/9LNjvvGm8nAMybs/I51Xikx8rexZDxtgIApkf9GQCmc94cVePo7Sf/
kPLd38nC4Gc1Bzp37efG+wEAbnPW9Snbj7+S7NUPjLcTAObNWfms9h5U9We1
F6HptgIApkf9GYCVYsUbUnr9s7maq3DeHM203xmOp+MF/XP1zT9J4dbHxvsB
AG5zVj6r/M3fJH8B4LKdlc9LkQ32iAUAF7nQuqUA8BJqHePG8+/1+sam23IW
fyQh+93i6OdQPC29gzzsNcuDYwv6eLraPMjJtkRC/rHXOU9+qrG0Oj9b/X8f
HSu/8Tsp3vnU+PkAALc5K59Ld38rxdd/Y7ydADBvzhw/e7yskQQALkLdGYCV
1D7V1Qd/Md6OsyzHM8M6c6c4OrY3+DkdCw770erJdm5VAjH1uJqoWvRyMn+i
Xn3oPDmq5jnvPPtOFkNrR8dufyrlN35v/JwAgNuclc+FW7+W6pt/NN5OAJg3
k4yfy/f+wHeEAOAS1J8BWKl8/3MpvPaJ8Xa8ilpzudFpSL60c6KevJFJjW7H
6x1pV9YlVmlJqxIbHe/2e+LxLJx4vUlzNJJu6OsIU9sPThwf1uz/bPy8AIDb
nJXPW9c+lPpbfzfeTgCYN5OMn9X+3DvPvtVjd9PtBQBMh/ozACupMeJm7z3j
7ZhIeG2QgaWx4yE9N7onwYBXYpWm5BNLo/vK3dbF6s8er15ntPbor+LxLZ64
b+sq9Q8AmIWz8jnT+Yk03v7OeDsBYN5MMn5er97RczcC4bjx9gIApkP9GYBV
fIGwHiMmt9803pZJ+CPJsfpzsrSj13lWtWf183pl70T9udbvnlp/ftGL/1/r
leH4We3l/eJ92e5PZefpP42fDwBwm7PGuRvNJzqbr3h9xtsKAPNkkjpEOFnT
GR3J7BpvLwBgOtSfAVgluJbVY8S1/L7xtkzCH904UX/O7HSl1znad1AJJYuD
Yzl92xeKDB6/N/Y6Z+Wob2lFdp5+o9evW1hYGLs/03oujec/nHofAODizsrn
RP2+ft9S35+abisAzJNJ6hD+4KrO6ET9nvH2AgCm86r5egBwHqubTT1GXE6U
jbdlEt5IYrT+87C2fHIO825puO5zfrczOpaKBsde56z83Oy+q89LKJY79f7U
7mN9/4vrcgAApnPWODdevnVwbfe68bYCwDyZtA6x/eQfeq060+0FAEyHujMA
q8TLr7n2c7zH43npfa/K0WA0o+c2q/1TXvYY5t8BwGycNc6N5no6f9X1O6bb
CgDzZNI6hNrXXO2hYrq9AIDpUH8GYJX03rODdTT9xttymV6Vo6qmnGm/o68f
fNljDteGXlyOGe8LALjJWeNctaaoyt+wQ67bAQC3mLQOsTH4fKHmcnCdIAA4
G/VnAFbJXftI6m/9zXg7Ltu0ORorXhvOG4+kjPcFANzkrHxWdWf2tgKAyzfp
+HmtcJXrVADABag/A7BK+Y3f6T32TLfjsk2bo9Gt7nB96LUt430BADc5K58P
982N5pyxby4AuMWk42e1f4qT9jcHAJyO+jMAq2w/+Vq2+v9uvB2Xbdp9XA/3
beT6bwCw1lm5rPYrUPkbL9003lYAmCeTjps9voBef0Ot82e6zQCAi6P+DMAK
Xn9Af4ZP7T423pbLNm2OhpNVfe5WNraN9wUA3OSsfPYtrej8VfvAmm4rAMyT
84yfqw/+LPlb/2m8zQCAlwsnMrLbbEq1cPq6otPO2wMAJbCS1J/hY8Ubxtty
2abNz1C8oM/darZlvC8A4CZn5rPXp/N3o/nEeFsBYJ6cZ/ycu/Zz2X78lfE2
AwBO548kB7m+LT6fT7KtntQyK2OPoe4MwAorqdpwD6fU/M3hnTZHl1YzB+va
kccAYKVJ8rnx9neS6fzEeFsBYJ6cZ/yc3H5Tj5V9SxHj7QYAjItVmpJPrkk4
OhAKicfjGXsM9WcAVogVr+lx4dJq2nhbLtu0Ocr6owAwG5Nc51d/6++ydfVD
420FgHlynuuwI5mDvVKSVePtBgCM29zt6TyvlCrSG/ybjgXHHkP9GYAVUo1H
elzo9Y/njNtNm6P+YGS4/mjtrvG+AICbTJLP1Tf/KIVbHxtvKwDMk/OMnxcP
5mqsV+4YbzcAYNzGTkc2YwF92xvdkE49MfYY6s8ArJDtvy87T78x3g4Tps1R
VbPXezfuPDTeFwBwk0nyufT6Z1K6+1vjbQWAeXK+8bNHdp59K9nuT423GwDs
qLjbGV1TkkuOr70czdWOXXeyJx7PwsSv7Y8kZL9bHP3sC0WkffBazerw+vdI
oSF7pZi+HU6XpVWNj70O9WcAVije+VTKb/zeeDtMmDpHPR5df07vPTPeFwBw
k0nyWc19rr75J+NtBYB5ct7xs/qucF4/awDAq4QztVF9OBBJ6Pryi48pdvcl
G1+RxcVFCYVCE7/2cjyj87rXKZ54rXxyWRYGt2uD+zaiAX272ukN2rE/ePyu
+Hzj9e3j6y5RiwZwUfVHX0ru+kfG22GCFRnaePtfstl913hfAMAOJplnoaSr
zYP8bUsk5B97nUlyOXv1A9l+/JXxPgOAE1xmPh+n9olV4+Urp+xpBQDzbCkS
k1hkSd9WdeB+vzc2v1nl9FYyIRvp5Im9AX8UCEq33xjcXpAfLS4OHtcY3ade
q9FpSL60M8r9hcFze/2ufrz6OVpqSruyPnrOafsOHqLmDGBqHq80nv8gG3M6
f9eKHN1+8rVsXf3AeF8AwLRJ51kEYupxNVHj3+Vk/kQ95NAk+bzZeXdY07BB
3wHAzi47n49T+3Sr6wUDK0nj5wEA7Krc6UmrmjpxzBNc1plbL+UkV6rr28GA
d3R/qrQ7ONaV7uB4ObM2/rrhtcH9JX1b1Z9b3aO9YAOxTdk7Za2N01B/BjCt
xeW4Hg/GK7eNt8UEK3K09vALyV3/hfG+AIBJ55lnEau0pFWJjZ7bPWWuxyT5
nGo+0e9hV7zj8/MAAEMm8vm4cKKss3p1c/y6cgCYd77gsuyp61AqG2c+NlHv
SD27OvpZzXvuHawLfZjnx/kjyRP1567+fnF432J8i/ozgEtzNB5sGm+LCVbk
aOX+51J47dfG+wIAtjDBPItYpSn5xNLoeLnbulB9I1m/p9/DfEvje7UAAF5w
ifl8nC8QZr9uADiFWgdJZepW4uRYVq2FoQzrx0c148rgsZuxgL59WHsupWOS
1POgG2Ov749ujHJfaQwevxb26dvZVu9ELftVqD8DmFY0t6/Hg8G1rPG2mGBF
jqo9VRTTfQEAO5hknsV6Ze9EfaPW755a3zhrr5N4+dbwmu5wwni/AcDuLjOf
X1R/6++Su/4fxs8BANjJ5m7vhTxt68yNVdrSPrgWJVtvje5vVtInnh+PH9Wt
V2PjtWTvC+v+B6LJ0Wv1moWJ20n9GcC0EvX7w7ljgbDxtphgRY4WXvtEKvf+
23hfAMAOJplnEUoWpdfJ6WPDeR/j12RPks/RXHeuv0MFgPO4zHx+Uf7mx3rN
OtPnAACc6FV7A17G61F/BjCtze570nj7O1lYGF8raB5YkaNqLgfjaQAYmnSe
RX63MzqeigbHXmeSfI6kG7r+HE5UjPcbAOzuMvP5RRu7j3Vee/3jrwcAsLfz
XO8CAKfJ3/pPqb75J+PtMMWK/NzqfyDbj7823hcAsLPT5lm8au7FJPm8vF7S
9YxIZj73MAAAK8win190eL1KKD759d4AAHug7gxgWtUHf5bCrY+Nt8MUK77H
y3R+oueQm+4LALjJJLkcjGZ0PWMtv2+8vQAwLy4ybl5aHeZ1rHjdePsBAOdD
/RnANBYGGm//SzY77xpviylW5Gh675keT1+xeE0mAJhnk+Tz4nJc5+965bbx
9gLAvLjI+Nnj9Uvj+feSab9jvP0AgPOh/gxgGv5gRH9uT9TvGW+LKVbkaKrx
SJ9Hj39p6tcCAAxNks/exZDO3+T2m8bbCwDz4qLj58r9z6V451Pj7QcAnA/1
ZwDTCMVy+nN7dKtrvC2mWJGjidob+jz6liLG+wMAbjFRPnu8On/VdSim2wsA
8+Ki42e1Z8rO02/mdt9zAHAq6s8AprG6uXewD0jReFvOy//C/t2+UETaB+s4
N6vp0fF0tXmwvnNbIiH/2OtYkaPx0k19HgPhdePnBQDcYtL1+XeefSub3feM
txcA5sVF909J1O7qMfPicsx4HwAAk6P+DGAa69U7jhwDLsczOv96neLoWLG7
L/nksl7Tuja4byMakEBMPa42uH9BlpP5E/XqQ1bk6Frhqj6PS6vpqV8LADA0
aT7X3/qb5K793Hh7AWBeXHT8HElt6zHzysa28T4AACZ30e8dAUDJtJ7rfUCc
tG+e3jOx05B8aWdUT14YtL/XV2uIDK/li5aa0q6sS6zSklblqLbe7ffE4zl5
vZ8V+bmabQ/nkcfyxs8PALjFpPlcvv+5FF77tfH2AsC8uOj4Wc150XvP1O4a
7wMAYHLUnQFMI3/jF1J7+KXxdlxIeG2QgSV9W9WfW93q6L5AbFP2qnGJVZqS
TxztCVjutmZSf1ZzONRYOpysTv1aAIChSfO5dOc3Ur77O+PtBYB5cdHxs1r3
Wa3/rNaBNt0HAMDkqD8DmEb53h+kePsT4+24CH8keaL+3NXrbAzvW4xv6frz
emXvRP251u+eWn9+0XnbEk6Udf05ktk1fl4AwC0mzeP8zV9J9cGfjbcXAObF
NHWI4p1PpXL/c+N9AABMjvozgGnsPP2nZHs/M96Oi/BHN0b1Z6UxyMO1sE/f
zrZ6Us+uSihZlF4np4+p/Qn7/b2x17EiR0OxnK4/R7c6xs8LALjFpPms5tFt
P/7aeHsBYF5MM37OtN/R6/95vOP7ggMA7In6M4CL8i6GdM00ufPAeFsu1P5I
4sR+goFocjR/udcsjI7ndzuj46locOx1rMjRQCSlz2WscM34eQEAt5g0nzPt
Hw/3MrBBmwFgHkwzfo4Vrx/s250x3g8AwGSoPwO4KDXm0zXTvLtyxHPKXoqn
HTtkRY76Q2v6XMYrt433HwDcYtJ8Tu0+1hns8QWMtxkA5sE04+dQvDC8bjDX
Nd4PAMBkplmvFMB8i6Qb7Jl3xZr6s29pZbiXd/2e8f4AgFtMms+J2hs6g/3B
iPE2A8A8mGb87PEvSeP5D5Lee2a8HwCAyVB3BnBR8fIt/Xk9sJIw3haTrMhR
NedOnctU4y3j/QEAt5h0nkWseOPg/SxpvM0AMA+mnQdXffOPUrj9qfF+AAAm
Q/0ZwEVt7D45uF550XhbTLIiRxcG1LnMtJ4b7w8AuMWk+az2flUZrPaCNd1m
AJgH046fs/vv633Qr1x5+Rp5AAD7oP4M4KK2rn4o24+/Mt4O06zK0Z1n38pm
7z3j/QEAt5g0n1c2tllPCgAu0bTj53j5teEehJGU8b4AAM5G/RnARZVe/0xK
d39rvB2mWbWOfv2tv+uavun+AIBbTJrLoXhR1zFWN/eMtxkA5sG04+bD3I5u
sQchADgB9WcAF6XmPlMvtS5Hqw/+LPmbvzLeHwBwi0nzeWk1resYsTzjYgC4
DNOOn9mDEACchfozgIvw+of75ak1oE23xTSrcrR87w9SvP2J8f4AgFtMms+L
yzH9nrZeuWO8zQAwD6wYP7MHIQDYRziRkd1mU6qF09dFsuq6cQDzRe3RpD6r
rzFXzLL8LN35Lynf/Z3x/gCAW0yaz77FkH5PS20/MN5mAJgHVoyf2YMQAOzB
H0kOcn1bfD6fZFs9qWVWxh5D3RnARcSK1/Vn9WB003hbTLMqRwu3Ppbqm38y
3h8AcIuJ89njGV7Tw3XcAHAprBg/H+5BGFhJGu8PAMyzWKUp+eSahKMDoZB4
POPfC1J/BnARmc670nj+vVzx+oy3xTSrcjR37SOpP/rSeH8AwC3Oc52fmkOX
7f7UeJsBYB5YcR02exACgD1s7vZ0nldKFekN/k3HgmOPof4M4CJKd3+r1ys2
3Q47sCpH1TWE20+/Md4fAHCL8+Rz7dFfJXf9I+NtBoB5YMX4mT0IAcAeNnY6
shkL6Nve6IZ06omxx1B/BnBuHo/sPPtONnvvmW+LDViVo5n2j4dzym3QJwBw
g/Pkc+Xef0vhNfaABYDLYNX4uXKfPQgBoLjbGV1TkkuOr728ksyP7s+fcv+r
+CMJ2e8WRz/7QhFpH7xWs5rWxyKFhuyVYvp2OF2WVjU+9jrUnwGc11JkQ1/r
Fi/dNN4WO7BqH9eN3Sf6vHq8fuN9AgA3OE8uF+98KuU3fm+8zQAwD6y8fnDn
2bfCHoQA5lU4UxvVhwORxCBf907cv+DzSbffk+WgT3zBZen1u+LxLEz02svx
jM7rXqc4Olbs7ks+uSwLg9u1wX0b0YC+Xe30Bu3YHzx+V3y+8dc/XjehFg1g
EtGtjq6TLq8XjbfFDqzKzuTOA31evYsh430CADc4Tz7nbvxSqg/+YrzNADAP
rBo/swchgHm3FIlJLLKkb6s6cL/fO1Ff9kc3BsdKo5/z3X3JHKyV8aNAULr9
xuD2gvxocVHa+vaV0Ws1Og3Jl3ZG9e0Fj0fXr9Xj1c/RUlPalfXRc07bd/AQ
NWcA53U4T9frH19Tfh5ZlaPr1Tv6vPqDUeN9AgC7ydZbB/MlupKMDt9/Trv+
77jz5HO2/75sP/mH8X4CgNPMOp9fhT0IAeBIudOTVjV14piqP7eOrcccrzZH
azUrqdKuzu/uIJfLmbXx1w2vjerXqv7c6lZH9wVim7J3ylobp6H+DOC8Cq/9
WqoPvjDeDruwKkdjxRvM3wCAU/gjyUHWDudjhPT6dcMx8GnX/x1/3nnyOd16
R+9jtbAw2fWIAIDLyedXYQ9CALii19XYU9/3VTbG7vPHMtKpH9WkE/XWifqz
mvfc098XqnU7xsfBw5w/qj93+7XRfYvxLerPAGZGzQ/buvah8XbYhVU5Gs3t
6/pzcC1rvE8AYCfDce9wrBscjKHVNYBnXf+nnCefU41HwzX4/UvG+wsATnEZ
+XwWtQehWsPf9LkAABPU9SYqU7cSJ/cVVGthKGqNjeO1ZVWnjoR8+vZh7bmU
jklSz4NujL3+i+t3NAaPXwsPn59t9aSeXZ2ondSfAZzH4nJMfz5P1O8Zb4td
WJWjq5t7+tyq6whN9wkA7ETVMtRYeb/b1pm7W4hNdP3fefI5Ubt7sAbSZGNo
AMDl5PNZ2IMQwDzb3O29sLdfW6//HKu0pV2J6cfEcrXR/duF2Innx+NHdevV
2Pg42BtJjNZ/VgLR5Oi1es3CxO2k/gzgPCLphv58vrKxbbwtdmFVjq6kasNz
m6ob7xMA2Ems0pLWwdw5Vddo93vi1Xt5v/r6vxf32X5VXseK11kDCQDO6TLy
+SzsQQgAl+9Vew2ehvozgPNIbt9nftgLrBg3K4f7p6h50Kb7BAB2oq7d7lSH
+6aotUTbel9vz5nX/50nl6NbneE1KLGc8f4CgFNcRj6fZXmdPQgBwO6sqpsA
mA+56x/J9uOvjLfDTqzKT7Xusx475/aN9wkA7GTB55PtztG1hZXs8LrBs67/
O08+q+t6VAaHkzVL2gwA8+Ay8vks7EEIAPZH3RnAedQefin5mx8bb4edWJWj
gZWErn3ESjeM9wkA7Gh4nd/4vtwvu/7vPPm8HC8Mr0HJtoz3EwCcZpb5PAn2
IAQAe6P+DGBS3sWQ/myeajwy3hY7sSpH/cGoPr/r1deN9wkA3OA8+bwU2Rh+
B1i4ZrzdAOB2Vtch2IMQAOyN+jOASS0nyswNO4VVOXpY30/uPDDeJwBwg/Pk
sz90+B3gHePtBgC3s7oOES/fYg9CALAx6s8AJhWv3D4Y1yWMt2VWsvXWwVp1
XUlGg/qYLxSR9sH6dc1qeuw5luWo16fP70bzifHzAABucJ589vqDw2t8dh4a
bzcAuJ3VdYjRHoQ59iAEADui/gxgUm6/rs0fUfukNPTtUDI/uF3St4vdfckn
l/We3rVBZm5EAyeeZ2WONp5/L5n2j42fCwBwg/Pls0fXLtKt58bbDQBuZ3Ud
wusPsAchANgY9WcAk6rc/1xKd/7LeDtmZVh/runbwVhG9rtFWfB4pNdX8yiG
+6lES01pV9ZPPM/KHN1++o2u85s+FwDgBv2Da1cmzekdMhgALsV583kS7EEI
APY1i9wH4EJe/3Burovnhala894gC/e7bZ2Ju4WYPtbqVkePCcQ2Za8aP/G8
4zk6bZ7WHv1Vtq5/ZPxcAIAbnDePaw+/lNz1/zDebgBwu1nUH7K9nw2v1fS4
81pNAHAy6s4AJhFa29LXJa8Vrhpvy6zEKi1pHcxtVnXndr8nXp9PugdzopXF
+Nap9Wer2lB9849SuPWx8XMBAG5w3nwu3/uDFG9/YrzdAOB2s6hDjPYgjKSM
9w8AcBL1ZwCTUHVnNZ4LRrPG2zIram2NTnW4t6Ja61nVnz0ejzQGObkW9unj
2VZP6tnVE8+zMkfLd3/n6jVOAOAynTefVe1Z1aBNtxsA3G4WdQj2IAQA+6L+
DGAS6dY7ev0Nj9dvvC2zsuDzyXanN1pDo5KN6eOBaHJ0rNcsjD3Pyhwt3v5f
1D4AwCLnzWe19kbt4RfG2w0AbjeLOgR7EAKAfVF/BjCJ4uu/kcqc1EU9es24
hZccH3+8lTmav/FLqT6g9gEAVjhvPqu9B9UehKbbDQBuN6s6RPn+5+xBCAA2
RP0ZwNk8ei+Pzd7PbNAW+7EyR7eufij1t/5uvE8A4AbnzWe1x666dlu975lu
OwC42azqEOxBCAD2dHhNOXVoAC+zFEnpz+Px8mvG22JHVubnZu+94ZjZBv0C
AKc7bz6ndh7q9zuvP2i87QDgZrOqP7AHIQDYE3VnAGeJbnX0OG55vWS8LXZk
ZY6mD+beLdigXwDgdOedZ7FevaMz2B+KGm87ALjZrObBsQchANgT9WcAZ0nt
PtbjON9iyHhb7MjK8XOq8ZY+1x5fwHi/AMDpzpvLscI1ncFLkQ3jbQcAN5tV
HYI9CAHAnqg/AzhL4dbHUnvInngvY2WOJur3hrX+pRXj/QIApztvPq9mWzqD
Q/GC8bYDgJvNsg7BHoQAYD/UnwGcZfvx15K79nPj7bArK3N0vXJb1z4Wl2PG
+wUATnfefF5J1XQGr2xsG287ALjZLOsQ7EEIAPZD/RnAq/iDUf1ZPFm/Z7wt
dmVljnLtNwBY57z5HIrlhuuGbnWMtx0A3GyWdQj2IAQA+6H+DOBV1Bww5oK9
mpU5erjXo6qBmO4XADjdefM5sJLUGRwrXjfedgBws1nWIZbjBfYgBIBLFk5k
ZLfZlGrh9O/+ZrXvLAB3SB6sR6zmQZtui11ZmZ+RdEOf7+VE2Xi/AMDpzpvP
/uCqzuBE7a7xtgOAm82y/jDcg/D74RrQHq/xvgKA2/kjyUGub4vP55Nsqye1
zPh+VtSdAbyKWvdZrf9suh12ZmWOhpPVg/nmO8b7BQBOd9589viXdAanGo+M
tx0A3GzWdYjDNTgy7R8b7ysAuF2s0pR8ck3C0YFQSDynrL9P/RnAq9QefiGF
Wx8bb4edWZmjoVhej5VXs23j/QIApztvPi8MNJ7/IOnWO8bbDgBudhl1iGz3
p8M1lfLUPABgljZ3ezrXK6WK9Ab/pmPBscdQfwbwMt7F4HAe2O5j422xMyvX
MQquphknA4BFLpLP20/+Idn++8bbDgBudhnrgHq8find/a003v4Xe6sAwAxt
7HRkMxbQt73RDenUE2OPof4M4GWW10vMxZ2AlTkaCMf1OVfXDJruFwA43UXy
ufrgL5K78UvjbQcAN7usOoTaw6b+1t+l/uhL8S2Nr0cKAG7hjyRkv1s89b5o
rnbse7898XgWLvy6vlBE2gev1aym9bFIoSF7pZi+HU6XpVWNj70O9WcAL3O4
btpS5PT9SzFkZY76liIHe1+9YbxfAOB0F8nn8hu/H+5ZZYP2A4BbXWYdIhQv
6jnQ7EcIwK2W4xmdq71O8dT7i919ycZXZHFxUUKh0FSvq14rn1zW69bVBvdt
RAP6drXTk/3Bff3+rvh84/Xt49e9UIsGcNzW1Q9k59m3g3Ha+NrxOGJldrL3
FQBY5yL5XHjtEynf+4PxtgOAm1127SFeusl+hABcSe9f0mlIvrTz0vnPar7y
VjIhG+nkib0BfxQISrffGNxekB8tLg4e13jl6y4Mntvrd/Xj1c/RUlPalfXR
c07bd/AQNWcApxrkxvaTryV3/Rfm22Jzlubo4LyrsfHG3jPj/QIAp7tIPueu
fyS1R3813nYAcDMTdYjN3nt6nL1WuGq8/wBgufDaIFtLY8c9wWWdufVSTnKl
ur4dDBxdC5Iq7Q6OdaU7OF7OrL3ydVX9udWtju4LxDZl75S1Nk5D/RnAaZbj
heE+eMVrxttid1bnaOPt7yTT+YnxfgGAnaznqqPr9XLJ4Rqep60/d9xF8nmz
9zPZefpP4/0FAKe4rHyemtcnpdc/Yz9CAK7kjyRPrT+/KFHvSD27OvpZzXvu
HawLfTiv+WWvq+rP3X5tdN9ifIv6M4CpqPUfVP3ZH4oab4vdWZ2j24+/lq3+
B8b7BQB2ofY9ORwT+/QcjOG+uKetP3f8eRfJZ3X9iXr/Y+0pADjbZeazJe0N
rg73I3zrb3rfFdPnDwCs4o9unKg/q7UwlGH9+KhmXBnk72ZsmMmHtedSOiZJ
PQ+6cebrNgaPXwv79O1sq3eilv0q1J8BnKZy7w+a6XY4gdU5Wnv4heRvsO4J
AByKVfakml2TUDgia9FVCQb8Z64/p1wkn1PbD3T92bc4+d4sADCvLjOfrbK8
PtyPkPE2ADfxRhIn1n+OVdqD7I3p29l6a3SdSrNy8pqUeHxldHs1Nl5LfvF1
A9Hk6LV6zcLE7aP+DOBF/mCUPfDOweo9XCv3/lvvf2W6XwBgF9HCrs7Y7UpZ
tls96bUKE60/9+I+25Pk9Hrljn4PXFyOGe83ANjdZeazlVLNJzrrQ/Gi8XMI
AJfhVXsDXsbrUX8G8CK15rMaj6k1oE23xQmszlG1Lp1iul8AYBex0p506ke1
i0a/K16f78z15y6Sz7F8X78HBlfH1ysFAJx0mflsJe9iSLaffiPFO58aP4cA
MA9Mfd8IwL5y1/9Dtp/8g7UvJ2R1fuZv/aeU739uvF8AYBcrmar0Wnl9e8Hn
k16/p+dcnLX+3EXyObLZYk4cAEzoMvPZaonaXZ33kfT4eqcAAGvZIfcB2IfH
65edZ99Ktv++8bY4hdU5mrv+C6k9/NJ4vwDATnI7ndGciWJ6WMc4a/25i+Rz
OFnV9YiVjW3jfQYAJ7isfLaax7eo9yFUa99ducK8GwCYJTvkPgD7WEnV9Ofu
6FbHeFtMWM9VR2PlXHK4Dr8vFJH24Vr91fHrsa3O0a2rH8j2k6+NnwsAsJuX
rTP3suMXyedQLDfX74MAcBGXkc+zECteH2Z+bt94WwDAzeyS+wDsIb33tjSe
f6/XRDPdlsvmjyQGmbgnaq9uX3htcLutjxe7+5JPLsvC4HZtkJkb0cCJ51md
o5udd/We3KbPBwA43UXyObCS1LWIWPGG8fYDgFvZpg7h8Uj1wZ+l9vALueL1
mW8PALiUbXIfgC1UH/xlbvfhiFX2pJpdk1A4ImvRVQkG/Hr/7l6/K6omrR4T
LTWlXVk/8TyrczS990zXPq54vMbPCQA42UXy2R+M6AxW64Kabj8AuJWd6hCr
2eG6/+uV28bbAgBuZafcB2DWUiQ115+5o4VdnYnblbJst3rSaxV0/bnVrY4e
E4htnrp/94umaUdq56H+PXj9QePnBACc7CJ57PEFdAandh8bbz8AuJWd6hAL
CwtSvvs72X78lXj8S8bbAwBuZKfcB2DWeuWO/sy9tDq+xvE8iJX2pFM/qi03
+l3x+nzS7ddGxxbjW6fWny39PVSHe3H7g6uWvi4AzJuL5LOqQ6h1qDLtHxtv
PwC4ld3qEId7z6a2HxhvCwC4kVXz9QA4X+G1T6T26K/6s7fptpiwkqlKr5XX
txd8Pun1e3rPlMYgH9fCw/Xgsq2e1LMn68JW52e8fEuPfxfD65a+LgDMm4uO
c7cffy1b/Q+Mtx8A3MqOdYjCa7+Wnaf/FF8gbLwtAOA2dsp7AOaotR6Y73VF
cjud0Vi4mB7WmQPR5OhYr1kYe47VObqW7x/MQ88YPx8A4GQXzWe1F1X+5q+M
tx8A3MqOdYjgWlaPwdOt58bbAgBuY8fcB3D5Vjf39HhrZWPHeFtMU3Oez3Pc
6hw9/F2E4uO1bgDA5C6az2od0NKd/zLefgBwK7vWIbaufiiNt/8li8tx420B
ADexa+4DuFybvfcGY63v9L5LptviNFbnaCS1PfwuIFWz9HUBYN5cNJ/VNdjl
+58bbz8AuJVd6xCBlYS+JjTbf994WwDATeya+wAuz8JA/a2/S/7mx8bb4kRW
52g4Udb159XNpvG+AYCTXTSfc9c+Grwv/s14+wHArexch9jsvCuN5z/Icrwg
3sUQABjlGzCdi27PfQCXI7S2peudat87021xIqtz9PD3Ed3qGu8bADjZRfN5
s/ue7Dz71nj7AcCt7FyH8AdXB+8B3+nxOACYVnv4pfFctCr37bbvLIDLldx+
U+daIMw6ZxdhdY4GVpL69xErXjfeNwBwsovmcnrvmc7hKx6v8T4AgBvZvf4Q
2Wzpz0gAYNp65bbxTJyH3Acwe+W7n0n1zT8ab4dTWZ2ji8sxXfdYr9wx3jcA
cLKL5rMa66sc9rrkekcAsBvqEAAwX8h9YL75llb0Z+yN3SfG2+JUVueoLxDW
v5NE/b7xvgGAk130+hQ1z0TlsPo+0HQfAMCNuA4bAOYLeQ/Mt7X8vv6Mrfa8
M90Wp7I6Rz1e/8F3Ao+N9w0AnOyi+byW7+scDkYzxvsAAG5EHQIA5gu5D8y3
rWsfys7Tb1jjcgpW5+jCwoLeczvTfsd43wDAyS6az5FMU9efl9dLxvsAAG5E
HQIA5gu5D8wxj1fXnreufmi+LQ42ixzdefpPyXZ/arxvAOBkF83ncKKi68+R
dMN4HwDAjahDAMB8IfeB+bWSqunP12u5nvG2ONkscrT+1t/03HTTfQMAJ7to
PgfXsvr9MZrrGu8DALgRdQgAmC+s+w/Mr83ez6Tx9r/Euxg03hYnm0V+Vh/8
WfI3f2W8bwDgZBfN50A4oevP8dJN430AADei/gAA7hJOZGS32ZRqIXXq/eQ+
MJ/UHndq7Y3ctY+Mt8XpZvE9XvmN30vh9qfG+wYATnbRXPYtrej6c7J+z3gf
AMCNqEMAgHv4I8lBrm+Lz+eTbKsntczK2GPIfWA+He6ttLq5Z7wtTjeLHC3e
+VTXoE33DQCc7KL5rL6jVe+RqeYT430AADeiDgEA7hGrNCWfXJNwdCAUEo/H
M/YYch+YT2rPQbXHnfqMbbotTjeLHM3f/Fiqb/7JeN8AwMmmuT5FrU+12XnX
eB8AwI1YBxQA3GNzt6fzvFKqSG/wbzo2vsYreQ/MH49/SXaefSfZ/feNt8UN
ZpGjuWs/13sQmu4bADjZNPm8/fgryV79wHgfAMCNqEMAgHts7HRkMxbQt73R
DenUE2OPIfeB+RPNdfV1xZHUtvG2uMEsclTtDanW5zbdNwBwsmnyWV2Doq5F
Md0HAHAj6hAAYC1/JCH73eKp960k86NrTvLJ8bWZz/O6vlBE2gev1aym9bFI
oSF7pZi+HU6XpVWNj70OuQ/Mn/zNX8n2k6/lisdrvC1uMIscTbfekcbzH4z3
DQCcbJp8Lt39rZRe/8x4HwDAjahDAIB1luMZnau9TnHsvgWfT7r9niwHfeIL
Lkuv3xWPZ+HCr1vs7ks+uSwLg9u1wX0b0YC+Xe30ZH9wX7+/Kz7f+OsfX3eJ
9wDA/XyBZWk8/14yrGlpmVlkp9rzSs1Rv8L63ABwYdPkc+HWr6X65h+N9wEA
3IjaAwBYQ9V+G52G5Es7p85/9kc3BplbGv2c7+5L5mCtjB8FgtLtNwa3F+RH
i4vS1rdf/roLHo+uX6vHq5+jpaa0K+uj55y27+Ahch+YL7HidV3XDCfKxtvi
FrPI0eT2m/r35F0MGe8fANiFGge3++3RnI3Trv87bpp8Vvv01t/6u/E+A4AT
XGY+AwBOEV47UWc+pOrPrWPrMcerzdFazUqqtDt4Xle6g1wuZ9Ze+bqq/tzq
Vkf3BWKbsnfKWhunIfeB+VK8/cnBvnYv/14K5zOLa0jWK3d0/XkxdEr+A8Cc
2mr29Pj4sL5x2vV/xx8/TS5nOj+RxtvfGe8zADjBZeYzAGCcP5I8vf4cy0in
nhr9nKi3TtSf1bznnq5n7MnhvOaXva6qP3f7tdF9i/Et6s8AxviDq3pN4fTe
M+NtcZNZ5GiseEPXn5ciKctfGwCcaDVbk15rWxqdpq5vnHX9nzJNPm+M1kHy
Ge87ANjZZeczAGDci+tsqLUwFLXGxvHa8t4gfyOh4fj2sPZcSsckqedBN858
3cbg8Wvh4fOzrZ7Us6sTtY/cB+ZHvHJbf5YOxXLG2+Ims8jRtVxP/66C0azx
/gGAaeo67sPxcK7TFjV+nuT6v2nyOVG/r3PYFwgb7z8A2JWJfAYAjPNGEifW
f45V2tKuxIa3c7XRNdvbhdiJ58XjK6Pbq7HxWvKLrxuIJkev1WsWJm4fuQ/M
j/Ldz6T64AtZWJhsr1NMZhY5Gsk0dd1jeX38+hkAmDclPb6tSiaTk3a/J/VS
Vjxe75nX/724z/Z58jpevqVzOBBet6QPAOBGJvIZAGDeq/YaPA15D8yHxcHn
Z/U5OrXz0Hhb7M4O+6eEkzX9+1rZ2DZ+PgDAtHB0TRKJhKwnUrLb7UohM6wJ
n3X93zT5HM3tD69DWeM6FAB4GRP5DABwHnIfmA+J+r2D9YQ3jLfF7uywf8ry
elH/viKbLePnAwDspNhpyuH6dWdd/zdNPkcyuzqHw4my8T4DgBNcVj4DAJyH
3AfmQ/n+51K+9wfj7bA7u+yfEoxmdN1jLb9v/JwAgN297Pq/afJZ1Z3194CZ
XeP9AwCnmkU+AwCch9wH3G9pdVjLTNTuGm+Lndlp/5RAOKF/Z/HSTePnBQCc
app8VutuqBxW63CY7gcAuA11CACYL+Q+4H6pxlv6M/Tictx4W+zMTvun+IOr
fGcAAFOaJo8DB/smJGpvGO8HALgNdQgAmC/kPuBuCwsLUnv4hZRe/8x4W+zO
TvuneBeDuu6R3Hlg/LwAgFNNk88er1+vXbXz9J8SiKSM9wUA3IQ6BADMF3If
cLdQLD9cx6F8y3hbnMT4/iker/69bTSfGj8XAOBU0+azWgtp++k3Un3wZ/29
oOn+AIBbUIcAgPli5fXiAOwn3Xoujec/iD8YMd4Wp7vs/VMaz7+XTOdd4/0G
AKeyYpy7srGt30fzN381+Pn09wEAwPlQhwCA+ULeA+7l8QVk+8k/pHDrY+Nt
cbNZ5aj63WX33zfePwBwKqvyOVG/p69JSTUeGe8TALgBdQgAmC/kPuBesdIN
/Xk5kto23hY3m1WO1h59KbnrHxnvHwA4lVX5rPZS2BrksXpPXd3cM94vAHA6
6hAAMF/IfcCdFgaqb/5JW7BBe9xsVjlauf9HKdz6tfH+AYBTWZnPHv/SIJeH
+xEuRTaM9w0AnIw6BADMF3IfcCc151nN04oVbxhvi9vNav268t3PpHTnN8b7
BwBOZXUuL4bXR/sR+hZDxvsHAE5FHQIA5gu5D7hT/tZ/6vWD1RrQptvidrPK
0cJrn0j53h+M9w8AnGoW+ay+32U/QgCYDnUIAJgv7DsLuM/SalrPfd7YfWy8
LfNgVvmZu/FLqT74i/H+AYBTzSqfk6P9CN8y3kcAcCLqDwAwX8h9wH0ynZ9I
4/n3shhaM96WeTCrHM1e/UC2H39lvH8A4FSzyme1H2Hu2nA/QnWtirrmCACc
bKv/gSvyGQBgT+Q+4C6+QFgab3+na5em2zIvZpWjm933ZOfZd8b7BwBONctx
rtcfGK6TdP9zAHC8wmu/dk0+AwDsh9wH3CVxcE1wKJY33pZ5MascTe+9rX+X
rC8KABfDOnMAYE/kMwDMF/IecBGPV+pv/U1Kr39mvi1zZFY5mmo80vVnNcfO
dB8BwIkY5wKAPZHPADBfyH3APdZyPV2vXM22jbdlnswqRw/nsvuWVoz3EQCc
iHEuANgT+QwA84XcB9yj/MbvpPbor3oetOm2zJNZXT8YL7+m68+Ly3HjfQQA
J2KcCwD2RD4DwHxh3SXAHZbXi7pWuV69a7wt82ZW+blWuKp/p0uraeN9BAAn
YnwLAPZEPgPAfCH3AXfIXftIdp59K97FkPG2zJtZ5Wh0q3Owl2TOeB8BwIkY
5wKAPZHPADBfyH3A+dT6DI3nP0im/WPjbZlHs8rRSLqh68/hRMV4HwHAiRjn
AoA9kc8AMDv53c5orYteq6CP+UIRaR8ca1aPrrFOV5sHj21LJOQ/8Tqn3XeR
11HIfcD50nvPhus0RFLG2zKPZpWjqu6sfq+qDm26jwDgRIxzAcCeyGcAmI2F
ga6uAQclEAhIMBjQx4vdfcknl/X9tUEGb0QDEohlBnlcG9y/IMvJvOx3i6PX
edl9532dQ+Q+4Gwe/5LsPP1G8jd/Zbwt82pWOarW3VD1Z7UOh+k+AoATsc8J
ANgT+QwAs+ELrw2ydU9SiaQkE2v62ILHI71+V1R9WP0cLTWlXVmXWKUlrUps
9Nxuvycez/Axp93n9fnO/TqHyHvA2VLNJ8M1GpJV422ZV7PKUbXvoPrdqn0I
TfcRAJyIcS4A2BP5DACzEU4XBxnblUJ2U8o7ah2ObV1/bnWPakaB2KbsVeMS
qzQln1gaHS93W8fqz+P3qfrzeV/nELkPOFcwuimN59/L1vWPjLdlns0qR9W6
3qr+HC+/ZryPAOBEjHMBwJ7IZwC4HGqNjNWVVenq9TGGxxbjW7puvF7ZO1E3
rvW7o7rxafep+vN5X+fQ8eteeA8AHMTjkfIbv5Ptp9+IP7hqvj1zbFYZ6lta
0fXnRP2e8T4CgBMxtgUAeyKfAWA21JoYnfpwb7AfLS5KT6+F4ZHGIHfXwj59
PNvqST27KqFkUXqdnD6m9hVU63Ycvs7L7jvv6xwi9wFnWq/e0bXJWPG68bbM
u1nlqNcf0L/jVOOR8T4CgBMxzgUAeyKfAWA2Fnw+qXf3R3PkcskVfTwQTY6O
9ZqF0ePzu53R8VQ0eOK1TrvvIq+jkPuA86h1GXaefSvFO5/qPUdNt2fezS5H
Pbr+nN5723gfAcC04rEx7eE4Ws2vaB8ca1bTY89hnAsAs0c+A4D9qDnPkx5/
2WOtfB1yH3Cewq1fS+Ptf0lgJWm8LZhtju48+042u+8Z7yMAmBTO1GS/W9S3
A5HE6Jq+Yndf8sll/V2sWttuIxo48TzGuQAwW+QzAGAS5D7gLNHc/sGawPeN
t8WN7DZ/Y/vxV5K9+oHx8wIAJi1FYhKLDPc0UbWMfr+n9z/p9buDY8O9TdRa
d+3K+onnMc4FgNkinwEAkyD3AefwBcKy/fhrqdz7b7ni8Rpvj9vYcf5G9cFf
JHfjl8bPDQDYRbnTk1Y1JQsej7S61dHxQGxT7799/LGMcwHg8pDPAICXOZzn
R/4D9rd19QNpPP9BQrG88ba4kR3nb5Tv/UEKr31i/NwAgGm+4LLsqetQKhv6
Z1Xf6PZro/sX41un1jdeZLofAOA25DMA4CzkPOAMK6m6Xncj03puvC3zwC7z
N0p3fiPlu58ZPx8AYJJaB0ll7VZi5cTxxuDYWtinb2dbPalnV0/czzgXAGaL
fAYATILcB+zP4wtI7eEXUnv0pXj8S8bb42Z2m7+h9pqs3P+j8fMCACZt7vZe
yNm2eDwLEogmR8d6zcLY8xjnAsBskc8AgEmQ+4D9Zdrv6LnPKxs7xtviZnac
v5G7/pH+3sH0uQEAO/N4PKceZ5wLAGaRzwAAhdwH7C2580DXnrP99423xe3s
OH8ju/++bD/5h/FzAwBOxDgXAOyJfAaA+ULuA/aVajzStefc9f+QKx6v8fbM
OxPzNzKdd6Xx/HvjfQcAJ2KcCwD2RD4DwHwh9wF7Su0+1rXnresfUXu2uVnm
6Ebzqf474G8AAM6PcS4A2BP5DADzZRb7ZQGYzkbzybD2fPVD6o4OMMv8TG0P
11/xLgaN9xMAnIbxLQDYE/kMAPOF3AfsY2FhQTb2ng1rz/1/lysvWe8B9jLL
HE3U7uq/B39wdWb/HwDgVsyzAAB7Ip8BYL6Q94A9qNpzpv3O0V6D1J4dY5Y5
Gi/d1H8TgXDCeD8BwGkY5wKAPZHPADBfyH3AvIWBTPvHus642fvZ4Bi1ZyeZ
5fyNtfy+/rsIRjPG+wkATsM4FwDsiXwGgPlC7gNmLSfKUnr9s2HtufuerkWb
bhPOZ5Y5Gtls6b+N5fWi8X4CgNMwzgUAeyKfAWC+kPuAGcFoVgq3fq1ri9tP
vpb1yh1qzw41yxxd2djWfyPhZM14PwHAaRjnAoA9kc8AMF9Y9x+4XIGVhGxd
/VDXFHeefSupnYfi9QeNtwsXN8v8XF4v6b+VSKZpvJ8A4DSMbwHAnshnAJgv
5D5wOfzBqGx235XG8++l8fa/JN16Lr5A2Hi7ML1Z5qiaJ6/qz2u5nvF+AoDT
MM4FAHsinwFgvpD7wCx5ZCVVl9y1n+uac+P5D5Lt/UwWl2M2aBusMsscXYqk
dP05VrxhvJ8A4DSMcwHAnshnAJgv5D5gPVVfTu48kNqjL0frbKi9BZciG8bb
BuvNMkcXQ2v6b0itD266nwDgNKwzBwD2RD4DwHwh7wGLeLwS2WxJ4dbHep6z
qhmWXv9M1gpXxeNfMt8+zMwsc9S7GNJ/S2rtllAsBwCOFoxmXJPPAICLI58B
YL6Q+8B01LrOaq5z/a2/6zrh9pN/SHrvbQmupo23DZdjpvM3vH79dwUAblB7
+OWl57Pp9wgAwDjyGQDmC7kPnN/CwoKEExXJXftI7yeoPlOX7vyXRLc64vH6
jbcPl2uWOar+1tTfFQC4QSSz65p8BgBcHPkMAPOFdZeAyXn9QYmXbkr1zT/q
mrNe17nzriytXu71xLAX8hMA7Il8BgB7Ip8BYL6Q+8DLqX0EV7NtSe8902s5
N97+l647V9/8k8TLt8S7GDTeRphHjgKAPZHPAGBP5DMAzBdyHxiucaDWcV5J
1SRRuytb1z8areesqP0EK/f+W891Dier+vGm2wz7IEcBwJ7IZwCwJ/IZAOYL
uc+5mqvz5fHoOc0rqbqsV+7IZvc9Kb7+G9l5+s8T+yNtP/5K8jd+IYn6Pb3O
s8e/NH/nysbsdr7s1h4AwBD5DAD2RD4DwHyZJvd5rruf68h2e7z6uYGVpERS
23qt5o29Z5K/8Uu9Zsbh+hmjec1vfyflN34v2f77utasnxuOX2h+s+POlYPb
bbfxqt3aAwAYIp8BwJ7IZwCYL06sH/Hcy3nuhZ7v8YjXHxDf0op+7mJ4XdeC
l1bTElzLSiiWl+X1op5TrOYgR9INiWy2JLrVkbX8vsSK1/S6yuq5yfo9STUe
6bWXM+0fy2bvZ7J19UPJ3filFF77RK/HXL7/udQefinbT74e1ZbVc0/UmJ//
MHjMF5K/9Z+S6bwr69U7srKxI4FB265c8djiXDvqd+zw584C+7gCgD2RzwBg
T+QzAMyXV+X94nJcllYzL6WeG4xmDmyetJYdFz0yfO4pj3nFcw6PDZ/7wv/f
qB0vM3zc6Lln/H/oWuna1pFYTj9X/ftq+aF4YWR5QD1X1V1D8aL+d3m9JOFE
WVvW/1b0usJq/eFwsqb/XdnY1nN41XN1nXZgdbMpkUxz+O9ma/Dvnt4fT9Vv
j3RlLdeTaG5fP1fVddcKVzVV340Vb0isdEPXeRW1DoVa8zhRvy+pnYeS2n08
rPm2nuvnZw/rvtd/IYVbH0vx9rD2W7n3Bz2nuP5I1X//MTa3+MU68HmM15C/
l52n3+g1masP/qLXYlbrZqiasmqXmr+s1mZW7VbPVfOeVX07sJKQK16fJf89
uPG5Tm233capdmsPAGCIfAYAeyKfAcB9jn+3CADzbFYZazrnAQDjyGcAsCfy
GQDmy6tyX83BXcv3X7B/QlTPsz3N/oiai/uiaK47sZPP23/Byf/fado2+v/c
elHnTGoO8pHWETU/eUDNVR7NVz4+hzmzO5rbfDjfWf17fB60mhet50cfzpde
Lx3No1ZzrPWc64P512tbR3O69b+beq56cDUtS5GN4VoYkZSeF6zXxgjH9X58
/mBEfIGweP1B8fgW9TrKF1kDGZhHjJ8BwJ7IZwCwJ/IZAOYLuQ8A0yFHOX+m
cQ45h3Zgx3NoxzY5CeePc2gHnEN3nkM7tslJOH+cQzvgHHIO6SsAXB5ylPNn
GueQc2gHdjyHdmyTk3D+OId2wDl05zm0Y5uchPPHObQDziHnkL4CwOWZNkd5
/vTvQ6bbMO/Pt0Mb5v35dmiDHceUpvs078+3Qxvm/fl2aMO8P98ObSCfeb4d
2zDvz7dDG+b9+XZogx3zGQBgT6bfc+b9+XZow7w/3w5tmPfn26ENdhw/m+7T
vD/fDm2Y9+fboQ3z/nw7tIF85vl2bMO8P98ObZj359uhDXbMZ5jhjyRkv1sc
/ewLRaQ9+PtQfyPNatp4++wiFE9L7+C89JrlwbHh3oUrybw+puSTK8bbaRfr
uerovOSSy/rYwkC50xuew051dA4xZPq/xcPfFwBgNshnALAn8hkA7Ml0nQbW
WI5n9O+z1ymOjhW7+5JPLutaYW1w30Y0YLyddrA3OBfpWFDfzrd6sp1blQWf
T7r9niwHfeILLkuv3xWPh5qqZ3Au+oPzsrjo0eelPzgvqta8XtmTTn1YR01X
W9KqxIy31S7Uf297Nv5vkdwHAHsinwHAnshnAACG9a5GpyH50s5ozuWCx6Nr
qIfzUqOlprQr68bbagcbmdTodrze0efFH90YjCtKo+P57r5kYtTr1d/RamQ4
53lYl2/r2yVdQ/Xr295I8sS5m3dbzZ40q3XptMqjc2in/xYZPwOAPZHPAGBP
5DMAAMeE10Z1QFXzanWro/sCsU3Zq8bNt9FGQnrOeE+CAa+uP7fqidF98WpT
Nqk/j6xmK8P59a28/rnc6YjPN6ynqr+19rG1JubZSqYivd0NfbvZOao/2+m/
RcbPAGBP5DMA2BP5DADAEf+xeaiq5tXt10b3Lca3qD8fkyztDM5VW9ee9bmL
ZaRTP5oXnai3qD+fQq0jsRkLS7nbPqo/+3zS7paNt800dR2CWld8t5KTbKGq
54rnMzHb/bfI+BkA7Il8BgB7Ip8BADjy4hoSjcH75FrYp29nWz2pZ1eNt9EO
Mjtd6XWO9h1UfhQIDs7d3uiYWr83EvIZb6tpw7U1jmqnlYO1izd2h+tmq2Or
2Zr0WlnjbbWDaDwuiURCkumc9AZ/T8nYcB9L/lsEAAAAAACA03kjidH6z0og
mhztM9lrFoy3zw58ocjYHpy7peHeebFcbXRsu8B+eoc2663ReWlWM/qYmvO8
OzqHu6O50DjS7hzNCee/RWcb7il5tCep+rnc6R3s+arWVuHv/1WShfpR3lbS
nMMLyO92Ds7hnt4nVx1T72ftUTanjbfRCdTfXbvfHv23zDl0PvJ5OuTz9Mhn
a5DP7kM+T4d8nh75bA3yGefh8XiMtwHO9rK/If62rDmPsC9/cFlfD9E/9p67
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
99jU40S9JcoJ38B2Zq8/98bpyT6hvd7PdtfR3s892Rt/EYV7/9AeNwCMa5K8
LWuvw1yDKz/6TqSv/nns9ync+6fIXP904mONN38vqs//q+rGp60XU+O6fxUX
rLYz9xneut+9b8azMXF8AAAAAAAso2yjJno9n53+cL+vRquWObKu2evPvXup
5b3XuZt/FcW3/nXq+onmH8TWs5+1xw0A4xo3b8seRd25B5+cuW7y4ktRefqT
mtdv1PeR21Sf/yLizZPnAhzWRuFmd1yzJ3jqeplrn5w5rrtH9ujozo1Ymjg+
AAAAAADQZZwwdszs9WfZn1TWEfypphojd2Lv533hylsD8xUCgNmMm7dd/tjQ
vY97/Sxkb6NR38fu8nX7d5TuTHysa5uV/Vpx+dT1yg+/VT0/htmnez3ZPQ/p
Pe2fJQAAAAAAi87s9edeHSHRfr9bh042Tl3fn2qp9VzrCe2xA8A4xs3bvsSu
yn+rG9kz15U5Uq4byF4a+X3cwex+L/7diY/V6Qmpfcm5Zk9ax2rvjuuO1M4e
1y3ZXf6J+1sDAAAAAIDhmL3+LOeaknWEypMf93s/+05dvzde2hevaY8dAMbR
66k0av4OV+4Nf/+HYVW9ihKt90aOz5/a6/blX09OfryGcea9LS5/vFsrTw95
PuQ+X/wmovW3tX+WAAAAAAAsunHrGPPC4V5XdQfprN7Pav3V4P5YupvaYweA
cYybr5PtD8TW05+GXl/OH1i8/z8jv0+k0p3fz+b0TOV45VyGcu7Yk17vz0Mb
zA69Tzm/YurycP06AAAAAADA+Mxad+6xOtz9+nO88fuztzGs++PeXmiPHQDG
MW7ezt/5UuRuvR56/fDW/f37SrwjvU9i732x9fQ/Uzve5OVXovzo+5Pj7PX1
H6Henb/9WtH9WQIAAAAAsOjMXn82rPZ+/fms3s89pRHmqQKAeTNO3rZ0qH4a
zT8Mvc1apDRWv6Lsrc9VrXtaxxupPlRxWB2uY19Ptv8oKiOM65ZSZ9S0AQAA
AADAdJi9/ixVX/w6VO/nnuyNT0Xh7t+1xw0A4xgnb/d6FYVKt4feRtZ71f0i
O8+G3sbmXFX9muPNIe5HGVJv3lh3IHXs67LWLWveo+wztvu2OjZ5T4zuzxMA
AAAAgEW2CPVnOe6teP/rodePt96b6r3hAHCexsnbnnBxrLHM+btfidztvw29
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
AAAAAAAATMP/D+j3KLA=
    "], {{0, 696}, {1440, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1440, 696},
  PlotRange->{{0, 1440}, {0, 696}}]], "Output",
 CellChangeTimes->{
  3.739806599293586*^9, {3.739806634934342*^9, 3.739806661224978*^9}, 
   3.7398067155864153`*^9, 3.74008857526422*^9, 3.7401357915214033`*^9, {
   3.740135822493908*^9, 3.740135860342279*^9}},
 CellLabel->"Out[511]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
LNRYyc5JVsuq09c5udoMYvNe/hGd+jSiX66ZUwqi+nPaaNTvSvjf6jkVvM6D
vveYOXjud8XdFl8z7Wql8B3e3BDckUagnsVVMH6XPINCCgE0HEr8yOp9Qmqm
Afx9Qivb5bmKobl8R5rOZQNHbXTtbeeKniPCfeoDNnFqLrrO5edUB+N+9g7G
PWXU9o+ELNIY/3cPVOrQue2QIZkxqKiFvzjG1XWFSLp8wdipdWr2mtlW50X9
M392F5thBrOlOTzYI1Y25lytKTFgZsYQoHsEud090203XHSKWjQ06snN+2ur
dymW+n/hx29h2alUpYu1tzCNWolIBjKly0RSmmbvwpIUzyHJW1kzQu6fl2EH
xJAy6uFpP3Psef1XfnwPeohw66jFcmqa7RYNuWsm44kZjgfsusqk4qbvJfWB
8mIqLSd9u12KKGd3+UZmBu3hyLQ7De63glI8u/u7pt1smDxa/OzNuNHNfDF2
eXlx1OwKbW3NSfp2XXuS5/h7GHgynZlBr82CHbyWk8nUVMtF7l8zIRUJJd1C
c3zBzrEl+9HayxJS+S9KahLSJMXP+YCuazHUbxlyZGgOZojszKf+kafP3Pap
CqYp7ixjhdhsNqsdfmDAyWSzbBLGD+CL/zPWQKOdZkDRsqREQB7AKJksj2JT
sjalvkiS0xY5o59etWqb9iPbtG2kvJh6hA/b+6gNfzasupdKu9WgRdsJiR7C
yhRsH5QxM3Yz8r0Ujwnk9dviOT+HzoulY95UMtZQ4Mi6Urz2TAg4MgU9tlPQ
/xkmWinXpkiUSxi/ACDgM3/N/v5hfyGplHji0iaXlcUm1SEQqwit8mLoYieC
c7CU1FK3pCN6/BkP/2Hv6xJ2Z79el5VysWtUnh/2udsUJHW+aW2+INpYDKBC
BbmLV67Q/VmaXrdjGvQDVWMyH6FvFcb322ihNROo1HQyMjW64jOiQLt7LmE1
1P4JKAjZFy25oMXAdIYKisMhbEleBzuUE68ip5joAHpI0DtIv6/VSsFqz7AH
u9Zqm0tXLpvd+YzISIfDcNEpqkkbS6eSMX9nIKhos7Ukoom+gMgz2qVdjoZd
Jqb+zoD2dKqI8G12WtwLa0JTLInkNxoVbjxWldUC6GgI1mwjWrzAne7QBAvl
Fwgb3AqgghNs9w8PiZMckPDfMu1elzjHkjY3NcVSAaiuK8CNaqOC3nJuZrMx
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
\
\>"],ExpressionUUID->"4cc49362-1a91-48ba-93e0-81041e1217db"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Halting Probabilities", "Subsection",
 CellChangeTimes->{{3.739925505847315*^9, 
  3.739925516898056*^9}},ExpressionUUID->"eb162743-0085-40b7-8f55-\
0e4febe9effc"],

Cell[TextData[{
 "Some halt, some do not. (haven\[CloseCurlyQuote]t seen a cyclical one yet) \
--> linear/exponential.\n",
 StyleBox["Assumptions",
  FontWeight->"Bold"],
 ": If length stays constant, it has halted. ",
 StyleBox["Dataset:",
  FontWeight->"Bold"],
 " SK combinators with depth 10\nP(halts by 20|doesn\[CloseCurlyQuote]t halt \
by 10) = ? P(halts by 30|doesn\[CloseCurlyQuote]t halt by 20"
}], "Text",
 CellChangeTimes->{{3.7398078529186287`*^9, 3.739807862544938*^9}, {
  3.739807984557681*^9, 3.7398079872826033`*^9}, {3.73982542414058*^9, 
  3.739825454323818*^9}, {3.7398266857100267`*^9, 3.739826714388297*^9}, {
  3.7398274067012787`*^9, 3.73982744244515*^9}, {3.739827488649047*^9, 
  3.739827506574357*^9}, {3.739827596845306*^9, 3.739827644753313*^9}, {
  3.739830297704804*^9, 
  3.739830302494021*^9}},ExpressionUUID->"fd6411f0-a79b-47c4-adf3-\
d45866ee1f12"],

Cell[BoxData[
 RowBox[{
  RowBox[{"exprs", " ", "=", " ", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RandomSKExpr", "[", "10", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "100"}], "}"}]}], "]"}], ",", "n"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739827542111861*^9, 3.7398275436726027`*^9}, {
  3.739827648652402*^9, 3.7398276550305233`*^9}, {3.7398276901922693`*^9, 
  3.7398276964557037`*^9}, {3.739828234883089*^9, 3.739828259168634*^9}, {
  3.739829584290543*^9, 3.7398295854928207`*^9}, {3.739829641211596*^9, 
  3.739829677505145*^9}, {3.739829709483059*^9, 3.739829755147622*^9}, {
  3.7398297947823772`*^9, 3.739829794872855*^9}, {3.739829922193872*^9, 
  3.739829922755982*^9}, {3.739829973378722*^9, 3.739829973663536*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"ee594e90-ff3e-41f3-8bb8-9955e946e4b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lengths", " ", "=", " ", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"SKLengths", "[", 
        RowBox[{
         RowBox[{"exprs", "[", 
          RowBox[{"[", "n", "]"}], "]"}], ",", "40"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "100"}], "}"}]}], "]"}], ",", "n"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7398297626005287`*^9, 3.739829793526043*^9}, {
  3.7398299383644876`*^9, 3.7398299385414457`*^9}, {3.73982997526049*^9, 
  3.739829998040146*^9}, {3.7398300426351557`*^9, 3.739830043251628*^9}, {
  3.7398304715160103`*^9, 3.739830492227194*^9}, {3.7398307051597757`*^9, 
  3.739830741215641*^9}, {3.739830828424445*^9, 3.739830829215577*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"4a0ec6b9-d556-42a5-a86c-8dd447821140"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.739831126023819*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"70ccdefd-e61f-43af-a980-3a5812c5b0a8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"HaltIf", "[", 
   RowBox[{"n_", ",", "list_"}], "]"}], ":=", 
  RowBox[{"SameQ", "[", 
   RowBox[{
    RowBox[{"list", "[", 
     RowBox[{"[", "n", "]"}], "]"}], ",", 
    RowBox[{"list", "[", 
     RowBox[{"[", 
      RowBox[{"n", "-", "1"}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739828955348071*^9, 3.739829040698296*^9}, {
  3.739830066892948*^9, 3.739830067225738*^9}, {3.739839518414878*^9, 
  3.739839522546186*^9}, {3.739973729268805*^9, 
  3.7399737299207697`*^9}},ExpressionUUID->"2dcb6a13-2ddd-4d24-89a4-\
cf767e143427"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HaltBy", "[", 
   RowBox[{"n_", ",", "lens_"}], "]"}], ":=", 
  RowBox[{"Count", "[", 
   RowBox[{"lens", ",", 
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"HaltIf", "[", 
       RowBox[{"n", ",", "x"}], "]"}], "\[Equal]", "True"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7398290365609283`*^9, 3.7398290437773523`*^9}, {
  3.739829094139103*^9, 3.739829147015429*^9}, {3.739829212636303*^9, 
  3.739829252921694*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"acadaaf1-f648-4e0a-9c63-ea4093da7f63"],

Cell["Taking only lengths:", "Text",
 CellChangeTimes->{{3.739973430531612*^9, 
  3.7399734350127287`*^9}},ExpressionUUID->"093f63e5-380e-4b92-8f60-\
4d2d6b5853f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"HaltBy", "[", 
     RowBox[{"n", ",", "lengths"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "35"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7398300720986557`*^9, 3.73983012071101*^9}, {
  3.739830484936573*^9, 3.739830494101224*^9}, {3.739830822535985*^9, 
  3.739830822659882*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"9e9a2749-fead-4b64-a071-3d88a310aeab"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxdzzkKAkEQQNHGyNDAwMBAZRARGdx3nXFFcEHnCIKxV6ijeSSPoNK/hK6G
4fGZhq6q3p/ZI+eci77fT3/eiQtPGmaeLhjLWMQGlrBm7nWxgh1zb4ARjrCO
E/OOdhMX2MINxl7RbuM2nEN2Zs499vCAfTyGc8uJHuLZ7HHBMV7DPUR76k21
Z6bn3pe27n3DJf+1E9MpZrxLC+1WYYtpt/73B3olKzU=
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 36.}, {0, 74.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.739830076832575*^9, 3.739830121319777*^9}, 
   3.7398304853752317`*^9, 3.739830520887906*^9, 3.73983082355*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"4ce5641c-a6cc-4d26-b272-f4f0dedcb94d"]
}, Open  ]],

Cell["\<\
Number that have \[OpenCurlyQuote]constant length\[CloseCurlyQuote] after \
every 5 iterations (c.f. nuclear half life?)\
\>", "Text",
 CellChangeTimes->{{3.739830554182086*^9, 3.739830579381928*^9}, {
  3.7398314985832367`*^9, 
  3.739831508992393*^9}},ExpressionUUID->"0bc3d3ae-e376-4750-baea-\
d7cb74adf889"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxd0M0KAVEYh/E3K0sLCwsLJCHJ97f5YIqSMD4uQFm7hXNpLskloPOcdN6p
6enXf+ZMTfn+TB8ZEWl871/t9Q7FvyKfWVylOVqjebUX6JwWlUs0pBVbE/vn
mER9Z0PrdEubdEdbvL/HbXzEHXqgXdvI7T18wn3bl/OA81I85PkzHrFf8Jjd
ecJ5zlN6pTOed+a/GeeF8pLeaMDuHCpHvo2yxGpXlpXalWWtdmVJ1P73B5vt
OV0=
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 41.}, {0, 90.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{3.739831470412098*^9, 
  3.739831526554723*^9},ExpressionUUID->"5d0d71cc-f582-4e00-b497-\
9d56623a507d"],

Cell["\<\
Number that have halted after every 5 iterations (checking for actual halting)\
\>", "Text",
 CellChangeTimes->{{3.739831475285615*^9, 
  3.7398314900471163`*^9}},ExpressionUUID->"b2b65ea0-42bc-4b4b-9550-\
0fc28ca57b09"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxd0TkKwkAUgOHBytLCwsJCRURExH1fxl0Rd72AYO0V5mg5kkdQyf8i8wLh
58vLhDCTfbwuz5gxpvG9fw2v98T4l/UZV05Yf13S+s9TtEjTtEEzdEBzYZ3F
eTqnBWW+68QluqRluqIVuqFV5RrfE9fpTv33njaVW6w/4DY90k5Ye8Jd5R7r
xf2wgVj26UyHzMUjeqFj5Yky++yw7Hsg86lvh82VzniOHQ5kzrnYG3PssFnw
vsyV5RyjubKcazSXc77TtW+nHJ27zLGV+da3+/sDs3NG4w==
      "]]}}, {}, {}, {}, {}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 51.}, {0, 85.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",ExpressionUUID->"62d77996-58eb-\
4534-ad0c-d24100a1adc7"],

Cell["\<\
A sample of 1000 combinators, generated with a recursive random function \
(generating combinators of different length)\
\>", "Text",
 CellChangeTimes->{{3.739977876446292*^9, 3.73997788154846*^9}, {
  3.740138016882061*^9, 
  3.740138036499702*^9}},ExpressionUUID->"b8806225-4774-4e90-9dc6-\
7e237bfe3356"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxd0M1KAlEchvFDq1m6aOGixRgSESFmWZN9OPal0UbaOEsJBCEoIqIiomOW
ZauWLV16GS27BJddQpdQ8T7/wAbk4cc7ngOTOTo9bE045wo/v9/q+Sq78Sce
b0CLNEUP6KQaN3AaN/GU+t7CIT2m02rzBGfxGZ7hvHM8q75e4DnVX+J5/n+N
c2r+Buc57xYvqOEdLqiJx4tq0MFL6sjMdxnc42X1qotXuP8BR+rQvKpGj7jE
+eY1td3D6+qneUOtP+FN7jeXed8cq6ln1eM37Cq8bzsO++xbag17nNi+zf22
44HtO+rQ9n92u+qH7Th4Yd9T09jjyPaqWrcdJ7bX1Lbt2Nu+/+dvTX5VFw==

      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{517.5468749999993, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 50.}, {0, 848.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.739977882097959*^9},
 CellLabel->
  "Out[706]=",ExpressionUUID->"65716c6e-b34f-42c0-b176-882fa3745172"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CloudEvaluate", "[", 
   RowBox[{"GenerateHaltGraph", "[", 
    RowBox[{"20", ",", "30", ",", "1000"}], "]"}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.740167191912785*^9, 3.7401672000132227`*^9}, {
  3.7402442821234493`*^9, 3.740244301624866*^9}, {3.74024440570405*^9, 
  3.7402444763220797`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"559c39aa-3d23-4add-bb38-7580ee8c13de"],

Cell[BoxData[
 TemplateBox[{
  "FrontEndObject","notavail",
   "\"A front end is not available; certain operations require a front \
end.\"",2,104,12,19907323487401494613,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.740244477983343*^9},
 CellLabel->
  "During evaluation of \
In[104]:=",ExpressionUUID->"6fd9ef2b-1ea7-4821-83d9-167bdac8fb4b"],

Cell[BoxData[
 TemplateBox[{
  "FrontEndObject","notavail",
   "\"A front end is not available; certain operations require a front \
end.\"",2,104,13,19907323487401494613,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.740244478016183*^9},
 CellLabel->
  "During evaluation of \
In[104]:=",ExpressionUUID->"639ed042-336f-4082-b042-bb2002deef96"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.309111`", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7BlQgQMqlwPCb0iAigtA6APFUL4IhE6og/Il
IPSOZihfBkJHtEP5ChB6QyeUrwShJbqhfBWo+h4oXw1Cv4DxNSB0RS+UrwWh
b8D4OlC6D0rrQegAGN8AQhfA+IYQegaMbwShF8D4xlD3wvgmUP/B+KZofDMI
fQDGN0fjW0DoEzC+JRrfCo1vjca3QePbovHtIPSFPgcARcA2Ow==
        
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{{}, {1000}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 30.}, {0, 1000}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.740167212498103*^9, {3.7402442843320293`*^9, 3.740244303682846*^9}, {
   3.7402444077145853`*^9, 3.740244478040419*^9}},
 CellLabel->
  "Out[104]=",ExpressionUUID->"97d14f82-778f-42fe-9d61-0c5c0e4242a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GenerateHaltGraph", "[", 
   RowBox[{"30", ",", "40", ",", "1000"}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.7401368668140593`*^9, 3.740136875582035*^9}, {
   3.7401369144691973`*^9, 3.7401369304461117`*^9}, {3.740136976917227*^9, 
   3.740137009924623*^9}, {3.740137044681674*^9, 3.740137044812559*^9}, {
   3.7401372648967743`*^9, 3.7401373008664083`*^9}, {3.7401373559669123`*^9, 
   3.740137356215317*^9}, 3.7401375762754993`*^9, {3.740138189965399*^9, 
   3.740138220276668*^9}, {3.740138409336232*^9, 3.740138420943417*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"f8f5cef8-43ba-4c8d-b0ad-7e38f53dbc08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"178.926519`", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdzDsKwlAQheGLlWUKCwsLFZEgIr6N7/gorESsrIXUCjZiFRAk+ACXYGnp
MlyCy3AJKueMkBkYfj6Ge1PL1dyLGGPs7/6KefdNeNwwo/SUtVDfo2Psho2j
sx2dQAOfTqKvPZ1GJwc6w/cBnUWjR9pGrROdQx/iPBo/0wV0LS6iT3GJvbBl
1BFX0IW4yv/ENXQrrqO+uKHsoIG4qdxCr+K2cke5i97EPfQu7iu7YfvKZqDu
ymao7spmpO7KZvz3B3rjRcI=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{{}, {1000}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->{607.3062499999994, Automatic},
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 40.}, {0, 1000}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.74013786145471*^9, 3.740138105646882*^9, 
  3.7401382062872133`*^9, 3.74013827706948*^9, 3.740138418352826*^9, 
  3.7401386002052593`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"33f26878-0261-47b6-b1d3-5ffb9c5a2074"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CloudEvaluate", "[", 
   RowBox[{"GenerateHaltGraph", "[", 
    RowBox[{"40", ",", "40", ",", "1000"}], "]"}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.7401368668140593`*^9, 3.740136875582035*^9}, {
   3.7401369144691973`*^9, 3.7401369304461117`*^9}, {3.740136976917227*^9, 
   3.740137009924623*^9}, {3.740137044681674*^9, 3.740137044812559*^9}, {
   3.7401372648967743`*^9, 3.7401373008664083`*^9}, {3.7401373559669123`*^9, 
   3.740137356215317*^9}, 3.7401375762754993`*^9, {3.740138189965399*^9, 
   3.740138220276668*^9}, {3.740138409336232*^9, 3.740138420943417*^9}, {
   3.740138606402527*^9, 3.740138610793722*^9}, {3.740139169773147*^9, 
   3.740139169930148*^9}, {3.740139217427053*^9, 3.740139246500766*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"198e838d-0f0c-4f06-9abd-094488936644"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"37.725537`", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxd0TsKwkAUheHByjKFRQqLKCJBROI7PhMfK3ADimAn2FhZBRTxuQdLS0tL
l+ASXEJKS5VzrpAZGH6+udMMk5ouRrOYUsr+7l+xQk9Flx9lHA58nhvsmE2w
c9Zkl2wSva1oC3UDOo3G13QGfWzoLPrc0jbq7Ogc6u/pPGof6AL6Ejvo5EgX
0Yu4xPviMntiK6ghrvI94hoaiOvoVeyid3GD7xM30VDc0txG3+KO5i57Zj3N
/EeDln81Zd6LOtCs+tpcsxqglsw1q+HfHwePQYw=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{{}, {1000}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->{757.2249999999987, Automatic},
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 40.}, {0, 1000}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.740138705217358*^9, 3.7401392035509644`*^9, 
  3.740139285092354*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"8a96c4a4-3bc6-4a40-8bc5-3f4943bb68be"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.740167039168478*^9, 
  3.7401670524775887`*^9}},ExpressionUUID->"d6486640-6fa2-46ba-8c51-\
a6a930b82481"],

Cell[CellGroupData[{

Cell["How many combinators with a given leaf size?", "Subsubsection",
 CellChangeTimes->{{3.740139052717739*^9, 
  3.7401390589048758`*^9}},ExpressionUUID->"067c7792-f419-4f80-8770-\
96bd61bdf10e"],

Cell["\<\
NKS suggests (2^n*((2n-2)C(n-1)))/n
So for size 30:\
\>", "Text",
 CellChangeTimes->{{3.740139060034903*^9, 
  3.740139091725232*^9}},ExpressionUUID->"2433fe8f-69d1-4952-8a47-\
3c838ee302cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CountCombinators", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"2", "^", "n"}], " ", 
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "n"}], "-", "2"}], ",", 
      RowBox[{"n", "-", "1"}]}], "]"}], "/", "n"}]}]}]], "Input",
 CellChangeTimes->{{3.740139094627674*^9, 3.74013913725454*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"d8407442-55a5-425d-a719-407c6fab4dcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountCombinators", "[", "30", "]"}]], "Input",
 CellChangeTimes->{{3.740139125389966*^9, 3.740139164374218*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"82807327-690e-4a0a-a9ab-9e59cc67e0d5"],

Cell[BoxData["1076149385797043048415232"], "Output",
 CellChangeTimes->{{3.740139129240218*^9, 3.740139164808217*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"103949a1-d626-48d2-968e-0cba4311d1d0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Machine Learning Analysis of SK Combinators", "Section",
 CellChangeTimes->{{3.7399255514811583`*^9, 
  3.739925570623746*^9}},ExpressionUUID->"d7e4795e-2c05-484f-8339-\
50b127a69abc"],

Cell[CellGroupData[{

Cell["Generating Datasets", "Subsection",
 CellChangeTimes->{{3.739926898938037*^9, 
  3.739926903903215*^9}},ExpressionUUID->"7b42aa53-0654-4933-9695-\
767730b9c223"],

Cell[CellGroupData[{

Cell["\<\
~500*n random SK expressions at each of depths {n,1,10}, halted if \
SKHalt[40]==True.\
\>", "Subsubsection",
 CellChangeTimes->{{3.739926907598406*^9, 3.739926924743247*^9}, {
   3.7399273770162363`*^9, 3.739927377208897*^9}, {3.7399564745625*^9, 
   3.739956488516242*^9}, 3.7399565972405577`*^9, {3.740309104775498*^9, 
   3.74030911500931*^9}},ExpressionUUID->"7e99dba4-8ffb-4270-a42a-\
1eaf83291df7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "=", 
        RowBox[{"GenerateTable", "[", 
         RowBox[{"n", ",", "40", ",", 
          RowBox[{"n", "*", "500"}]}], "]"}]}], ";", 
       RowBox[{"DumpSave", "[", 
        RowBox[{
         RowBox[{
         "\"\</Users/eohomegrownapps/CODE/Assorted \
codings/Wolfram/SK-Combinators/\>\"", "<>", 
          RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<.mx\>\""}], ",", 
         "x"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "50"}], "}"}]}], "]"}], ",", "n"}], "]"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{"generate", " ", "all", " ", "possible", " ", "expressions"}], 
   "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.739926964144546*^9, 3.739927071723415*^9}, {
   3.739927143663413*^9, 3.739927169528153*^9}, {3.739927317461865*^9, 
   3.739927334122841*^9}, {3.739927367253961*^9, 3.739927383932279*^9}, {
   3.739956193536852*^9, 3.739956195097608*^9}, {3.7399562538745937`*^9, 
   3.739956254010531*^9}, {3.739956455264728*^9, 3.7399564622532454`*^9}, {
   3.740309091833199*^9, 3.740309113367577*^9}, 
   3.740309147459743*^9},ExpressionUUID->"2fef8580-a720-43d6-a0f8-\
2d86a972c780"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
~1000*n random SK expressions at depth 50, halted if SKHalt[40]==True. New \
random algorithm\
\>", "Subsubsection",
 CellChangeTimes->{{3.739926907598406*^9, 3.739926924743247*^9}, {
   3.7399273770162363`*^9, 3.739927377208897*^9}, {3.7399564745625*^9, 
   3.739956488516242*^9}, 3.7399565972405577`*^9, {3.740269904594501*^9, 
   3.740269921517652*^9}},ExpressionUUID->"f7ad333e-258a-476a-981a-\
7b2037c766cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x", "=", 
    RowBox[{"GenerateTable", "[", 
     RowBox[{"50", ",", "100", ",", "20000"}], "]"}]}], ";", 
   RowBox[{"DumpSave", "[", 
    RowBox[{
    "\"\</Users/eohomegrownapps/CODE/Assorted \
codings/Wolfram/SK-Combinators/10_40_10000_randomnew.mx\>\"", ",", "x"}], 
    "]"}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.739926964144546*^9, 3.739927071723415*^9}, {
  3.739927143663413*^9, 3.739927169528153*^9}, {3.739927317461865*^9, 
  3.739927334122841*^9}, {3.739927367253961*^9, 3.739927383932279*^9}, {
  3.739956193536852*^9, 3.739956195097608*^9}, {3.7399562538745937`*^9, 
  3.739956254010531*^9}, {3.739956455264728*^9, 3.7399564622532454`*^9}, {
  3.7402699335120068`*^9, 3.740269942592499*^9}, {3.740270582538435*^9, 
  3.740270585026822*^9}, {3.7402712663950043`*^9, 3.740271276164513*^9}, {
  3.740338257824698*^9, 
  3.740338260271072*^9}},ExpressionUUID->"cb4c070f-3d37-422c-a62d-\
c9c59b99c82c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
~1000 random SK expressions at depth 40, halted if SKHalt[40]==True. New \
random algorithm\
\>", "Subsubsection",
 CellChangeTimes->{{3.739926907598406*^9, 3.739926924743247*^9}, {
   3.7399273770162363`*^9, 3.739927377208897*^9}, {3.7399564745625*^9, 
   3.739956488516242*^9}, 3.7399565972405577`*^9, {3.740269904594501*^9, 
   3.740269921517652*^9}, {3.740309168102754*^9, 
   3.740309178017323*^9}},ExpressionUUID->"b99bff67-a696-40f0-bbf8-\
7b6c68d0b9ee"],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.740309273184188*^9, 3.74030927466081*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"050c52e9-6647-470d-a9aa-2b1a2cc90eea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x", "=", 
    RowBox[{"GenerateTable", "[", 
     RowBox[{"40", ",", "40", ",", "1000"}], "]"}]}], ";", 
   RowBox[{"DumpSave", "[", 
    RowBox[{
    "\"\</Users/eohomegrownapps/CODE/Assorted \
codings/Wolfram/SK-Combinators/10_d40_40_10000_randomnew.mx\>\"", ",", "x"}], 
    "]"}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.739926964144546*^9, 3.739927071723415*^9}, {
  3.739927143663413*^9, 3.739927169528153*^9}, {3.739927317461865*^9, 
  3.739927334122841*^9}, {3.739927367253961*^9, 3.739927383932279*^9}, {
  3.739956193536852*^9, 3.739956195097608*^9}, {3.7399562538745937`*^9, 
  3.739956254010531*^9}, {3.739956455264728*^9, 3.7399564622532454`*^9}, {
  3.7402699335120068`*^9, 3.740269942592499*^9}, {3.740270582538435*^9, 
  3.740270585026822*^9}, {3.7402712663950043`*^9, 3.740271276164513*^9}, {
  3.740309179309823*^9, 3.740309215890499*^9}, {3.740309548225672*^9, 
  3.7403095483904552`*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"0fbe64c2-1459-422c-b8e6-527287814f64"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
~1000 random SK expressions at depth 30, halted if SKHalt[40]==True. New \
random algorithm\
\>", "Subsubsection",
 CellChangeTimes->{{3.739926907598406*^9, 3.739926924743247*^9}, {
   3.7399273770162363`*^9, 3.739927377208897*^9}, {3.7399564745625*^9, 
   3.739956488516242*^9}, 3.7399565972405577`*^9, {3.740269904594501*^9, 
   3.740269921517652*^9}, {3.740309168102754*^9, 3.740309178017323*^9}, {
   3.7403095564228687`*^9, 
   3.740309556554426*^9}},ExpressionUUID->"e3111d0a-873b-46be-b28d-\
a88f64543811"],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.740309273184188*^9, 3.74030927466081*^9}},
 CellLabel->
  "In[263]:=",ExpressionUUID->"ecabc96f-0dfe-43a2-ad4a-a10fd834e275"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x", "=", 
    RowBox[{"GenerateTable", "[", 
     RowBox[{"30", ",", "40", ",", "1000"}], "]"}]}], ";", 
   RowBox[{"DumpSave", "[", 
    RowBox[{
    "\"\</Users/eohomegrownapps/CODE/Assorted \
codings/Wolfram/SK-Combinators/10_d30_40_10000_randomnew.mx\>\"", ",", "x"}], 
    "]"}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.739926964144546*^9, 3.739927071723415*^9}, {
  3.739927143663413*^9, 3.739927169528153*^9}, {3.739927317461865*^9, 
  3.739927334122841*^9}, {3.739927367253961*^9, 3.739927383932279*^9}, {
  3.739956193536852*^9, 3.739956195097608*^9}, {3.7399562538745937`*^9, 
  3.739956254010531*^9}, {3.739956455264728*^9, 3.7399564622532454`*^9}, {
  3.7402699335120068`*^9, 3.740269942592499*^9}, {3.740270582538435*^9, 
  3.740270585026822*^9}, {3.7402712663950043`*^9, 3.740271276164513*^9}, {
  3.740309179309823*^9, 3.740309215890499*^9}, {3.740309548225672*^9, 
  3.740309563397821*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"0533a688-457e-4e40-8538-8fd22fd8ee10"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
~5000 random SK expressions at depth 10, halted if SKHalt[40] == True.\
\>", "Subsubsection",
 CellChangeTimes->{{3.739956467246653*^9, 3.739956512841754*^9}, 
   3.7399565994807863`*^9, {3.739956647650271*^9, 
   3.7399566514669437`*^9}},ExpressionUUID->"8a95361d-e0a3-4dca-bc4e-\
d8e251d7bde8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"GenerateTable", "[", 
    RowBox[{"10", ",", "40", ",", "1000"}], "]"}]}], ";", 
  RowBox[{"DumpSave", "[", 
   RowBox[{
   "\"\</Users/eohomegrownapps/CODE/Assorted \
codings/Wolfram/SK-Combinators/10_40.mx\>\"", ",", "x"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.7399564516095247`*^9, {3.7399565051514187`*^9, 3.739956517773904*^9}, {
   3.739956653466675*^9, 3.739956655746579*^9}, {3.739956832485209*^9, 
   3.7399568359223337`*^9}, {3.740271249836307*^9, 
   3.7402712512963676`*^9}},ExpressionUUID->"c3f8d6f9-131c-44cd-b37c-\
fd8602f62fc0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"GenerateTable", "[", 
    RowBox[{"10", ",", "40", ",", "5000"}], "]"}]}], ";", 
  RowBox[{"DumpSave", "[", 
   RowBox[{
   "\"\</Users/eohomegrownapps/CODE/Assorted \
codings/Wolfram/SK-Combinators/10_40_test.mx\>\"", ",", "x"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739979482733123*^9, 3.73997948340361*^9}},
 CellLabel->
  "In[760]:=",ExpressionUUID->"31a8d74e-ec72-4dae-94e3-6efa636ea83e"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.739979545603189*^9},
 CellLabel->
  "Out[760]=",ExpressionUUID->"c3ea353b-f431-4e24-89e9-e4fa0358c1e9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
~5000 random SK expressions at depth 8, halted if SKHalt[40] == True.\
\>", "Subsubsection",
 CellChangeTimes->{{3.739956467246653*^9, 3.739956512841754*^9}, 
   3.7399565994807863`*^9, {3.739956647650271*^9, 3.7399566514669437`*^9}, {
   3.739990614251655*^9, 
   3.739990614659189*^9}},ExpressionUUID->"6aee55cd-f45a-45b8-9caf-\
368503deb3f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"GenerateTable", "[", 
    RowBox[{"8", ",", "40", ",", "5000"}], "]"}]}], ";", 
  RowBox[{"DumpSave", "[", 
   RowBox[{
   "\"\</Users/eohomegrownapps/CODE/Assorted \
codings/Wolfram/SK-Combinators/8_40.mx\>\"", ",", "x"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.7399564516095247`*^9, {3.7399565051514187`*^9, 3.739956517773904*^9}, {
   3.739956653466675*^9, 3.739956655746579*^9}, {3.739956832485209*^9, 
   3.7399568359223337`*^9}, {3.739990618450221*^9, 3.7399906220277967`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"72fbf9e7-d262-47bc-9ff9-dbb2d71d72b4"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`n, StandardForm],
  Evaluator->"Local",
  ImageSizeCache->{9., {0., 8.}}]], "PrintTemporary",
 CellChangeTimes->{3.739990719086732*^9},
 CellLabel->
  "During evaluation of \
In[79]:=",ExpressionUUID->"519ea52c-fcf4-4f4f-bdab-8e7230d1e881"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"GenerateTable", "[", 
    RowBox[{"8", ",", "40", ",", "5000"}], "]"}]}], ";", 
  RowBox[{"DumpSave", "[", 
   RowBox[{
   "\"\</Users/eohomegrownapps/CODE/Assorted \
codings/Wolfram/SK-Combinators/8_40_test.mx\>\"", ",", "x"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739979482733123*^9, 3.73997948340361*^9}, {
  3.739990619588085*^9, 3.73999062363866*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"dad995d8-26db-4fa5-a0da-ce7fb184c088"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Training Attempt #1: 1000 random SK expressions, depth 10, halted if \
SKHalt[40]==True. NoHalt dataset same length as Halt dataset. Using raw \
string. Best classifier so far.\
\>", "Subsection",
 CellChangeTimes->{{3.7398872588333893`*^9, 3.7398872606941757`*^9}, {
  3.739925769163535*^9, 3.739925817261409*^9}, {3.73992591716278*^9, 
  3.7399259189271*^9}, {3.7399265753572073`*^9, 
  3.739926580667159*^9}},ExpressionUUID->"6fdf6735-b43f-410e-bd2e-\
32b6bdaa7213"],

Cell[BoxData[
 RowBox[{"lengths", " ", "=", " ", 
  RowBox[{"GenerateTable", "[", 
   RowBox[{"10", ",", "40", ",", "1000"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739926337214636*^9, 
  3.739926356784418*^9}},ExpressionUUID->"4f9974db-b37e-4580-b52e-\
b0bba6840fcc"],

Cell[BoxData[{
 RowBox[{"NoHalt", " ", "=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{"lengths", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "False"}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Halt", " ", "=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{"lengths", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "True"}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"HaltTrain", " ", "=", " ", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"Halt", ",", 
    RowBox[{"Length", "[", "NoHalt", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TrainingData", " ", "=", " ", 
  RowBox[{"Join", "[", 
   RowBox[{"HaltTrain", ",", "NoHalt"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TrainingData2", " ", "=", " ", 
  RowBox[{"ConvertSKTableToString", "[", "TrainingData", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7398718328071957`*^9, 3.7398719480890427`*^9}, {
  3.739882283988702*^9, 3.739882306676138*^9}, {3.739925864341235*^9, 
  3.739925865648127*^9}, {3.739926497854299*^9, 
  3.739926502137892*^9}},ExpressionUUID->"60938424-7c4c-4e51-8422-\
2393c6fbae89"],

Cell[BoxData[
 RowBox[{"HaltClassifier1", " ", "=", " ", 
  RowBox[{"Classify", "[", "TrainingData2", "]"}]}]], "Input",
 CellChangeTimes->{{3.739872064023624*^9, 3.739872082336583*^9}, {
   3.739872152860105*^9, 3.73987215599541*^9}, {3.73987218719993*^9, 
   3.739872196891059*^9}, 3.739872318601696*^9, {3.739872431581009*^9, 
   3.739872434756749*^9}, {3.739885596452054*^9, 3.739885598560957*^9}, {
   3.7399258911052427`*^9, 
   3.73992589220361*^9}},ExpressionUUID->"204b98ad-2850-42fb-9662-\
874b99a5d840"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HaltClassifier1", "[", "\"\<s[s[s]][s][s][s][k]\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7398724883407593`*^9, 3.739872538157875*^9}, {
  3.7398727453927603`*^9, 3.739872745995302*^9}, {3.7398856173218517`*^9, 
  3.7398856300888033`*^9}, {3.73988622562111*^9, 3.739886249634664*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"b6f8579d-8dc2-43b0-9115-235783c947ad"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.739872122572629*^9, 3.739872143737302*^9}, {
   3.739872498147097*^9, 3.739872538613996*^9}, 3.739872746526968*^9, {
   3.739885617780693*^9, 3.739885634277184*^9}, {3.7398862160606127`*^9, 
   3.73988624997501*^9}},
 CellLabel->
  "Out[216]=",ExpressionUUID->"d17529df-f4b3-4d86-9a72-e6003c5d3e50"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classifier test:", "Subsubsection",
 CellChangeTimes->{{3.739926154534072*^9, 
  3.7399261574440002`*^9}},ExpressionUUID->"90e50879-6790-448a-8a45-\
3847efcc84a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TestClassifier", "[", 
    RowBox[{"HaltClassifier1", ",", "TrainingData2"}], "]"}], ",", "10"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.739886451203587*^9, 3.7398864572192307`*^9}, {
  3.739886492702322*^9, 3.739886493206777*^9}, {3.739926108683092*^9, 
  3.739926146590344*^9}},ExpressionUUID->"fdd97a7d-3592-4cfe-82b1-\
26c0d8280613"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxd0L9vAWEcx/GLyShiuEgHGkS0Eb9p/bp2NogYjCKR2DAwMLgGaQ2VNl1u
rEFqEJPNYjGYO9QgYTT6C6T4fJ7lLrm887on99zzPXupmisbJElynu9LcR3T
12T7Ch+gk1faiGpD2oRu3mmLzjIrfIPKL7QNfevSt+ixRzvQD2EXehjQbrSm
0h502aHvUbVOe9HvKu1DizXaz+8JB9B9iw7q3g/p9g/zPA06QrfpKDoR88dQ
WfzfB7Qg5ntEtU86joY0OsHzj+gkWhnTKfQ0o9Poz5xW0OaCc8Dq14rrT/Df
muvw0vfL9Wc4v1WG1oz5zgvbpjvlHyCNSbg=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 32432.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.739886457595297*^9, 3.739886493693921*^9}, {
  3.7398865957623463`*^9, 3.739886609602104*^9}},
 CellLabel->
  "Out[260]=",ExpressionUUID->"5dc4108e-31a3-4fc1-956e-6eca2e10ee76"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdkDluwkAUQC2qlBQUFCmcCBBCCCWEsAcPOYALWjbjYBbFgERF6aNwFAro
OYIPkCJHIPDfRGJGGj29+cvMnyd/0wsSlmVl//aVsn6dGw5zxYEwGuIPQm+C
J4WHMZ4iP8DTxKf4o1D1cRsf4c/CvYdn6OfjOXX/vjz1IV7Av/CiUV8irvu/
QD3PK/fP8LLQW+Fv9FvjFfKX+LtxX1UYa6/BAawzj/YGrv+zKbR1fcvwtlH/
Ifyfr8P7tDtGf0U+/xXh8YJ4lzjzRbj9TfyT/lt1cn+Oboifd+oCgftAkw==

        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 397.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{
  3.739886615422818*^9, {3.739887166765317*^9, 3.739887191064084*^9}},
 CellLabel->
  "Out[281]=",ExpressionUUID->"9c489918-82cf-41b0-af77-0d2b4f8380ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdyUsKQWEYx+E3I0MDAwMDJCHJ/e6c47ICZQPK2BYs2RLcTsnz1dev5/3X
L7fTtRARndd/9/se6SfZOcsPeTd5i7iEy7iCq7iGG7iJW7iNu7iH+3iAh3iE
x3iCp3iG53iBl3iF19hucYJTnP37jmPHjmPPjuPAjuPI/vMTswsrXw==
        
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 85.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{
  3.739886616885604*^9, {3.739887196527751*^9, 3.739887203935425*^9}},
 CellLabel->
  "Out[287]=",ExpressionUUID->"76615580-ce29-4674-9ec9-f0413be4b68b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdzjmKAlEURuGHkaGBgYGBioiKNM7zULZuQMVAMCgFh6ChRWg6k3InLsUl
uJReQiv3iPgXPA7fu9yqSq6/p5uQcy53P4/a8zewnj0urLcTDlsTvzhiPfzg
KD7imPXyheNWb4sTvG+PU1Z/h9Ps+zhDVzTL/hrnrdclLuAF/qAzWrQGE1yS
eZn9pyv8/xxXxTX5Xl3mDTqmTXFL3BZ3xF1xT9wXD8TeuwOxG8pc7D5lLnYj
mYu1wcv/0lQ3Hg==
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 544.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.73988661828052*^9, 3.73988662298308*^9}},
 CellLabel->
  "Out[264]=",ExpressionUUID->"cea92276-d112-4275-a4d8-2f8d560d9d43"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdyTsKwkAURuGLVcoUFhYpoogYkaAZ38bMmJg+zBIEa7eQJbsElbkgnoHh
8N1/fH/6x0BEss//NryXDe2cHkKdV0ehfauOtUY71E61IziBU3gCszN4Di/g
JZzDK3gNF7CBN/AW3sF7+AAf4RN8hkv4Alewhd2/e1iu2GGpscPSYIflhv3n
NxxPKHg=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 73.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.739886625796891*^9},
 CellLabel->
  "Out[265]=",ExpressionUUID->"2311a5da-947c-4061-aed5-205b7ecda5cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdzMsKAXEYhvEvK0sLCwuLIQlJzmdmHBaWSEkWJBM7tzCX5lJcgktw+L8l
z9T09Ju3+TKn2zqMmVnx/X7qnqf/zeMa6IN6UeOuXignXO8HOeka7OWUulPT
sOcabeUs/s/hft71eJYLuFfSvY1clldyRV2qVe0LuQbX4QbchFtwG+7AXbgH
9+EBPIRH8Bj24eDfEWwT7LBNscM2ww7bHPvPL0+OP/0=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 199.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.739886627831641*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"ba3426f8-6607-4d09-b98d-91b7fab366a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdy7sOQUEUheEdtUKhUCgQQUTE/e4Yl0KtEIWECI3GK5xH8SgezWUvEf8k
kz9f1kz+dNtcEmZWft13/STDJ4+r11LqWU1770c5ox7UrP7v5Zw37OSC/P1f
1PutXPLGa7kCV+EaXIcbcBNuwW24A3fhHtyHB/AQHsFjeAJP4QieweHfMWxz
7LAtsMO2xA7bCvvPT1ttPgw=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 214.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.73988709746204*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"82ab3035-7de6-4ff3-8705-a9f684d9e32e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.739886617967916*^9, 3.7398866272985353`*^9}, {
  3.7398870969146233`*^9, 
  3.739887107194312*^9}},ExpressionUUID->"9e51bc69-a7a4-4c3a-ba38-\
58a7bd1fca2b"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.739887102765649*^9, 
  3.7398871042005873`*^9}},ExpressionUUID->"9f711335-a35f-44e0-a7fa-\
3928ee902904"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SKGrid", "[", 
  RowBox[{"k", "[", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{"k", "[", 
        RowBox[{"k", "[", 
         RowBox[{"k", "[", 
          RowBox[{"s", "[", 
           RowBox[{"s", "[", 
            RowBox[{
             RowBox[{"k", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"k", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"k", "[", "k", "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"s", "[", "s", "]"}], "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"k", "[", "k", "]"}], "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"k", "[", "k", "]"}], "]"}], "[", "s", "]"}], 
                    "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"k", "[", "s", "]"}], "]"}], "]"}], "]"}], "[", 
                   RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{"k", "[", "k", "]"}], "[", 
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"s", "[", "s", "]"}], "[", 
                    RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
                    "k", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", "k", "]"}], "[", 
                    RowBox[{
                    RowBox[{"s", "[", "k", "]"}], "[", "k", "]"}], "]"}], "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "[", "k", "]"}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "[", "k", "]"}], 
                  "]"}], "]"}], "[", 
                RowBox[{
                 RowBox[{"s", "[", 
                  RowBox[{"k", "[", "s", "]"}], "]"}], "[", "k", "]"}], "]"}],
                "[", 
               RowBox[{"k", "[", 
                RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "]"}], "[", "k", 
             "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"k", "[", 
        RowBox[{"s", "[", 
         RowBox[{"s", "[", 
          RowBox[{"k", "[", 
           RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "]"}], "[", "s",
        "]"}], "]"}], "]"}], "[", 
    RowBox[{"k", "[", "s", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.739886342448246*^9, 3.739886350295829*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"8b5710e9-1218-49cb-bb98-6ea2eaeb991e"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt1kGOFDEMheGWYMcpOAl34AgjsebqXACJWde0J6RfnGen/pFQq/nixHaS
qv7+9vvnry+Px+Pb+7+/7/++Pq5/f358/v36/9fP0XxRvLq+O16tv1v/Tnf3
+Vjto3xwHMdxHMdxHMdxHMdxHMdxHMdxHN/n13HRd3W+KF5d3x2v1t+tf6e7
+3ysdvfzBcdxHMdxHMdxHMdxHMdxHMdxHMfxj39RXDRudr4oXl3fHa/W361/
p7v7fKx29/MFx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx/GPf1FcNG52viheXd8dr9Z/
t/6pfvf+Z/vp9XV39/NrtbvffziO4ziO4ziO4ziO4ziO4ziO47v9Oi76rs4X
xavru+PV+rv1b3d+7v7s3t/u+WW7u/7s+5Pt7vyrP79m1+92/tz9G/np9XV3
9/t1tY/ywXEcx3Ecx3Ecx3Ecx3Ecz/LruOi7Ol8Ur67vjlfrv1v/dufn7u/u
89E9v2x31599f7LdnX/159fs+t3On7t/Iz+9vpG76+/ev+ru/n2y2kf54DiO
4ziO4ziO4ziO4/jJfh0XfVfni+LV9d3xav13799s/O783Puz+3x1zy/b3fVn
359sd+df/fk1u3638+fu38hPr0/17u+33b8/que3ev7Z9av1J9ur3Z/Z9VU/
ff3q++Pu/8jd79/q/enu7uffah/lg+M4juM4juM4/r9+HRd9V+eL4tX13fFq
/d36Nzv/3frjrn92/mh81fjq+bnPb3V374/q2ffT7e7z73Z3/dXvx2n9qf5+
rpZftrvrd79fVK+ef/f9rd7fkVP/889X46Pxp57/0/JbPf/s+tX6k+3V7s/s
+qq71x85/fWu747HP3f382u1j/LBcRzHPX4dF31X54vi1fXd8Wr9d+vf7Px3
7+/u+mfnj8ZXja+en/v8Vnf3/qiefT/d7j7/bnfXX/1+nNaf6u/navllu7t+
9/tF9er5d9/f6v0dOfU//3w1Php/6vk/Lb/V88+uX60/2V7t/syur7p7/ZHT
31x391ddX3X3/rh//7jrP927349RHlEdOI7X8+u46Ls6XxSvru+OV+u/e/9m
42fnv/v+7K5/dv5ofNX46vm5z291d++P6tn30+3u8+92d/3V78dp/an+fq6W
X7a763e/X1Svnn/3/a3e35FT//PPV+Oj8aee/9PyWz3/7PrV+pPt1e7P7Pqq
u9cfOf3NdXd/1fVVd++P+/ePu37Vu+ef7d3v5yiPqA4cP9Gv46Lv6nxRvLp+
93i1f/R/Ln52/rvvz+76Z+ePxleNr56f+/xWd/f+qJ59P93uPv9ud9df/X6c
1p/q7+dq+WW7u373+0X16vl339/q/R059T//fDU+Gn/q+T8tv9Xzz65frT/Z
Xu3+zK6vunv9kdPfXHf3V11fdff+uH//uOtXvXv+2e6+n92fL+7nU7ZXr8+9
/+v8H2bAAUU=
   "], {{0, 0}, Offset[{759, 33}, {0, 0}]}, {0, 1}],
  Frame->False,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{759, 33},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{0, 759}, {0, 33}},
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.739886350777362*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"caa72cc7-5279-4b53-930f-d33171536de1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"GenerateTable", "[", 
   RowBox[{"depth_", ",", "iterations_", ",", "number_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "exprs", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"exprs", " ", "=", " ", 
      RowBox[{"Monitor", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomSKExpr", "[", "depth", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "number"}], "}"}]}], "]"}], ",", "n"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"lengths", " ", "=", " ", 
      RowBox[{"Monitor", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"exprs", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "\[Rule]", " ", 
           RowBox[{"SKHalt", "[", 
            RowBox[{
             RowBox[{"exprs", "[", 
              RowBox[{"[", "n", "]"}], "]"}], ",", "iterations"}], "]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "number"}], "}"}]}], "]"}], ",", "n"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "lengths", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7398820958498487`*^9, 3.739882108437313*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"8cf338d8-acad-428c-ab0e-17cdf005643e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"GenerateTable", "[", 
       RowBox[{"n", ",", "40", ",", "200"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}], "]"}], ",", "n"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.739872624489894*^9, 3.739872631123022*^9}, {
  3.7398817973913193`*^9, 3.7398818734295692`*^9}, {3.739881905560164*^9, 
  3.73988190594028*^9}, {3.739881944773789*^9, 3.7398819496386843`*^9}, {
  3.739882211866831*^9, 
  3.739882213871719*^9}},ExpressionUUID->"7237e26f-aea6-4c11-a5ab-\
11d847b9cb76"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"k", "[", "s", "]"}], "\[Rule]", "True"}], ",", 
           RowBox[{
            RowBox[{"s", "[", "k", "]"}], "\[Rule]", "True"}], ",", 
           TemplateBox[{"1997"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{
              RowBox[{"k", "[", 
               RowBox[{"k", "[", 
                RowBox[{
                 RowBox[{"s", "[", 
                  RowBox[{"k", "[", 
                   RowBox[{"k", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", "k", "]"}], "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{"k", "[", "s", "]"}], "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "[", 
                    RowBox[{"k", "[", "s", "]"}], "]"}], "[", "s", "]"}], 
                    "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"s", "[", "s", "]"}], "[", "s", "]"}], "]"}], "[", 
                    RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"k", "[", "s", "]"}], "[", 
                    RowBox[{"k", "[", "s", "]"}], "]"}], "[", "s", "]"}], 
                    "]"}], "[", 
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "[", "k", "]"}], 
                    "]"}], "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "[", "k", "]"}], 
                    "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"k", "[", "s", "]"}], "[", "s", "]"}], "]"}], 
                    "]"}], "[", "k", "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", "s", "]"}], "]"}], "[", "s", "]"}], 
                    "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", "k", "]"}], "[", 
                    RowBox[{"k", "[", "s", "]"}], "]"}], "[", "s", "]"}], 
                    "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "[", "k", "]"}], 
                    "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"s", "[", "k", "]"}], "[", 
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", "s", "]"}], "]"}], "[", "k", "]"}], 
                    "]"}], "[", 
                   RowBox[{"s", "[", "k", "]"}], "]"}], "[", "s", "]"}], 
                 "]"}], "]"}], "]"}], "[", 
              RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "\[Rule]", 
            "True"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{73., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{61., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{61., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 19904695938153399865, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 19904695938153399865, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 19904695938153399865, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{92., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[19904695938153399865 === $SessionID, 
   Out[150], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.739882204794662*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"68278b35-9ab6-44b1-9fa3-221ce09d8455"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Training Attempt #2: 200 random SK expressions at each of depths 1-10, halted \
if SKHalt[40]==True. NoHalt dataset not same length as Halt dataset. Using \
raw string. Bad performance. <citation needed>\
\>", "Subsection",
 CellChangeTimes->{{3.739885663000449*^9, 3.739885665262878*^9}, {
  3.739926235265271*^9, 3.7399262369820843`*^9}, {3.739926540714086*^9, 
  3.739926573032988*^9}, {3.7399266106970663`*^9, 
  3.739926613523512*^9}},ExpressionUUID->"b49b8db9-06ee-4c8a-bbe9-\
71db00e37430"],

Cell[BoxData[
 RowBox[{"LargeTrainingData", " ", "=", 
  RowBox[{"GenerateTableDepthRange", "[", 
   RowBox[{"1", ",", "10", ",", "40", ",", "200"}], "]"}]}]], "Input",Expressi\
onUUID->"fccccda1-8d14-4734-a57f-4c8182b921a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "LargeTrainingData", "]"}]], "Input",
 CellChangeTimes->{{3.739885931580703*^9, 3.739885938409638*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"3f5f5e11-f495-45d8-99c1-95dc49369299"],

Cell[BoxData["1563"], "Output",
 CellChangeTimes->{3.739885938983904*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"1d16ba11-a973-4bac-b86c-5ede5d1f5c88"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LargeTrainingData2", "=", 
  RowBox[{
  "ConvertSKTableToString", "[", "LargeTrainingData", "]"}]}]], "Input",
 CellChangeTimes->{{3.7398823563986597`*^9, 3.739882365040913*^9}, {
  3.73992651439326*^9, 
  3.739926523609365*^9}},ExpressionUUID->"32bf3f75-c35f-4890-b640-\
b7d26e263c71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LargeClassify", " ", "=", " ", 
  RowBox[{"Classify", "[", "LargeTrainingData2", "]"}]}]], "Input",
 CellChangeTimes->{{3.739882227925384*^9, 3.7398822389662867`*^9}, 
   3.739882385587817*^9},
 CellLabel->
  "In[187]:=",ExpressionUUID->"9276463c-b75e-49bd-aa40-86c0f1a6ae77"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "False", "True"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "False", "True"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Markov\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["1563", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 1563, "ClassNumber" -> 2, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Text"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Text"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Text", "Weight" -> 1]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], "Fill" -> 
             "", "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], "Type" -> 
             "Text", "Version" -> {11.3, 0}, "ID" -> 7263179337424669307]], 
           MachineLearning`MLProcessor["ToLowerCase", 
            Association[
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 3139720177438361802, "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["RemoveDiacritics", 
            Association[
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 5643421565728107793, "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["TextToNominalSequence", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Forbidden", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
             "Tokens" -> {{
               " ", "\n", "\t", "\:f39f", ",", ".", "!", "?", "\"", "'", "(", 
                ")", "$", "%", "&", "@", "*", "-", "+", "[", "]", "{", "}", 
                "\\", "|", "\\", ">", "/", "~", "`", "#", "^"}, {
               ":)", ":-)", ":D", ":-D", ";)", ";-)", "<3", ":p", ":-p", ":P",
                 ":-P", ":(", ":-(", "=(", ":/", ":-/", "</3"}, {
               "=", "<", ";", ":"}}, "Method" -> "WordSegment", 
             "Version" -> {11.3, 0}, "ID" -> 3051290048872824615, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor[
           "NoninvertibleIntegerEncodeNominalSequence", 
            Association[
            "Invertibility" -> "Impossible", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]], "Index" -> 
             MachineLearning`SortedHashAssociation[
               Association[
               "KeyHashes" -> {-9013817937938426079, -4973948215836336071, 
                 2077270817744784973, 3408017859420023313}, "Values" -> None, 
                "DefaultValue" -> -1, "HashFunction" -> 
                Function[{
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$}, 
                  Switch[
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, {
                    BlankSequence[String]}, 
                   Data`StringHash[
                   MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                   
                   Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                   Blank[List], 
                   Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    StringJoin[
                    ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
                    
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {11.3, 0}]], "MissingCode" -> 0, 
             "Version" -> {11.3, 0}, "ID" -> 2055599668730355056, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]]]]}, 
         "Invertibility" -> "Impossible", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 6577660353193586174]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[False -> 1, True -> 2]}, "MissingCode" -> 0, 
             "Version" -> {11.3, 0}, "ID" -> 5749777139264552649, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 2672999966851599696]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[False -> 0.06389776357827476, True -> 0.9361022364217253]], 
    "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
    "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
    Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association[
     "ClassPriors" -> 
      Association[1 -> 0.06389776357827476, 2 -> 0.9361022364217253], 
      "Method" -> "Markov2", "TokenNumber" -> 4, "Order" -> 4, 
      "MinimumTokenCount" -> 0, "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "NoninvertibleIntegerEncodeNominalSequence", 
            Association[
            "Invertibility" -> "Impossible", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]], "Index" -> 
             MachineLearning`SortedHashAssociation[
               Association[
               "KeyHashes" -> {1, 2, 3, 4}, "Values" -> None, 
                "DefaultValue" -> -1, "HashFunction" -> 
                Function[{
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$}, 
                  Switch[
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, {
                    BlankSequence[String]}, 
                   Data`StringHash[
                   MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                   
                   Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                   Blank[List], 
                   Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    StringJoin[
                    ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {11.3, 0}]], "MissingCode" -> 0, 
             "Version" -> {11.3, 0}, "ID" -> 8320522033291663338, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "NominalSequence", "Weight" -> 1],
              "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Impossible", "Missing" -> 
         "Imputed"]], "NGramPosition" -> MachineLearning`SortedHashAssociation[
        Association["KeyHashes" -> CompressedData["
1:eJw9lkmubEUMRN+AFQAbYAFI6S6dXsKX/oglMEBixOAzZe8cZ1Olp1cl+16n
m4hw/vbnP3/89d/X19ePn/j3/e8f/377lR+/1/DQjCrhe7nPVcexalmYLpE1
TIbXx7HMNGasiXfOIT6vI3nFgkC2Im2KvzemjqHCV1qVp6VeR4hWEkCmLFnp
/hzekcOnrcySmpUfhy5zHWuo+9Cafh0dWZbNCDUhPRvPkWNpVnDqSBJMuQ41
H7EylmRMC9zPgdlravAiqXHMdUjnqHOQzlw+Vr3Dx+oINLIIV1Zx36AjyzNp
rZXFKM1bB+8H6RhP8zA/X6gMbbvn7MN0qr5QZgyEbmWKpBLuOTTcTJjX5JjA
Ic9hgxGlKF2hnYzwOkYUT65ZPV4G+3o1lwrlqVKklau87k5ipdMjGRQpfJ4j
ooZGxRqjguE8MMzw4FD3NTqU17DrkAINM6hBhwiF13OQ1iRgOq8xYVsfh+9W
GX2mwSEv3VEcbsq4e7Y8drNipLMrE+d81eklH8cYzMlBpNOSXDfdSKoGnQQC
KTOB73VMB6NinMNkqixvHVTnPQoBzlGgd9x0GYIz0SpC8iMjr8Pph6mPSsAF
b0jwOhxCkeWcTIIvfRB1WzXmygF9nNRVn0ObduBweYO3fMVxwLyK8gE/wpm4
hD+HTIPrYAisMo18DldYAQWZnzZ39YUCAwGeBhU0KMjyOkYP0EE0vSTdeGco
lGri8ApvMMh1K6c2xsl4BrSkDNK4DiADLawGo0ACXOZzSGI2sxYfxvQGpZJi
DdMBOwGkPXIq8GEeITQDWAR6cBxCcFEA7DLMqftRrTsHN8sapd48v1kJobOD
gETQSD9v5ULR4a1K0ij0+LzRDYKfNIBMeXHIcwSzWwuCeC5vXj8HdTULUSc4
Lf7UBysS5bJRFSOLOn7ZSg3BBb0iV9gGUda1Q39km/H2hBefY0+6hMoYZdL/
BVyOHdYzGf62YIFGvXbGx5DBgijQjBd/Kl0agUTT9NalenaUfGCFki0bGcfe
AmEggNZCZHh57Sg9Khg9OZUCdvrs2lKA0AKkgWLVt5+PGMFsS4LDSU71bUau
rKQBRoZMhmrbjPKi79FCk04Mi20OwIVWox7IxHDibDM8LBFkoHrvQfgThEWH
ThF4kivgI8NthjRM11vbe8Qjt7lkjwMd62kgornrkSGLkqpXZC9C1OTaJ5Bm
Ep5Uwxrx0xeg2SImrcZk2J9jbxUZUKx7Mhdf93mbtI92wH5onvPiA2wSf8FL
BW0ITI5rJ3uQBKh6WMZQjh1OoXh0YbaEQrN7bnWWvdCCxNA+P3bQgaBhXmgj
youMbzutQUwF6ZqQ2Juc187Cw4agzAR/CPix28ZLqzDaQZvk5Glbd6v5632M
umw70g+z0P1efpNB+sGl9+YC8cHIQDpzPnV5i8mWWpDQwMlr53qzuDy0yMMW
pM6PfW25Qpiwc20A/8fe68yDEGycJrTWtfexcLPgNppo68SH5/R8Sxg6BK4u
T9ju8Ic0AD+UgHBx7Xun5uz7h/Y94fQteu2yZ6qFlDX5zkVAep3RNeSMqvPy
mZlS6mDdaV/UoNGJA0r2rQBqZi8Fijj2BghO+AmVmPvl52xRYPV431lQDXn2
JB9IiX7wXvROeXZw0ChiSTBHu3hAB0APDeWOgKpJ3zq2nYsYYRANBbik//Kn
K32hAg8kS0v19DNlzzWRpL4dwqqTD3Tru1ffX+C7tOofO0xgp8KNVgaSvfUm
19LWcca1d9K8erf2UmUC0AsR5iJ26mINcUXlQgy3W2hg+LErrULZQBAK1NfW
vPZpSd8YPhcEftxz6S2oZdtRMPxjmvd5uoUmUhIor5atg7deDn1F7OsPCokq
XDtB4EJfEbnicNTVAS4G3jtz7Utq53/ilwCU0XsxrO8BOuf/2msg9g==
          "], 
         "Values" -> None, "DefaultValue" -> Missing[], "HashFunction" -> 
         Function[{
           MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$}, 
           Switch[
           MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$, {
             BlankSequence[String]}, 
            Data`StringHash[
            MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$,
              "Murmur3-64"], 
            PatternTest[
             Blank[], 
             MachineLearning`PackageScope`PackedArrayQ[#, Integer, 1]& ], 
            MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$, 
            PatternTest[
             Blank[], 
             MachineLearning`PackageScope`PackedArrayQ[#, Integer, 2]& ], 
            
            Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`q = {
               
                Quotient[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^48], 
                Quotient[
                 Mod[
                 MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^48], 2^32], 
                Quotient[
                 Mod[
                 MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^32], 2^16], 
                Mod[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^16]}; 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`q = 
              Transpose[
                MachineLearning`PackageScope`ToPackedArray[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`q]\
, {1, 3, 2}]; 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`q = 
              Transpose[
                Flatten[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`q,
                  1]]; Data`StringHash[
               FromCharacterCode[
                Abs[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`q]\
], "Murmur3-64"]], 
            Blank[List], 
            Map[Switch[#, 
              Blank[String], 
              Data`StringHash[#, "Murmur3-64"], 
              PatternTest[
               Blank[], Developer`MachineIntegerQ], #, {
               PatternTest[
                BlankSequence[], Developer`MachineIntegerQ]}, 
              
              Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
               MachineLearning`file132SortedHashAssociation`PackagePrivate`q = {
                  Quotient[#, 2^48], 
                  Quotient[
                   Mod[#, 2^48], 2^32], 
                  Quotient[
                   Mod[#, 2^32], 2^16], 
                  Mod[#, 2^16]}; 
               MachineLearning`file132SortedHashAssociation`PackagePrivate`q = 
                Flatten[
                 MachineLearning`file132SortedHashAssociation`PackagePrivate`\
q]; Data`StringHash[
                 FromCharacterCode[
                  Abs[
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
q]], "Murmur3-64"]], 
              Blank[], 
              Data`StringHash[
               StringJoin[
                ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$\
]]], "Version" -> {11.3, 0}]], 
      "ConditionalProbabilityMatrix" -> CompressedData["
1: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
       "], "DiscountMatrix" -> 
      SparseArray[
       Automatic, {125, 2}, 0., {
        1, {{0, 2, 2, 4, 4, 6, 8, 10, 12, 14, 16, 18, 18, 18, 18, 20, 22, 24, 
          24, 24, 26, 26, 28, 28, 28, 30, 30, 32, 32, 34, 34, 36, 38, 40, 42, 
          44, 46, 46, 48, 50, 52, 54, 54, 56, 58, 60, 60, 62, 64, 64, 66, 66, 
          66, 66, 68, 68, 68, 68, 70, 72, 72, 72, 72, 72, 72, 72, 74, 74, 74, 
          74, 76, 76, 76, 78, 78, 78, 80, 80, 80, 82, 82, 84, 84, 84, 84, 86, 
          86, 86, 86, 88, 88, 90, 90, 90, 92, 94, 94, 94, 96, 96, 96, 96, 96, 
          98, 98, 98, 98, 100, 102, 102, 102, 102, 102, 104, 106, 106, 108, 
          110, 110, 112, 114, 116, 118, 118, 120, 120}, {{1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}}}, CompressedData["
1:eJwtU31ME3YQrYD9tRgYlo+CVrBjrRQc4FqME+TOActSUURkAgMcxAmMgKFV
oVQbGDpldsoYQSKjmxK7DStOvhQUMIDgRD4MHRtxcQgVOsvkN+oIEyhjKS+5
3B93997l8o6femTfJ6sYDEbecsT6txivVLpgRr674NC3zujilZoiURLs4sm+
+rudhQVL/2MatjCXmxkU5jh7600RFB4mHbhlbKOQWXJ68yH+PEQ4OKp7al/D
QtfTU1O7WTgWLxhvjGXj7/oTee/X5cJEwLO11UHRoIr7JqRBI8AqIklzkArx
Be/KwcU4dzT9xn1UO+KGSQ/GE2MlZnA6vjfuttoMn8t/vXn/KRPFwZE7ZpoJ
6lZZ92DbWXMjQ83vqHHF3qKUO6H7uZgVdeKgfoZgVcPRDr09wdZiv3XK7RSe
X+zMwUYK67L7K8QTvhic/ZdtU7cAhT+d3zod44tdurJ9UpEAv/hOck+OFA7f
9Qqv+JGCF3cLQwFmUDgk3D9TbIag2bibPv4UqhSuwcPXKPiZhhWrJUychjG5
tpzgolacvr2IiaKCqw5PdARbjr4caU4jyC8unWwKZKOd+w8xvE42agodzSP+
BKn/SFu3rxm890demLpgBlJWkmsnpLCrKDK49xgFzxhDfTZlosmV42xuJ9gu
s0/eU8jBeVW65VGCC2qCPor3nVsArz5RmUq+APlENUpUbPSJH0rq9yAYMLwr
oPWVEy5tlc6Iy52QmeZS2LtmLX65Xqw6mcvBiLAQZ/3sTjiXrItwbOTB0JOC
y5fOC9A1n9eTw9uEZ895y200S5BQOdjQ/9oCsyLjlE2mDFgVtmE926LhgfLa
9R2xBG0SU67KhghuE4aIPrCwsG+nR+vbmQTvXc+o0QjDwedPWdvSAR4kTkbL
At+h0KT6+cMcLQVWs9vhwN0UuKu7OYM6Cm6WjaWdngSjhtPElytZOEpGS7Qd
bGQbByZnzhIEaVprbRMbsyLHHpqW7z2wp7K8IckbpMfe/LqZbwl9LFRLNyaL
Yc3zRE/dJkeonowfU00QNDFvF7xlYKFlxc/pNlb/KLMyluGHn0YZajyyhfiy
z3PDeOkcGLgXVZPKOeCdrEzVUza+p2gTbNhMMG9l7sgKD/fj9QPeg2yURhPn
0OW/OXXjlrq5m4OuWc7iF+4c9Gww2z6+y0SbRYPwlYGJgd/z628w3kDy7530
XwqcsGneytNib+Wt7rtUp9UJMOxZXfhnpwVIV3SOM6x1+bt/6PQiCiNa4z/G
LAr/Af06rPU=
         "]}], "Discount" -> {0.5, 0.5}, 
      "DefaultUnigramProbabilities" -> {0.000013048868010700073`, 
       2.5076326067467856`*^-6}, "Options" -> 
      Association[
       "Order" -> Association["Value" -> 4, "Options" -> Association[]], 
        "AdditiveSmoothing" -> 
        Association["Value" -> 0.1, "Options" -> Association[]], 
        "MinimumTokenCount" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "ExcludedTokens" -> 
        Association["Value" -> {}, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "MeanCrossEntropy", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         PlusMinus[0.5211762289138455, 0.0787507061806321], "Accuracy" -> 
         PlusMinus[0.7517399599435947, 0.04472467037721505], "EvaluationTime" -> 
         0.0018931499999999997`, "TestSize" -> 500, "TrainingSize" -> 250, 
         "TrainingTime" -> 0.75523925, "TrainingMemory" -> 9.320008*^6, 
         "ModelMemory" -> 35768., "ExperimentCount" -> 3, "ModelUtility" -> 
         0.7440940718237441, "MeanCrossEntropyHistory" -> {
           PlusMinus[0.7085439979437115, 0.12059817534608586`], 
           PlusMinus[0.4598522016793951, 0.04312964052266645], 
           PlusMinus[0.5782862892892762, 0.05332494411630666]}, 
         "AccuracyHistory" -> {
           PlusMinus[0.6810747458204363, 0.046913446882814284`], 
           PlusMinus[0.8115586258169738, 0.027565468993877306`], 
           PlusMinus[0.7024919420183263, 0.03250327418834228]}, 
         "Configuration" -> {
          "Markov", "Order" -> Automatic, "AdditiveSmoothing" -> 0.1, 
           "MinimumTokenCount" -> Automatic, "ExcludedTokens" -> {}}, 
         "FinalTrainingSize" -> 1563], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory", 
          "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 3], 
          TypeSystem`Vector[TypeSystem`AnyType, 3], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association["ID" -> 54305708838997]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "Markov", "Options" -> 
           Association[
            "Order" -> Association["Value" -> Automatic], "AdditiveSmoothing" -> 
             Association["Value" -> 0.1], "MinimumTokenCount" -> 
             Association["Value" -> Automatic], "ExcludedTokens" -> 
             Association["Value" -> {}]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.2616565371605757`, 1.3398684654188613`], "Accuracy" -> 
              PlusMinus[0.8753080252289629, 0.10224148792146505`], 
              "EvaluationTime" -> 0.0012427214285714286`, "TestSize" -> 600, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.06299257142857141, 
              "TrainingMemory" -> 417473.14285714284`, "ModelMemory" -> 
              33854.85714285714, "ExperimentCount" -> 6, "ModelUtility" -> 
              0.274834874702117, "MeanCrossEntropyHistory" -> {
                PlusMinus[6.912877948702017, 3.0446784434608216`], 
                PlusMinus[5.775550828143188, 2.345560329228775], 
                PlusMinus[1.430500361201224, 0.6727175013711413], 
                PlusMinus[8.361873419791628, 1.258709468756651], 
                PlusMinus[0.6371980660070191, 0.2844602274967159], 
                PlusMinus[2.0562531539099713`, 0.7447599595237612]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.9285994982956844, 0.027036699498910185`], 
                PlusMinus[0.8691935577016249, 0.034560144784561694`], 
                PlusMinus[0.9385004883946942, 0.025435255862738246`], 
                PlusMinus[0.3048371220580591, 0.045951159069264925`], 
                PlusMinus[0.9484014784937043, 0.02368502019242743], 
                PlusMinus[0.8394905874045953, 0.03741534334205111]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.5459733050577363, 1.3415585315122538`], "Accuracy" -> 
              PlusMinus[0.8713051996575738, 0.02244243932482242], 
              "EvaluationTime" -> 0.001329527142857143, "TestSize" -> 600, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.1924492857142857, 
              "TrainingMemory" -> 1.8550354285714284`*^6, "ModelMemory" -> 
              35768., "ExperimentCount" -> 6, "ModelUtility" -> 
              0.5120793368992006, "MeanCrossEntropyHistory" -> {
                PlusMinus[0.9436866478425574, 0.35589924230971826`], 
                PlusMinus[6.239676335215458, 2.5295941309088548`], 
                PlusMinus[7.65692810234759, 3.810823367738279], 
                PlusMinus[0.4777650381836385, 0.08370280934086848], 
                PlusMinus[0.558773130640113, 0.15845241809089913`], 
                PlusMinus[0.6567178907900904, 0.15339854074321216`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.9087975180976645, 0.02988680874381914], 
                PlusMinus[0.9186985081966746, 0.02851443175814529], 
                PlusMinus[0.8592925676026151, 0.035564676639192], 
                PlusMinus[0.8196886072065751, 0.03907946889574405], 
                PlusMinus[0.8295895973055852, 0.03826913891684036], 
                PlusMinus[0.8295895973055852, 0.03826913891684036]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.5211762289138455, 0.0787507061806321], "Accuracy" -> 
              PlusMinus[0.7517399599435947, 0.04472467037721505], 
              "EvaluationTime" -> 0.0018931499999999997`, "TestSize" -> 500, 
              "TrainingSize" -> 250, "TrainingTime" -> 0.75523925, 
              "TrainingMemory" -> 9.320008*^6, "ModelMemory" -> 35768., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.7440940718237441, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.7085439979437115, 0.12059817534608586`], 
                PlusMinus[0.4598522016793951, 0.04312964052266645], 
                PlusMinus[0.5782862892892762, 0.05332494411630666]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.6810747458204363, 0.046913446882814284`], 
                PlusMinus[0.8115586258169738, 0.027565468993877306`], 
                PlusMinus[0.7024919420183263, 0.03250327418834228]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.5644723735269598, 0.031340611122167815`], 
              "Accuracy" -> 
              PlusMinus[0.6070715100561127, 0.039147724586925385`], 
              "EvaluationTime" -> 0.0014704664536741214`, "TestSize" -> 313, 
              "TrainingSize" -> 1250, "TrainingTime" -> 3.470053, 
              "TrainingMemory" -> 47485328, "ModelMemory" -> 35768, 
              "ExperimentCount" -> 1, "ModelUtility" -> 0.7217446257229017, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.5644723735269598, 0.02216115865101539]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.6070715100561127, 0.027681621523438275`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0014704664536741214`, "MeanCrossEntropy" -> 
             PlusMinus[0.5644723735269598, 0.031340611122167815`], 
             "ModelMemory" -> 35768, "TrainingMemory" -> 47485328, 
             "TrainingTime" -> 4.401946842628571], "Index" -> 1]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory",
               "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            4], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 1], 
        Association["ID" -> 54301413871701]], "MaxTrainingSize" -> 1563, 
      "LastReportingTime" -> 3.739871568456286`16.325431677438388*^9, 
      "PreprocessorEvaluationTime" -> 6.935546875`2.*^-6, 
      "PreprocessorMemory" -> 29048, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 10, "TimeBudgets" -> 2.25379678342583, 
          "ElapsedTimes" -> 2.276782, "ExperimentCounts" -> 6], 
         Association[
         "TrainingSizes" -> 50, "TimeBudgets" -> 2.817245979282286, 
          "ElapsedTimes" -> 3.0536879999999997`, "ExperimentCounts" -> 6], 
         Association[
         "TrainingSizes" -> 250, "TimeBudgets" -> 3.5215574741028584`, 
          "ElapsedTimes" -> 4.198665999999999, "ExperimentCounts" -> 3], 
         Association[
         "TrainingSizes" -> 1250, "TimeBudgets" -> 4.401946842628571, 
          "ElapsedTimes" -> 4.157209, "ExperimentCounts" -> 1]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 4], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[54310003806293]], "ID" -> 54314298773589]]], 
    "Log" -> Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "Text", "Weight" -> 1, 
           "Values" -> {
            "s[k[k[s[k[s[k[s[s[s[s[s][s[k[s[s[k[s]]]]][k[k]][s]]]][k[k[s[k[s[\
k]][s]]]][s]]][s[k][k]]]]][s[k[k[k[s[s[s[s[k[k[k[s[s[k[s][s[k[s[k[s[s[s]]]][k]\
][s[k[k]][k]]][s]]]][k[k]]]]][s[k[k][s[k][s]][k[k]]]]][k[s][k]][k[k]]]]]][s[s[\
s][s[k[s[s]]]][s[k]]]]]][s[s]]]]][k[k[s[s][k[k[k[s[k][k]]][s]][k[k[k]][k]][s[\
k]][s]]][k[k[s[s]]]][k[s]]]][s[k[s][s[s[s][s[s]]]][k[k][s]][s[s]]]]]]][s[k]][\
k]"}, "ID" -> 3791095496786132862]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 20.521056, "MaxTrainingMemory" -> 62541216, 
      "DataMemory" -> 340792, "FunctionMemory" -> 135872, 
      "LanguageVersion" -> {11.3, 0}, "Date" -> 
      DateObject[{2018, 7, 6, 13, 12, 53.133333`8.477942034319918}, "Instant",
         "Gregorian", -4.], "ProcessorCount" -> 2, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellEditDuplicate->True,
 CellChangeTimes->{3.739882247160121*^9, 3.7398824194468946`*^9, 
  3.739885973211705*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"4171684c-04ef-4c9e-8508-f2aa463c3176"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "LargeClassify", "[", "\"\<s[s][s][s[s[s]]][s][s][s][s][s]\>\"", "]"}], " ", 
  RowBox[{"(*", " ", "halts", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.73988242284734*^9, 3.7398824723498*^9}, 
   3.7398855614063272`*^9, {3.739885679709488*^9, 3.739885682275693*^9}, {
   3.739885979908174*^9, 3.73988599170044*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"015e27db-6bee-4167-b9b8-d208294962e1"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.739882433085573*^9, 3.739882472680479*^9}, 
   3.739885561916359*^9, {3.7398859764406643`*^9, 3.7398859921279497`*^9}},
 CellLabel->
  "Out[194]=",ExpressionUUID->"d5be3a0a-7f2e-4f75-b932-13bcfdfa0289"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Training Attempt #3: 200 random SK expressions at each of depths 1 - 10, \
halted if SKHalt[40] == True. NoHalt dataset same length as Halt dataset. \
Using raw string. Bad performance. <citation needed>\
\>", "Subsection",
 CellChangeTimes->{{3.739926615123761*^9, 3.739926622799021*^9}, {
  3.739926746934023*^9, 
  3.739926771419258*^9}},ExpressionUUID->"42a59022-aefc-4229-8f21-\
ab2e54b784a9"],

Cell[BoxData[
 RowBox[{"NoHaltLarge2", "=", " ", 
  RowBox[{"GetSKHalt", "[", 
   RowBox[{"LargeTrainingData2", ",", "False"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.739872725292468*^9, {3.739885714033578*^9, 3.739885728841223*^9}, {
   3.7399267130524263`*^9, 
   3.739926722493677*^9}},ExpressionUUID->"fad2d926-33c0-44dc-aa1c-\
ee736fd0c0af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "NoHaltLarge2", "]"}]], "Input",
 CellChangeTimes->{{3.739872732934414*^9, 3.73987273631643*^9}, {
  3.739885741570846*^9, 3.739885745917328*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"9bf45c92-078b-4056-af8a-c012607741fb"],

Cell[BoxData["99"], "Output",
 CellChangeTimes->{
  3.739872736682164*^9, 3.7398857463289537`*^9, {3.7398860002897253`*^9, 
   3.73988600583879*^9}},
 CellLabel->
  "Out[198]=",ExpressionUUID->"3dd24324-ce9f-4d0f-8f51-27f4aadcb019"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"HaltLarge2", "=", " ", 
  RowBox[{"GetSKHalt", "[", 
   RowBox[{"LargeTrainingData2", ",", "True"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739885779060381*^9, 3.739885781696994*^9}, {
  3.739926726480783*^9, 
  3.739926727807658*^9}},ExpressionUUID->"45694c2e-b3fe-4de0-b8ff-\
610f60d43e78"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "HaltLarge2", "]"}]], "Input",
 CellChangeTimes->{{3.739885809142725*^9, 3.739885813009063*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"c714868e-a7d7-48f8-afb5-b43a3b9e5b3f"],

Cell[BoxData["1464"], "Output",
 CellChangeTimes->{3.739885813392064*^9, 3.739886009576686*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"b662e897-c095-4d4f-b77f-fc7e81ddd4ab"]
}, Open  ]],

Cell["\<\
Many of these (200 from each depth) halt. (# not halting increases with depth)\
\>", "Text",
 CellChangeTimes->{{3.73992663899555*^9, 
  3.7399266574862833`*^9}},ExpressionUUID->"6b408b4e-7096-4de8-b015-\
02c7615ecc81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HaltTrainLarge2", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"HaltLarge2", ",", 
     RowBox[{"Length", "[", "NoHaltLarge2", "]"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.7398858342497883`*^9, 3.739885844903159*^9}, {
  3.739886032991885*^9, 
  3.739886034122102*^9}},ExpressionUUID->"293a594b-410f-4f46-accf-\
6bd7d77d4ee1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrainLarge2Sample", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"HaltTrainLarge2", ",", "NoHaltLarge2"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.739886034899781*^9, 3.739886067463236*^9}, {
  3.73988611573461*^9, 3.739886116299337*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"1bb39b7b-e19c-48d2-851c-5fe987404cfa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Large2Classify", " ", "=", " ", 
  RowBox[{"Classify", "[", "TrainLarge2Sample", "]"}]}]], "Input",
 CellChangeTimes->{{3.739886081933329*^9, 3.739886091600424*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"3178f4d3-40a0-44bf-8c86-1c142b5d6b2e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "False", "True"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "False", "True"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Markov\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["198", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 198, "ClassNumber" -> 2, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Text"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Text"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Text", "Weight" -> 1]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], "Fill" -> 
             "", "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], "Type" -> 
             "Text", "Version" -> {11.3, 0}, "ID" -> 7263179337424669307]], 
           MachineLearning`MLProcessor["ToLowerCase", 
            Association[
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 3139720177438361802, "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["RemoveDiacritics", 
            Association[
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 5643421565728107793, "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["TextToNominalSequence", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Forbidden", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
             "Tokens" -> {{
               " ", "\n", "\t", "\:f39f", ",", ".", "!", "?", "\"", "'", "(", 
                ")", "$", "%", "&", "@", "*", "-", "+", "[", "]", "{", "}", 
                "\\", "|", "\\", ">", "/", "~", "`", "#", "^"}, {
               ":)", ":-)", ":D", ":-D", ";)", ";-)", "<3", ":p", ":-p", ":P",
                 ":-P", ":(", ":-(", "=(", ":/", ":-/", "</3"}, {
               "=", "<", ";", ":"}}, "Method" -> "WordSegment", 
             "Version" -> {11.3, 0}, "ID" -> 3051290048872824615, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor[
           "NoninvertibleIntegerEncodeNominalSequence", 
            Association[
            "Invertibility" -> "Impossible", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]], "Index" -> 
             MachineLearning`SortedHashAssociation[
               Association[
               "KeyHashes" -> {-9013817937938426079, -4973948215836336071, 
                 2077270817744784973, 3408017859420023313}, "Values" -> None, 
                "DefaultValue" -> -1, "HashFunction" -> 
                Function[{
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$}, 
                  Switch[
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, {
                    BlankSequence[String]}, 
                   Data`StringHash[
                   MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                   
                   Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                   Blank[List], 
                   Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    StringJoin[
                    ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
                    
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {11.3, 0}]], "MissingCode" -> 0, 
             "Version" -> {11.3, 0}, "ID" -> 2055599668730355056, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]]]]}, 
         "Invertibility" -> "Impossible", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 2242178343964704499]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[False -> 1, True -> 2]}, "MissingCode" -> 0, 
             "Version" -> {11.3, 0}, "ID" -> 2182274502795179204, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 3987113361074832291]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[False -> 0.5, True -> 0.5]], "Prior" -> Automatic, 
    "Utility" -> 
    SparseArray[
     Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
    "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
    Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association[
     "ClassPriors" -> 
      Association[1 -> 0.5238095238095237, 2 -> 0.47619047619047616`], 
      "Method" -> "Markov2", "TokenNumber" -> 4, "Order" -> 4, 
      "MinimumTokenCount" -> 0, "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "NoninvertibleIntegerEncodeNominalSequence", 
            Association[
            "Invertibility" -> "Impossible", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]], "Index" -> 
             MachineLearning`SortedHashAssociation[
               Association[
               "KeyHashes" -> {1, 2, 3, 4}, "Values" -> None, 
                "DefaultValue" -> -1, "HashFunction" -> 
                Function[{
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$}, 
                  Switch[
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, {
                    BlankSequence[String]}, 
                   Data`StringHash[
                   MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                   
                   Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                   Blank[List], 
                   Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    StringJoin[
                    ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {11.3, 0}]], "MissingCode" -> 0, 
             "Version" -> {11.3, 0}, "ID" -> 4303325802699135503, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "NominalSequence", "Weight" -> 1],
              "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Impossible", "Missing" -> 
         "Imputed"]], "NGramPosition" -> MachineLearning`SortedHashAssociation[
        Association["KeyHashes" -> CompressedData["
1:eJw9lkmubEUMRN+AFQAbYAFI6S6dXsKX/oglMEBixOAzZe8cZ1Olp1cl+16n
m4hw/vbnP3/89d/X19ePn/j3/e8f/377lR+/1/DQjCrhe7nPVcexalmYLpE1
TIbXx7HMNGasiXfOIT6vI3nFgkC2Im2KvzemjqHCV1qVp6VeR4hWEkCmLFnp
/hzekcOnrcySmpUfhy5zHWuo+9Cafh0dWZbNCDUhPRvPkWNpVnDqSBJMuQ41
H7EylmRMC9zPgdlravAiqXHMdUjnqHOQzlw+Vr3Dx+oINLIIV1Zx36AjyzNp
rZXFKM1bB+8H6RhP8zA/X6gMbbvn7MN0qr5QZgyEbmWKpBLuOTTcTJjX5JjA
Ic9hgxGlKF2hnYzwOkYUT65ZPV4G+3o1lwrlqVKklau87k5ipdMjGRQpfJ4j
ooZGxRqjguE8MMzw4FD3NTqU17DrkAINM6hBhwiF13OQ1iRgOq8xYVsfh+9W
GX2mwSEv3VEcbsq4e7Y8drNipLMrE+d81eklH8cYzMlBpNOSXDfdSKoGnQQC
KTOB73VMB6NinMNkqixvHVTnPQoBzlGgd9x0GYIz0SpC8iMjr8Pph6mPSsAF
b0jwOhxCkeWcTIIvfRB1WzXmygF9nNRVn0ObduBweYO3fMVxwLyK8gE/wpm4
hD+HTIPrYAisMo18DldYAQWZnzZ39YUCAwGeBhU0KMjyOkYP0EE0vSTdeGco
lGri8ApvMMh1K6c2xsl4BrSkDNK4DiADLawGo0ACXOZzSGI2sxYfxvQGpZJi
DdMBOwGkPXIq8GEeITQDWAR6cBxCcFEA7DLMqftRrTsHN8sapd48v1kJobOD
gETQSD9v5ULR4a1K0ij0+LzRDYKfNIBMeXHIcwSzWwuCeC5vXj8HdTULUSc4
Lf7UBysS5bJRFSOLOn7ZSg3BBb0iV9gGUda1Q39km/H2hBefY0+6hMoYZdL/
BVyOHdYzGf62YIFGvXbGx5DBgijQjBd/Kl0agUTT9NalenaUfGCFki0bGcfe
AmEggNZCZHh57Sg9Khg9OZUCdvrs2lKA0AKkgWLVt5+PGMFsS4LDSU71bUau
rKQBRoZMhmrbjPKi79FCk04Mi20OwIVWox7IxHDibDM8LBFkoHrvQfgThEWH
ThF4kivgI8NthjRM11vbe8Qjt7lkjwMd62kgornrkSGLkqpXZC9C1OTaJ5Bm
Ep5Uwxrx0xeg2SImrcZk2J9jbxUZUKx7Mhdf93mbtI92wH5onvPiA2wSf8FL
BW0ITI5rJ3uQBKh6WMZQjh1OoXh0YbaEQrN7bnWWvdCCxNA+P3bQgaBhXmgj
youMbzutQUwF6ZqQ2Juc187Cw4agzAR/CPix28ZLqzDaQZvk5Glbd6v5632M
umw70g+z0P1efpNB+sGl9+YC8cHIQDpzPnV5i8mWWpDQwMlr53qzuDy0yMMW
pM6PfW25Qpiwc20A/8fe68yDEGycJrTWtfexcLPgNppo68SH5/R8Sxg6BK4u
T9ju8Ic0AD+UgHBx7Xun5uz7h/Y94fQteu2yZ6qFlDX5zkVAep3RNeSMqvPy
mZlS6mDdaV/UoNGJA0r2rQBqZi8Fijj2BghO+AmVmPvl52xRYPV431lQDXn2
JB9IiX7wXvROeXZw0ChiSTBHu3hAB0APDeWOgKpJ3zq2nYsYYRANBbik//Kn
K32hAg8kS0v19DNlzzWRpL4dwqqTD3Tru1ffX+C7tOofO0xgp8KNVgaSvfUm
19LWcca1d9K8erf2UmUC0AsR5iJ26mINcUXlQgy3W2hg+LErrULZQBAK1NfW
vPZpSd8YPhcEftxz6S2oZdtRMPxjmvd5uoUmUhIor5atg7deDn1F7OsPCokq
XDtB4EJfEbnicNTVAS4G3jtz7Utq53/ilwCU0XsxrO8BOuf/2msg9g==
          "], 
         "Values" -> None, "DefaultValue" -> Missing[], "HashFunction" -> 
         Function[{
           MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$}, 
           Switch[
           MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$, {
             BlankSequence[String]}, 
            Data`StringHash[
            MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$,
              "Murmur3-64"], 
            PatternTest[
             Blank[], 
             MachineLearning`PackageScope`PackedArrayQ[#, Integer, 1]& ], 
            MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$, 
            PatternTest[
             Blank[], 
             MachineLearning`PackageScope`PackedArrayQ[#, Integer, 2]& ], 
            
            Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`q = {
               
                Quotient[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^48], 
                Quotient[
                 Mod[
                 MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^48], 2^32], 
                Quotient[
                 Mod[
                 MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^32], 2^16], 
                Mod[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^16]}; 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`q = 
              Transpose[
                MachineLearning`PackageScope`ToPackedArray[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`q]\
, {1, 3, 2}]; 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`q = 
              Transpose[
                Flatten[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`q,
                  1]]; Data`StringHash[
               FromCharacterCode[
                Abs[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`q]\
], "Murmur3-64"]], 
            Blank[List], 
            Map[Switch[#, 
              Blank[String], 
              Data`StringHash[#, "Murmur3-64"], 
              PatternTest[
               Blank[], Developer`MachineIntegerQ], #, {
               PatternTest[
                BlankSequence[], Developer`MachineIntegerQ]}, 
              
              Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
               MachineLearning`file132SortedHashAssociation`PackagePrivate`q = {
                  Quotient[#, 2^48], 
                  Quotient[
                   Mod[#, 2^48], 2^32], 
                  Quotient[
                   Mod[#, 2^32], 2^16], 
                  Mod[#, 2^16]}; 
               MachineLearning`file132SortedHashAssociation`PackagePrivate`q = 
                Flatten[
                 MachineLearning`file132SortedHashAssociation`PackagePrivate`\
q]; Data`StringHash[
                 FromCharacterCode[
                  Abs[
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
q]], "Murmur3-64"]], 
              Blank[], 
              Data`StringHash[
               StringJoin[
                ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$\
]]], "Version" -> {11.3, 0}]], 
      "ConditionalProbabilityMatrix" -> CompressedData["
1:eJxlVQtUTHkcrnb1MHRWIo/KEspjNd5a6pPd7YFSOpYWocEoq/KqsJ6n6Yge
yOuIbFTeZSPLpohKCo2auaNpZrp35t6ZHhSlsuXs2Tvj4pzmO797/ueee8//
/7vf7/u+OzI0cvE6MxMTk93spV9be4rYqod1drlQuVoOn3Nt3ufadKh0T7qp
qGnAgMrBviV5Uqzc9vIXu5USFFudfWh1lkRcp418wYZ6KMcPnfv3fAL3Janv
6rII3Bt98kqKBQU7q/DxPw9XIW1TQHtgkgb96w+apfozYNK9lrWE0bh4QQ81
jgujZu8wl6H7Xz1qsXCDa0ZhXBnsZq7Zs/RwAXKd1yWbWhOIIh/u/8aCwFBB
4uSyIRpcNUCNirJYBztLAj7ofpmyRwK3BZ2yf+bVYM2QeLZeIpD40PFOVIcl
6QkpPRG16MocUvDHZQbdB4r+dG3Q4NaxE9fXjmlGcPm8wXlHGiFcr4ccSwwo
RUHoxYye1UpQFntItvDUYf3brGwpdCea7sUMlOD1+ZmWwis0DG0JaNgPDPUk
kiVQDIgpcdgsw2b7J2ypkPm8x/ZUPwqS+PadI1iekrNf5LrT1ag93HN9x1AG
wSfXscXAxIC3Dz6vU1fe2Vvx/WOIJq4dyQsuh+nje8PlJfXIztJDiRcR1FLB
KCU0s5LZqoFlnqO1byPN7UNDGHjrcrCEhoXNjZtuR2jYVKY7nZirwumNFlr5
fgpF10r9Ttcr0XVCWkAXk6B1h4KTP9KIndE0e3gHg5zlIaRpnRIdvuff+54n
oVY1tAdcpTmePvdL4XDuh0O5H9SwpAdd9/yWwRjfY6N9j9H4TpwSYC0lYaBX
pIAoz3+LoJzEpI/hCzMtVFjicyjfxJmB2bGyiY4yBqVVLu+mzlfATf85GtJo
f3vnc9s3z1KjYdGUwVK+Buuz+G+PiqXoEqBTAALtYUKJ6K6E6+8VbuzLNyP6
kpy+1bh0khfT4dcE/9P1UvXY13B6s2w/v1oFz1Viu/d9lLghpg8GR5bBv9+D
SFlOCTz9RBse61rhZad3QCvXz1fE8+tEfJYfS4M8ZAgOIo5PX6fEFsPcXwKN
qR6NqaovfikQrUpKeE/C8HgzjRDTpILtIRRGG/hS4Gat+fQR0lfYe2fZ0KIB
UpjI9qfcSyC475HAPrw2yPkxhVPikHm7rJS4b5M/IbBA+6mvfU2IKh3Glhiv
A+86ipqLUTku1q2PK4VlglHuAW51nL8I6NWaOJlArjY8RxtOYKNLbsb9eDlO
L1hs12xFceep8KDcdlFcKsPda4z47J0fCe5euDaSQMpdp5aDs6tR1KXa1Voo
43gTY7Y6mX1CcnrVIGPK89+nbylBbRf9TNdZZsTfEkeH2KqZWqTrdrClRadb
5tghkfXg22SVOa6nEJIdmOZkTmBFyqMOlxUyePJuz+XdptGfmX5cFqCGjx9f
VeFBYtCpfsU/yhWcHxkuP7T4Icp6z1E1CaJozZvhhMrIT2lxLv+NEpKgdtrm
eFNqNN83GxbTrODmRaIud1JmaRvrL2v7WVEkjUHluJY4lYJBDqy+P825ERZB
9K0IPoPVq/SoQktYHBuF5eA5VUb7/EYCkaktU7IV2GBTKLQp1MGjr+xilHsT
5GRSxAxvKXgOW88k2kq5HHjF5VM+xyuJ/Nt6kEbvPzHTkXbjVBA8nGa+UEDi
WXffmGg2H37N0wcfg78emvEm3mRz3oBGo/wdG770QvSYau6cRyiMbxtWsZEE
v4HHRijJ8VjNrRXoYwCFfoViXqFYY6T31NjlOyPO0Gj+KP9p0gQtjsxpK3dK
eYYYA55wOv46r7Dkad5nnBgo5dbdacUMZo4zbTmpoJHhqm9ACy+PZvMguhUu
0aHO0aGtYEOGZUjD9duArfF9TlV0qtDpolfIK6z0L2YtoUQ078GwgY0Utjn5
1WUVS+Fe1T6nql0CXYfH/E2z6nHoknuO2QHKyO+9/xcDXK0sndVSJHW/8Not
rIF+an1lShjkMbrW6L53/vT2Q++8/3Sq+sucx3UUPHEPU4EldS7zmuR08JTj
oQb/A6l1v1Q=
       "], "DiscountMatrix" -> 
      SparseArray[
       Automatic, {125, 2}, 0., {
        1, {{0, 2, 2, 4, 4, 6, 8, 10, 12, 14, 16, 18, 18, 18, 18, 20, 22, 24, 
          24, 24, 26, 26, 28, 28, 28, 30, 30, 32, 32, 34, 34, 36, 38, 40, 42, 
          44, 46, 46, 48, 50, 52, 54, 54, 56, 58, 60, 60, 62, 64, 64, 66, 66, 
          66, 66, 68, 68, 68, 68, 70, 72, 72, 72, 72, 72, 72, 72, 74, 74, 74, 
          74, 76, 76, 76, 78, 78, 78, 80, 80, 80, 82, 82, 84, 84, 84, 84, 86, 
          86, 86, 86, 88, 88, 90, 90, 90, 92, 94, 94, 94, 96, 96, 96, 96, 96, 
          98, 98, 98, 98, 100, 102, 102, 102, 102, 102, 104, 106, 106, 108, 
          110, 110, 112, 114, 116, 118, 118, 120, 120}, {{1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}}}, CompressedData["
1:eJxdkntMk2cUxqtIv35lSi/SaFWkzI5bp+JlgGs5BynWkDEt49rNSlFCvADj
koAURkBqEVtEYYoQYzYzsi0GWNlIlW0yEUXYFIlGI2rwgunGpV9TJqhY7Ydf
+MNf8ubkzXvynifPeSTpOfEZ81gsVpH7rO9f3Tlm8UHbBI0YEwPHf2JfJlCf
ev3MyAyJLLqRRcGdNzR2uOqRY871oyBkPY0DlnnpOrx0L6HbfL/XfH8ayIOB
Lv9MDsKj4sUtqoU4tp//tPr6CbAaJY8O6K2gEhReXpErxQ2JNOuwgT2+oSB7
CYr+/Dcup1iEYSUmDbXaCbW1BtluiRPu1SVEml55YsGAdrOeJDHQ9U4HyXqn
SxX468kBrQi1Dypf7PhYjFUydafgNwKF9HOXB+bVpTRH+lIQ0xJT0ch1wDnF
9ohOQwgz3x8rojiSSp4Mc2fvMuwW5WSciXb3H47f5d1OQY3D1+7wdUK6NvrA
whEH9DoSpn5fRoE9r6F7+TMKzu8zRqkDCEyxGbQ2Axu533j1tWkIDP4omVcX
wsEdpcLwciFnTj8XfQxtpRwsN9J4Ytbh/i3bFU64UB8fG/TDJPg09j52Ct1z
+y2yfgsFdcXZY30ONv5SMhhQOkig/NCRlZf8hNjnlN9wyoVY6+1TGp00A2tO
EedHM1/B0pHwmidWDsoiR9lfPPXAxA/HU8rX8jC2r9HSfI7EMsOo2vqQj9v0
PcklPULUN0u/N02kQbKIu2D45iE4Ttt7Ucr4IceJleLR6F1v4Nql1ivKYhYO
xsXojnoeA1RkX3Gt7QXV3Yibw9+ycZJP75XAz/bucUNi2uz+SRQfUTRI69OB
V/RPcpu5EpKef701NoCCh3/TUHD61m0bZycFLcavkj6op+DxxZcZgiYC42bz
RaLUHrq4Yh+JA2tWfanMZ+MW18ZP9/K5c/Niq69VmV9HwTaOXOsfmgnTFmPB
j6/VkDF4+pPjYYUQJykLH3YQ2HOBhosUk+MZpmJEzZPwRSHY8zONGEWmLpxM
nAaW39SDeNsUrFDTPnBxfoqqaSqIjUeZ3HkzdSBLAdY/3HnXnN2oOeuJ/38e
uemFTYAx/7ntbxfg7ial/ZSSwCr+Cb1YR+JfyurvXHk8TBjqyBrqEGIa8w+P
qSaRxZ18KaMnGEfe09va2jXfS0ZB6qJVGl0+BW8BzHypWQ==
         "]}], 
      "Discount" -> {0.5, 0.5}, 
      "DefaultUnigramProbabilities" -> {0.00004855547462976451, 
       0.0002458512599877074}, "Options" -> 
      Association[
       "Order" -> Association["Value" -> 4, "Options" -> Association[]], 
        "AdditiveSmoothing" -> 
        Association["Value" -> 0.1, "Options" -> Association[]], 
        "MinimumTokenCount" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "ExcludedTokens" -> 
        Association["Value" -> {}, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "MeanCrossEntropy", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         PlusMinus[0.4820039694255791, 0.22890655487141595`], "Accuracy" -> 
         PlusMinus[0.8196783924903399, 0.052298050718226664`], 
         "EvaluationTime" -> 0.0029962766666666663`, "TestSize" -> 200, 
         "TrainingSize" -> 40, "TrainingTime" -> 0.467185, "TrainingMemory" -> 
         2.521048*^6, "ModelMemory" -> 35768., "ExperimentCount" -> 2, 
         "ModelUtility" -> 0.7160503469867021, "MeanCrossEntropyHistory" -> {
           PlusMinus[0.39927398731802455`, 0.09879437843351715], 
           PlusMinus[0.8214146487312551, 0.20010757060915632`]}, 
         "AccuracyHistory" -> {
           PlusMinus[0.8564356435643576, 0.03572910147291488], 
           PlusMinus[0.7673267326732683, 0.04263986391401215]}, 
         "Configuration" -> {
          "Markov", "Order" -> Automatic, "AdditiveSmoothing" -> 0.1, 
           "MinimumTokenCount" -> Automatic, "ExcludedTokens" -> {}}], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory", 
          "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 2], 
          TypeSystem`Vector[TypeSystem`AnyType, 2], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}]}], 
        Association["ID" -> 167259053756659]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "Markov", "Options" -> 
           Association[
            "Order" -> Association["Value" -> Automatic], "AdditiveSmoothing" -> 
             Association["Value" -> 0.1], "MinimumTokenCount" -> 
             Association["Value" -> Automatic], "ExcludedTokens" -> 
             Association["Value" -> {}]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[2.663698381097869, 0.7341006823347802], "Accuracy" -> 
              PlusMinus[0.663400489019475, 0.03391127296943533], 
              "EvaluationTime" -> 0.0029522966666666664`, "TestSize" -> 200, 
              "TrainingSize" -> 9, "TrainingTime" -> 0.20583466666666667`, 
              "TrainingMemory" -> 495880., "ModelMemory" -> 35768., 
              "ExperimentCount" -> 2, "ModelUtility" -> 0.13470796962339712`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[2.26870175644015, 0.5003475725020793], 
                PlusMinus[3.485017709088125, 0.7214913462394175]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.668316831683169, 0.047281198781485664`], 
                PlusMinus[0.6584158415841591, 0.047608514395515916`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.4820039694255791, 0.22890655487141595`], "Accuracy" -> 
              PlusMinus[0.8196783924903399, 0.052298050718226664`], 
              "EvaluationTime" -> 0.0029962766666666663`, "TestSize" -> 200, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.467185, 
              "TrainingMemory" -> 2.521048*^6, "ModelMemory" -> 35768., 
              "ExperimentCount" -> 2, "ModelUtility" -> 0.7160503469867021, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.39927398731802455`, 0.09879437843351715], 
                PlusMinus[0.8214146487312551, 0.20010757060915632`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8564356435643576, 0.03572910147291488], 
                PlusMinus[0.7673267326732683, 0.04263986391401215]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.5610922389590617, 0.139279310880871], "Accuracy" -> 
              PlusMinus[0.7195121951219507, 0.10196058352403907`], 
              "EvaluationTime" -> 0.00136885, "TestSize" -> 40, 
              "TrainingSize" -> 158, "TrainingTime" -> 1.803427, 
              "TrainingMemory" -> 9846320, "ModelMemory" -> 35768, 
              "ExperimentCount" -> 1, "ModelUtility" -> 0.7055833297746658, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.5610922389590617, 0.09848534520285318]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.7195121951219507, 0.0720970200235854]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00136885, "MeanCrossEntropy" -> 
             PlusMinus[0.5610922389590617, 0.139279310880871], "ModelMemory" -> 
             35768, "TrainingMemory" -> 9846320, "TrainingTime" -> 
             2.465825464135021], "Index" -> 1]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory",
               "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            3], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 1], 
        Association["ID" -> 167254758789363]], "MaxTrainingSize" -> 198, 
      "LastReportingTime" -> 3.739871731161681`16.325431696332632*^9, 
      "PreprocessorEvaluationTime" -> 5.837890625`2.*^-6, 
      "PreprocessorMemory" -> 29048, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 9, "TimeBudgets" -> 1.5781282970464134`, 
          "ElapsedTimes" -> 1.291914, "ExperimentCounts" -> 2], 
         Association[
         "TrainingSizes" -> 40, "TimeBudgets" -> 1.9726603713080162`, 
          "ElapsedTimes" -> 2.024269, "ExperimentCounts" -> 2], 
         Association[
         "TrainingSizes" -> 158, "TimeBudgets" -> 2.465825464135021, 
          "ElapsedTimes" -> 1.968667, "ExperimentCounts" -> 1]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 3], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[167263348723955]], "ID" -> 
         167267643691251]]], "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "Text", "Weight" -> 1, 
           "Values" -> {
            "s[s[s[s[s[s[s[k[s]][k[k[s[s[k[k[s[k[k[k]][k]]][k]]][k[k]]]]][k[s]\
[k]][s[k]][s]]][k[s[k[s[k][k]]]]]]][s]][s[s[s[s[k[k[k][s[k[s[k]]][s]][k[s][k[\
k]][k]][s[s][k]]]]][s[s[k[k[s[k[s[s][k[s]][s]]][k[s]][k]]]]][s]][k[k[s]][s[s]]\
[s]]]][s[s]][s]][k[k[s[s[k[k[k[k[k[s[s[s][s[k]]]]]][k]][k[s[k[k[k[s]]]][k[s]]]\
]][s[s]]]]][s[k[s[s[s[s]]]]]][s[s[s]]][s[k]]]]][s[s[k[k]][k[s]]]][k[s[s[s][s]]\
[s[s]]]]][s[k]][k]"}, "ID" -> 6072081202834183359]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 7.58713, "MaxTrainingMemory" -> 19793360, 
      "DataMemory" -> 60104, "FunctionMemory" -> 127680, 
      "LanguageVersion" -> {11.3, 0}, "Date" -> 
      DateObject[{2018, 7, 6, 13, 15, 31.183074`8.246493906035708}, "Instant",
         "Gregorian", -4.], "ProcessorCount" -> 2, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.739886109683169*^9, 3.739886131262319*^9}},
 CellLabel->
  "Out[208]=",ExpressionUUID->"d4ce0638-3bd1-4cf2-a2e2-5df309ecbf7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Large2Classify", "[", 
  "\"\<s[s[s[k[s[s[k[s[k][s]]][k]]][k[k]][k]]]][s[s]][s]\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.739886136213604*^9, 3.7398861673672333`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"02e7d264-947a-4632-9a78-62ce6a9b9fa8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7398861436596127`*^9, 3.7398861677838383`*^9}},
 CellLabel->
  "Out[212]=",ExpressionUUID->"3d727098-c791-4924-942d-8b800313c23a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Training Attempt #4: 200 random SK expressions at each of depths 1 - 10, \
halted if SKHalt[40] == True. NoHalt dataset same length as Halt dataset. \
Using raw string. Bad performance. <citation needed>\
\>", "Subsection",
 CellChangeTimes->{{3.739886185467464*^9, 3.739886189237029*^9}, {
  3.739887233138053*^9, 3.739887234073649*^9}, {3.7399267643400707`*^9, 
  3.739926774563212*^9}},ExpressionUUID->"4ef0e824-3016-446d-9e5a-\
da5a433ad970"],

Cell[CellGroupData[{

Cell["\<\

Training\
\>", "Subsubsection",
 CellChangeTimes->{{3.7398872588333893`*^9, 3.7398872606941757`*^9}, {
  3.739887339853415*^9, 3.73988734891711*^9}, {3.739956904717063*^9, 
  3.7399569049502363`*^9}},ExpressionUUID->"89befe17-c711-459e-9709-\
70bd8042bf56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exprs", " ", "=", " ", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"RandomSKExpr", "[", "10", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "5000"}], "}"}]}], "]"}], ",", "n"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739839560693535*^9, 3.739839561713284*^9}, {
   3.739839720672243*^9, 3.739839720937663*^9}, {3.739871318565632*^9, 
   3.739871319838084*^9}, {3.739887376438777*^9, 3.7398873765426207`*^9}, {
   3.739889645275683*^9, 3.739889656107108*^9}, 3.7398903992619963`*^9},
 CellLabel->
  "In[245]:=",ExpressionUUID->"fd7c33c1-9e99-47ef-8443-670c53c7060d"],

Cell[BoxData[
 TemplateBox[{
  "SubKernels`LocalKernels`LaunchLocal","nolic2",
   "\"Could not provide a subkernel license.\"",2,245,55,19905126280692532293,
   "Local","SubKernels`LocalKernels`LaunchLocal"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.7398903914740057`*^9, 3.7398904098956633`*^9}, 
   3.7399267940972643`*^9},
 CellLabel->
  "During evaluation of \
In[245]:=",ExpressionUUID->"9342f474-0ad3-4061-845b-f6d7614eb7a2"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.739926797629715*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"9af51e19-b99d-4c16-8a9d-820624ac8122"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lengths", " ", "=", " ", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"exprs", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "\[Rule]", " ", 
        RowBox[{"SKHalt", "[", 
         RowBox[{
          RowBox[{"exprs", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", "40"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "5000"}], "}"}]}], "]"}], ",", "n"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7398395835500097`*^9, 3.7398395994731483`*^9}, {
  3.739839630748268*^9, 3.73983965862304*^9}, {3.7398396915370693`*^9, 
  3.7398397224856873`*^9}, {3.739871274002234*^9, 3.739871343945211*^9}, {
  3.73987144830448*^9, 3.739871506551502*^9}, {3.739871636487409*^9, 
  3.739871673911688*^9}, {3.739887360800568*^9, 3.739887380224165*^9}, {
  3.739887427759623*^9, 3.7398874296656837`*^9}, {3.739887596150679*^9, 
  3.739887599153121*^9}, {3.739887639721286*^9, 3.739887640320897*^9}, {
  3.739889409761922*^9, 3.7398894354309883`*^9}, {3.739890889471252*^9, 
  3.739890889599503*^9}},ExpressionUUID->"a1cd05f3-129e-419e-b1d0-\
86e7bfb3de59"],

Cell[BoxData[
 TemplateBox[{
  "ParallelTable","nopar",
   "\"No parallel kernels available; proceeding with sequential \
evaluation.\"",2,40,29,19905004455643035345,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739890200734889*^9, 3.739890875779479*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"ebe01dde-44ce-433e-85a0-f4ac5289b8e9"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.739889419962881*^9, 3.739889451043741*^9, 
  3.7398902086585073`*^9, 3.739890888238061*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"80e16d1e-87b0-4dab-a73b-6347f8ccd10c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LaunchKernels", "[", "]"}]], "Input",
 CellChangeTimes->{{3.739890238181552*^9, 3.739890238183168*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"a75fcc81-5b73-4501-9cde-d65447f9caef"],

Cell[BoxData[
 TemplateBox[{
  "SubKernels`LocalKernels`LaunchLocal","nolic2",
   "\"Could not provide a subkernel license.\"",2,30,21,19905004455643035345,
   "Local","SubKernels`LocalKernels`LaunchLocal"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.739890243773829*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"5b72aadb-c4d8-42dd-9321-add4fbb2600b"],

Cell[BoxData[
 TemplateBox[{
  "SubKernels`LocalKernels`LaunchLocal","nolic2",
   "\"Could not provide a subkernel license.\"",2,30,22,19905004455643035345,
   "Local","SubKernels`LocalKernels`LaunchLocal"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.739890248790697*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"221c54fd-924f-485e-a0c3-8b917098e573"],

Cell[BoxData[
 TemplateBox[{
  "SubKernels`LocalKernels`LaunchLocal","somefail",
   "\"\\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"2\\\"}]\\) \
kernels failed to launch.\"",2,30,23,19905004455643035345,"Local",
   "SubKernels`LocalKernels`LaunchLocal"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.739890248847212*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"a0e872de-44d4-4186-8d5e-36a3cba8f3ad"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.739890248953924*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"d297b4a3-b046-492a-9c64-aa05c1cbbd95"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gridexprs", " ", "=", " ", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"SKGrid", "[", 
        RowBox[{"exprs", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "exprs", "]"}]}], "}"}]}], "]"}], ",", "n"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739890285010448*^9, 3.7398903575612*^9}, {
  3.739890470573333*^9, 3.739890471514654*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"9be06e94-f4f9-4b80-8226-75e4be50f943"],

Cell[BoxData[
 TemplateBox[{
  "ParallelTable","nopar",
   "\"No parallel kernels available; proceeding with sequential \
evaluation.\"",2,39,28,19905004455643035345,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.739890472667004*^9, 3.739890515951591*^9},
 CellLabel->
  "During evaluation of \
In[39]:=",ExpressionUUID->"84841c32-68fe-4957-8340-e2a028d6e7ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exprs", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.73989037602929*^9, 3.739890377594261*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"60e849df-70f1-4ce9-99d8-5670fcb0eaf4"],

Cell[BoxData[
 RowBox[{"k", "[", 
  RowBox[{"s", "[", 
   RowBox[{"k", "[", 
    RowBox[{"k", "[", 
     RowBox[{"k", "[", 
      RowBox[{"k", "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{
          RowBox[{"s", "[", "k", "]"}], "[", 
          RowBox[{"k", "[", 
           RowBox[{"s", "[", 
            RowBox[{"s", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"s", "[", 
                RowBox[{"s", "[", 
                 RowBox[{"k", "[", 
                  RowBox[{"k", "[", 
                   RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", "s", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", "s", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "[", "k", "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", "k", "]"}], "]"}], "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", "k", "]"}], "]"}], "[", "s", "]"}], 
                    "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", "s", "]"}], "[", 
                    RowBox[{
                    RowBox[{"k", "[", "k", "]"}], "[", "k", "]"}], "]"}], "[", 
                    RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"s", "[", "s", "]"}], "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"k", "[", "s", "]"}], "]"}], "]"}], "]"}], "]"}], 
                "]"}], "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"s", "[", 
                  RowBox[{"s", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"s", "[", "k", "]"}], "[", "s", "]"}], "]"}], "[", 
                    RowBox[{"k", "[", "s", "]"}], "]"}], "[", "k", "]"}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"s", "[", "k", "]"}], "]"}], "[", "k", "]"}], "]"}], 
              "[", 
              RowBox[{"k", "[", 
               RowBox[{
                RowBox[{"k", "[", 
                 RowBox[{
                  RowBox[{"s", "[", 
                   RowBox[{"k", "[", "k", "]"}], "]"}], "[", "k", "]"}], 
                 "]"}], "[", 
                RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "]"}], "]"}], 
            "]"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"s", "[", 
         RowBox[{"k", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"k", "[", "s", "]"}], "[", 
             RowBox[{"k", "[", 
              RowBox[{"k", "[", 
               RowBox[{"s", "[", 
                RowBox[{"k", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"k", "[", "s", "]"}], "[", "s", "]"}], "]"}], "[", 
                   RowBox[{"k", "[", "s", "]"}], "]"}], "[", "k", "]"}], 
                 "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
            RowBox[{"s", "[", 
             RowBox[{"k", "[", 
              RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "[", 
           RowBox[{"k", "[", 
            RowBox[{"k", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
        "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{3.7398903779389067`*^9, 3.7398904603186283`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"a3339bb0-59c3-4ba8-9953-74f74d523c37"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.739887426009094*^9, 
  3.7398892221596193`*^9},ExpressionUUID->"602bfeea-f6fe-4969-949e-\
4850bd814f01"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.739872560888192*^9, 
  3.73987261779112*^9}},ExpressionUUID->"6b42a872-1841-4a8f-8d31-\
a60d9d2ed8ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Values", "[", "lengths", "]"}], ",", "False"}], "]"}]], "Input",
 CellChangeTimes->{{3.739871292137867*^9, 3.7398712952778263`*^9}, {
  3.739871584814596*^9, 3.7398715859658127`*^9}, {3.739871730955071*^9, 
  3.739871787936625*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"ab0d1309-3ce2-4092-b86e-47d1e4cdae19"],

Cell[BoxData["903"], "Output",
 CellChangeTimes->{3.739887633115952*^9, 3.73988772008862*^9},
 CellLabel->
  "Out[295]=",ExpressionUUID->"e45e2f3b-cb8b-4d36-844e-73412171ad83"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NoHalt", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"lengths", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "False"}], "&"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Halt", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"lengths", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "True"}], "&"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HaltTrain", " ", "=", " ", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Halt", ",", 
     RowBox[{"Length", "[", "NoHalt", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainingData", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"HaltTrain", ",", "NoHalt"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainingData", "/.", "\[VeryThinSpace]", 
   RowBox[{"Rule", "\[Rule]", "List"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainingData2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"TrainingData", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Rule]", " ", 
      RowBox[{
       RowBox[{"TrainingData", "[", 
        RowBox[{"[", "n", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "TrainingData", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7398718328071957`*^9, 3.7398719480890427`*^9}, {
  3.739882283988702*^9, 3.739882306676138*^9}, {3.73988778201646*^9, 
  3.7398877860400143`*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"8cc99caf-0b6c-430d-9372-e3b4518c938b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HaltClassifier2", " ", "=", " ", 
  RowBox[{"Classify", "[", "TrainingData2", "]"}]}]], "Input",
 CellChangeTimes->{{3.739887923333466*^9, 3.7398879233627453`*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"21197dee-f9e7-484d-9f7c-b153eca69f48"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "False", "True"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "False", "True"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Markov\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["1806", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 1806, "ClassNumber" -> 2, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Text"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Text"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Text", "Weight" -> 1]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], "Fill" -> 
             "", "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], "Type" -> 
             "Text", "Version" -> {11.3, 0}, "ID" -> 7263179337424669307]], 
           MachineLearning`MLProcessor["ToLowerCase", 
            Association[
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 3139720177438361802, "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["RemoveDiacritics", 
            Association[
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 5643421565728107793, "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["TextToNominalSequence", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Forbidden", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
             "Tokens" -> {{
               " ", "\n", "\t", "\:f39f", ",", ".", "!", "?", "\"", "'", "(", 
                ")", "$", "%", "&", "@", "*", "-", "+", "[", "]", "{", "}", 
                "\\", "|", "\\", ">", "/", "~", "`", "#", "^"}, {
               ":)", ":-)", ":D", ":-D", ";)", ";-)", "<3", ":p", ":-p", ":P",
                 ":-P", ":(", ":-(", "=(", ":/", ":-/", "</3"}, {
               "=", "<", ";", ":"}}, "Method" -> "WordSegment", 
             "Version" -> {11.3, 0}, "ID" -> 3051290048872824615, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor[
           "NoninvertibleIntegerEncodeNominalSequence", 
            Association[
            "Invertibility" -> "Impossible", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]], "Index" -> 
             MachineLearning`SortedHashAssociation[
               Association[
               "KeyHashes" -> {-9013817937938426079, -4973948215836336071, 
                 2077270817744784973, 3408017859420023313}, "Values" -> None, 
                "DefaultValue" -> -1, "HashFunction" -> 
                Function[{
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$}, 
                  Switch[
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, {
                    BlankSequence[String]}, 
                   Data`StringHash[
                   MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                   
                   Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                   Blank[List], 
                   Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    StringJoin[
                    ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
                    
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {11.3, 0}]], "MissingCode" -> 0, 
             "Version" -> {11.3, 0}, "ID" -> 2055599668730355056, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]]]]}, 
         "Invertibility" -> "Impossible", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 6577660353193586174]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[False -> 1, True -> 2]}, "MissingCode" -> 0, 
             "Version" -> {11.3, 0}, "ID" -> 5749777139264552649, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 2672999966851599696]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[False -> 0.5, True -> 0.5]], "Prior" -> Automatic, 
    "Utility" -> 
    SparseArray[
     Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
    "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
    Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association[
     "ClassPriors" -> 
      Association[1 -> 0.5033112582781457, 2 -> 0.4966887417218543], "Method" -> 
      "Markov2", "TokenNumber" -> 4, "Order" -> 4, "MinimumTokenCount" -> 0, 
      "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "NoninvertibleIntegerEncodeNominalSequence", 
            Association[
            "Invertibility" -> "Impossible", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]], "Index" -> 
             MachineLearning`SortedHashAssociation[
               Association[
               "KeyHashes" -> {1, 2, 3, 4}, "Values" -> None, 
                "DefaultValue" -> -1, "HashFunction" -> 
                Function[{
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$}, 
                  Switch[
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, {
                    BlankSequence[String]}, 
                   Data`StringHash[
                   MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                   
                   Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                   Blank[List], 
                   Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    StringJoin[
                    ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {11.3, 0}]], "MissingCode" -> 0, 
             "Version" -> {11.3, 0}, "ID" -> 4721652067950740814, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "NominalSequence", "Weight" -> 1],
              "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Impossible", "Missing" -> 
         "Imputed"]], "NGramPosition" -> MachineLearning`SortedHashAssociation[
        Association["KeyHashes" -> CompressedData["
1:eJw9lkmubEUMRN+AFQAbYAFI6S6dXsKX/oglMEBixOAzZe8cZ1Olp1cl+16n
m4hw/vbnP3/89d/X19ePn/j3/e8f/377lR+/1/DQjCrhe7nPVcexalmYLpE1
TIbXx7HMNGasiXfOIT6vI3nFgkC2Im2KvzemjqHCV1qVp6VeR4hWEkCmLFnp
/hzekcOnrcySmpUfhy5zHWuo+9Cafh0dWZbNCDUhPRvPkWNpVnDqSBJMuQ41
H7EylmRMC9zPgdlravAiqXHMdUjnqHOQzlw+Vr3Dx+oINLIIV1Zx36AjyzNp
rZXFKM1bB+8H6RhP8zA/X6gMbbvn7MN0qr5QZgyEbmWKpBLuOTTcTJjX5JjA
Ic9hgxGlKF2hnYzwOkYUT65ZPV4G+3o1lwrlqVKklau87k5ipdMjGRQpfJ4j
ooZGxRqjguE8MMzw4FD3NTqU17DrkAINM6hBhwiF13OQ1iRgOq8xYVsfh+9W
GX2mwSEv3VEcbsq4e7Y8drNipLMrE+d81eklH8cYzMlBpNOSXDfdSKoGnQQC
KTOB73VMB6NinMNkqixvHVTnPQoBzlGgd9x0GYIz0SpC8iMjr8Pph6mPSsAF
b0jwOhxCkeWcTIIvfRB1WzXmygF9nNRVn0ObduBweYO3fMVxwLyK8gE/wpm4
hD+HTIPrYAisMo18DldYAQWZnzZ39YUCAwGeBhU0KMjyOkYP0EE0vSTdeGco
lGri8ApvMMh1K6c2xsl4BrSkDNK4DiADLawGo0ACXOZzSGI2sxYfxvQGpZJi
DdMBOwGkPXIq8GEeITQDWAR6cBxCcFEA7DLMqftRrTsHN8sapd48v1kJobOD
gETQSD9v5ULR4a1K0ij0+LzRDYKfNIBMeXHIcwSzWwuCeC5vXj8HdTULUSc4
Lf7UBysS5bJRFSOLOn7ZSg3BBb0iV9gGUda1Q39km/H2hBefY0+6hMoYZdL/
BVyOHdYzGf62YIFGvXbGx5DBgijQjBd/Kl0agUTT9NalenaUfGCFki0bGcfe
AmEggNZCZHh57Sg9Khg9OZUCdvrs2lKA0AKkgWLVt5+PGMFsS4LDSU71bUau
rKQBRoZMhmrbjPKi79FCk04Mi20OwIVWox7IxHDibDM8LBFkoHrvQfgThEWH
ThF4kivgI8NthjRM11vbe8Qjt7lkjwMd62kgornrkSGLkqpXZC9C1OTaJ5Bm
Ep5Uwxrx0xeg2SImrcZk2J9jbxUZUKx7Mhdf93mbtI92wH5onvPiA2wSf8FL
BW0ITI5rJ3uQBKh6WMZQjh1OoXh0YbaEQrN7bnWWvdCCxNA+P3bQgaBhXmgj
youMbzutQUwF6ZqQ2Juc187Cw4agzAR/CPix28ZLqzDaQZvk5Glbd6v5632M
umw70g+z0P1efpNB+sGl9+YC8cHIQDpzPnV5i8mWWpDQwMlr53qzuDy0yMMW
pM6PfW25Qpiwc20A/8fe68yDEGycJrTWtfexcLPgNppo68SH5/R8Sxg6BK4u
T9ju8Ic0AD+UgHBx7Xun5uz7h/Y94fQteu2yZ6qFlDX5zkVAep3RNeSMqvPy
mZlS6mDdaV/UoNGJA0r2rQBqZi8Fijj2BghO+AmVmPvl52xRYPV431lQDXn2
JB9IiX7wXvROeXZw0ChiSTBHu3hAB0APDeWOgKpJ3zq2nYsYYRANBbik//Kn
K32hAg8kS0v19DNlzzWRpL4dwqqTD3Tru1ffX+C7tOofO0xgp8KNVgaSvfUm
19LWcca1d9K8erf2UmUC0AsR5iJ26mINcUXlQgy3W2hg+LErrULZQBAK1NfW
vPZpSd8YPhcEftxz6S2oZdtRMPxjmvd5uoUmUhIor5atg7deDn1F7OsPCokq
XDtB4EJfEbnicNTVAS4G3jtz7Utq53/ilwCU0XsxrO8BOuf/2msg9g==
          "], 
         "Values" -> None, "DefaultValue" -> Missing[], "HashFunction" -> 
         Function[{
           MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$}, 
           Switch[
           MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$, {
             BlankSequence[String]}, 
            Data`StringHash[
            MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$,
              "Murmur3-64"], 
            PatternTest[
             Blank[], 
             MachineLearning`PackageScope`PackedArrayQ[#, Integer, 1]& ], 
            MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$, 
            PatternTest[
             Blank[], 
             MachineLearning`PackageScope`PackedArrayQ[#, Integer, 2]& ], 
            
            Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`q = {
               
                Quotient[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^48], 
                Quotient[
                 Mod[
                 MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^48], 2^32], 
                Quotient[
                 Mod[
                 MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^32], 2^16], 
                Mod[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^16]}; 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`q = 
              Transpose[
                MachineLearning`PackageScope`ToPackedArray[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`q]\
, {1, 3, 2}]; 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`q = 
              Transpose[
                Flatten[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`q,
                  1]]; Data`StringHash[
               FromCharacterCode[
                Abs[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`q]\
], "Murmur3-64"]], 
            Blank[List], 
            Map[Switch[#, 
              Blank[String], 
              Data`StringHash[#, "Murmur3-64"], 
              PatternTest[
               Blank[], Developer`MachineIntegerQ], #, {
               PatternTest[
                BlankSequence[], Developer`MachineIntegerQ]}, 
              
              Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
               MachineLearning`file132SortedHashAssociation`PackagePrivate`q = {
                  Quotient[#, 2^48], 
                  Quotient[
                   Mod[#, 2^48], 2^32], 
                  Quotient[
                   Mod[#, 2^32], 2^16], 
                  Mod[#, 2^16]}; 
               MachineLearning`file132SortedHashAssociation`PackagePrivate`q = 
                Flatten[
                 MachineLearning`file132SortedHashAssociation`PackagePrivate`\
q]; Data`StringHash[
                 FromCharacterCode[
                  Abs[
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
q]], "Murmur3-64"]], 
              Blank[], 
              Data`StringHash[
               StringJoin[
                ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$\
]]], "Version" -> {11.3, 0}]], 
      "ConditionalProbabilityMatrix" -> CompressedData["
1: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
       "], "DiscountMatrix" -> 
      SparseArray[
       Automatic, {125, 2}, 0., {
        1, {{0, 2, 2, 4, 4, 6, 8, 10, 12, 14, 16, 18, 18, 18, 18, 20, 22, 24, 
          24, 24, 26, 26, 28, 28, 28, 30, 30, 32, 32, 34, 34, 36, 38, 40, 42, 
          44, 46, 46, 48, 50, 52, 54, 54, 56, 58, 60, 60, 62, 64, 64, 66, 66, 
          66, 66, 68, 68, 68, 68, 70, 72, 72, 72, 72, 72, 72, 72, 74, 74, 74, 
          74, 76, 76, 76, 78, 78, 78, 80, 80, 80, 82, 82, 84, 84, 84, 84, 86, 
          86, 86, 86, 88, 88, 90, 90, 90, 92, 94, 94, 94, 96, 96, 96, 96, 96, 
          98, 98, 98, 98, 100, 102, 102, 102, 102, 102, 104, 106, 106, 108, 
          110, 110, 112, 114, 116, 118, 118, 120, 120}, {{1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}}}, CompressedData["
1:eJw1UmtMkwcUbXn0+74VTG1naycMEEtbgoAgQxjsXku1FDoYsggtLFMe4+k6
BSION2IBI04HYhuW1UXm1hoQ2FwiyiZgIhDGdKAC6rLxMEBRNHyuDitgWZe6
m9ycP/ecnJtz/LK0u3KZDAaj3LFKffKz2JTX0bI9z9AeykMPeYatvJ3AU8fG
EuuZJN5zcxwxaGAwnVi566tZk4SGzp721ivhNOQG69zKWpdgLlQ4E1+6BOaq
E2uoByx8bM5qFPFJzLre1NgXmQWfH5+o7y8pgOqM0ls7fMS4Wx9xePO4GN/9
2INP9QnQ8m1YkfkGH93DwmaEMis8PRvjq86zQkbntlZBHQvnxRNvbraS2LOy
6pgF0DCcfnz8ig4PW/j4XryifpC3HpP3fnBh/AYLZ1Nzj/01TKD2Ha6kdCMN
6t41IcYIGs5whruehEhwIVwul4+IcHpn1MBVfQAuV5k5+a8F4D8WpWFLEA3l
z6L95UiDmDmY3aa0guFQSkOUwgpP2Gk/VW+gYYf2s5mcSAeKLgbHzhIYdb6Q
d/dHElcvFItdFwnMaflU+tBAYvKZDhulJ1G7m7cas5PERs+X2VQ6hRnM7t9f
xBF49cqozBxthbLapr6441ZIzLZ+0cOnYU+o5ucEfxqGRmKOrKoIjOGWHaS/
IXGjYb9d08bDH8iumiNF69BtNPvcWuUKjA+dTAoiVqCycNm7K4zEuAIPBZtL
ok9Mz6MZl7WY7M8h3f7DnOfSYCEXJ7m5HmMCHk7fP1HjmR4CzaNfUp3KKDjZ
u1+sKJZgr67k0GKkFCvmCdbQJTvMvrEwTZTYYZPfrdrzR/dC6lNTq22sGKpq
zt6v6WDh7dNyqsDs+JfdXduylcK5OqOecZDAjnZpUGZzKCy9ndNU8jISok1t
gXNiGtJ6+ey/E2hosd5chlAavAaGAlIc+azky+5VyEiMdD93+1Qsib8k7Gv0
FVA478P7IzGfQOF3qaolMYWPDGreiITAi1MPIu5oOND84eWPVAIhpCvr5m0a
X9DeTPpzVCAFRXi57sB6Rx6nhZeNvxI4+ao3KXZnj5LQdSu6BuLjTOMltVGE
hnSttl5tA4LXybSobGCpFhWmuVAoq1NlPhxnoc7VyV9cdvKFfRVH490p9L6j
dp8yEejdpjNEX+Pib90btni9xUXDiz3XhHcJNPW/PxHHJnHKs1++Lo+D9uHJ
A9s6OCi0OXW+d3Hqmj4p/vr6cxFWqho2KRsCkPPK7/8oJ3XVA1407BsYNAcF
0vAvF8GXLA==
         "]}], "Discount" -> {0.5, 0.5}, 
      "DefaultUnigramProbabilities" -> {5.522573519259975*^-6, 
       8.454514710855598*^-6}, "Options" -> 
      Association[
       "Order" -> Association["Value" -> 4, "Options" -> Association[]], 
        "AdditiveSmoothing" -> 
        Association["Value" -> 0.1, "Options" -> Association[]], 
        "MinimumTokenCount" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "ExcludedTokens" -> 
        Association["Value" -> {}, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "MeanCrossEntropy", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         PlusMinus[0.6516598420400009, 0.025153315910421206`], "Accuracy" -> 
         PlusMinus[0.635214497006084, 0.01711697783573629], "EvaluationTime" -> 
         0.004044216666666666, "TestSize" -> 800, "TrainingSize" -> 300, 
         "TrainingTime" -> 2.90293975, "TrainingMemory" -> 3.309356*^7, 
         "ModelMemory" -> 35768., "ExperimentCount" -> 3, "ModelUtility" -> 
         0.554948376879862, "MeanCrossEntropyHistory" -> {
           PlusMinus[0.6547441916146143, 0.028638865705825124`], 
           PlusMinus[0.6944475556771457, 0.03324809478542862], 
           PlusMinus[0.6276794860666205, 0.023762984647949445`]}, 
         "AccuracyHistory" -> {
           PlusMinus[0.6387256083744028, 0.034070504175355815`], 
           PlusMinus[0.6357582154194823, 0.027648576854209468`], 
           PlusMinus[0.6323049144471528, 0.027906934218259332`]}, 
         "Configuration" -> {
          "Markov", "Order" -> Automatic, "AdditiveSmoothing" -> 0.1, 
           "MinimumTokenCount" -> Automatic, "ExcludedTokens" -> {}}], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory", 
          "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 3], 
          TypeSystem`Vector[TypeSystem`AnyType, 3], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}]}], 
        Association["ID" -> 65884940671029]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "Markov", "Options" -> 
           Association[
            "Order" -> Association["Value" -> Automatic], "AdditiveSmoothing" -> 
             Association["Value" -> 0.1], "MinimumTokenCount" -> 
             Association["Value" -> Automatic], "ExcludedTokens" -> 
             Association["Value" -> {}]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[3.7374221708782005`, 0.8181564357703971], "Accuracy" -> 
              PlusMinus[0.510985183501314, 0.01917018897161842], 
              "EvaluationTime" -> 0.004135433636363638, "TestSize" -> 1000, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.16233763636363638`, 
              "TrainingMemory" -> 1.2922509090909092`*^6, "ModelMemory" -> 
              35768., "ExperimentCount" -> 10, "ModelUtility" -> 
              0.09316559557879585, "MeanCrossEntropyHistory" -> {
                PlusMinus[3.3192544799491914`, 0.4277076086317858], 
                PlusMinus[2.9637897958717385`, 0.48833522565594756`], 
                PlusMinus[4.2633156678742905`, 0.6216895373912922], 
                PlusMinus[11.27025613189767, 1.36380456404139], 
                PlusMinus[6.028889400778038, 0.8777774640633256], 
                PlusMinus[5.373659855959838, 0.7531438003810385], 
                PlusMinus[2.7067442833798796`, 0.44111517465284883`], 
                PlusMinus[3.131333955405889, 0.44047692852097414`], 
                PlusMinus[4.197621554318023, 0.5465898683936422], 
                PlusMinus[4.179873645526841, 0.6226988231450553]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.48019801980198035`, 0.04993684749324002], 
                PlusMinus[0.5495049504950499, 0.049800607179954416`], 
                PlusMinus[0.5495049504950499, 0.049800607179954416`], 
                PlusMinus[0.5000000000000003, 0.04999512254661126], 
                PlusMinus[0.49009900990099037`, 0.049975705079116424`], 
                PlusMinus[0.49009900990099037`, 0.049975705079116424`], 
                PlusMinus[0.5594059405940598, 0.04970306403042825], 
                PlusMinus[0.48019801980198035`, 0.04993684749324002], 
                PlusMinus[0.47029702970297055`, 0.04987850435483752], 
                PlusMinus[0.53960396039604, 0.04987850435483753]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.8799295503574265, 0.05819529268860652], "Accuracy" -> 
              PlusMinus[0.5622053948066935, 0.03189920661839452], 
              "EvaluationTime" -> 0.004258719, "TestSize" -> 900, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.5748251, 
              "TrainingMemory" -> 4.8125408*^6, "ModelMemory" -> 35768., 
              "ExperimentCount" -> 9, "ModelUtility" -> 0.4061944381536935, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.9455411255175554, 0.07538624037329032], 
                PlusMinus[0.7670205811908769, 0.08829778525209236], 
                PlusMinus[0.813991480769069, 0.0872668061895017], 
                PlusMinus[0.7997240729106472, 0.08292314920399599], 
                PlusMinus[1.0342891277448387`, 0.14265817348255944`], 
                PlusMinus[1.1568790755890215`, 0.12187573467677892`], 
                PlusMinus[0.7313609938740004, 0.09603711217100566], 
                PlusMinus[0.8267125260948242, 0.09072959231027275], 
                PlusMinus[1.041960236147629, 0.09091625850433464]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.4306930693069308, 0.04944855134548158], 
                PlusMinus[0.6089108910891095, 0.04891571692389512], 
                PlusMinus[0.5693069306930698, 0.04958575896603499], 
                PlusMinus[0.6089108910891095, 0.04891571692389512], 
                PlusMinus[0.6089108910891095, 0.04891571692389512], 
                PlusMinus[0.5099009900990102, 0.04999512254661126], 
                PlusMinus[0.668316831683169, 0.047281198781485664`], 
                PlusMinus[0.5990099009900995, 0.04911373703086736], 
                PlusMinus[0.4405940594059407, 0.049585758966034954`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.6516598420400009, 0.025153315910421206`], 
              "Accuracy" -> PlusMinus[0.635214497006084, 0.01711697783573629],
               "EvaluationTime" -> 0.004044216666666666, "TestSize" -> 800, 
              "TrainingSize" -> 300, "TrainingTime" -> 2.90293975, 
              "TrainingMemory" -> 3.309356*^7, "ModelMemory" -> 35768., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.554948376879862, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.6547441916146143, 0.028638865705825124`], 
                PlusMinus[0.6944475556771457, 0.03324809478542862], 
                PlusMinus[0.6276794860666205, 0.023762984647949445`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.6387256083744028, 0.034070504175355815`], 
                PlusMinus[0.6357582154194823, 0.027648576854209468`], 
                PlusMinus[0.6323049144471528, 0.027906934218259332`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.6774669867474924, 0.03480191320960729], "Accuracy" -> 
              PlusMinus[0.612183785682027, 0.03628215231378964], 
              "EvaluationTime" -> 0.004091664819944598, "TestSize" -> 361, 
              "TrainingSize" -> 1445, "TrainingTime" -> 14.14649, 
              "TrainingMemory" -> 138875664, "ModelMemory" -> 35768, 
              "ExperimentCount" -> 1, "ModelUtility" -> 0.531705366303903, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.6774669867474924, 0.024608668828778994`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.612183785682027, 0.025655355937123835`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.004091664819944598, "MeanCrossEntropy" -> 
             PlusMinus[0.6774669867474924, 0.03480191320960729], 
             "ModelMemory" -> 35768, "TrainingMemory" -> 138875664, 
             "TrainingTime" -> 17.843002646744257`], "Index" -> 1]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory",
               "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            4], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 1], 
        Association["ID" -> 65880645703733]], "MaxTrainingSize" -> 1806, 
      "LastReportingTime" -> 3.739873589165394`16.325431912094196*^9, 
      "PreprocessorEvaluationTime" -> 4.67431640625`2.*^-6, 
      "PreprocessorMemory" -> 29048, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 10, "TimeBudgets" -> 9.135617355133064, 
          "ElapsedTimes" -> 9.154103, "ExperimentCounts" -> 10], 
         Association[
         "TrainingSizes" -> 50, "TimeBudgets" -> 11.41952169391633, 
          "ElapsedTimes" -> 11.632356999999999`, "ExperimentCounts" -> 9], 
         Association[
         "TrainingSizes" -> 300, "TimeBudgets" -> 14.274402117395407`, 
          "ElapsedTimes" -> 13.349257999999999`, "ExperimentCounts" -> 3], 
         Association[
         "TrainingSizes" -> 1445, "TimeBudgets" -> 17.843002646744257`, 
          "ElapsedTimes" -> 16.181756, "ExperimentCounts" -> 1]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 4], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[65889235638325]], "ID" -> 65893530605621]]], 
    "Log" -> Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "Text", "Weight" -> 1, 
           "Values" -> {
            "s[s[k[s[s][k[s[k[k[s[k[k[k[s]]][s[s[k][s[k]]]][k[k[s[k]]]]][s]]][\
k[s[k[k]][k[s[s[s]]]]][s]][k[k[k][s[s[k[s]]]]][k]]][k[k[s]][s]]][k]]][k[s[k[s[\
k[s[k[k]][k[k[s]][s]][s[s]]]]]]][s[s]][k]]][k[k[s[k[s[s[k[k]]]][k]]]][s]]][s[\
s[k]]][s[k]][k]"}, "ID" -> 3791095496786132862]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 54.099669, "MaxTrainingMemory" -> 154001320, 
      "DataMemory" -> 922040, "FunctionMemory" -> 135616, 
      "LanguageVersion" -> {11.3, 0}, "Date" -> 
      DateObject[{2018, 7, 6, 13, 46, 29.196871`8.217911292279094}, "Instant",
         "Gregorian", -4.], "ProcessorCount" -> 2, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellEditDuplicate->True,
 CellChangeTimes->{
  3.7398720836326942`*^9, 3.7398722001885653`*^9, 3.739872319231086*^9, {
   3.739872435975215*^9, 3.739872464067819*^9}, 3.739885599881514*^9, 
   3.739886255486075*^9, 3.7398879326712627`*^9, 3.7398879892496758`*^9},
 CellLabel->
  "Out[309]=",ExpressionUUID->"a0258500-662e-4019-af06-e55574ac06c6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing", "Subsubsection",
 CellChangeTimes->{{3.739888175914508*^9, 
  3.739888178394906*^9}},ExpressionUUID->"643b5b98-ed77-4e73-903f-\
88de8bc6bc37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.739872120965352*^9, 3.739872139320775*^9}, {
  3.7398880643700323`*^9, 3.73988807803023*^9}},
 CellLabel->
  "In[331]:=",ExpressionUUID->"8ea906d1-c055-4ab7-938d-9082dac8ec31"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxd0b9Kw1AYh+EgHTpmcOjQoUotpbRStWpMW3PsFYiTblHp0GpRUEQstBGK
OgZcOgah4Ojo2Atw8BK8AaGX4J/fe5YGwsObL+fASZZOLg7aC47jrPzef+qa
Bf+EI8MDeWs7LaMn2pWv9/SiTAZ0Rn726az8uqNz0o3oZWns+rwMr+iCnN3Q
RdrOS3Lao8toe5X9z+kq5zmj11jfpdfn5husD+maTE7pTTzGLZlr09us79Ce
jC/pHbl/Tfucb0jXZdp+/wY+Y1OG9v1d+f5ABzJj/5dhfzqip4/M9+RHzJw+
HDNvSe/FfB+l/LcKXZ6YHzmTQio=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 2710.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{{3.739888070915205*^9, 3.73988807499928*^9}},
 CellLabel->
  "Out[331]=",ExpressionUUID->"14c52d85-0d55-4f4c-b008-26b8fcbed432"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, 
   3.7398880805271807`*^9},
 CellLabel->
  "In[332]:=",ExpressionUUID->"e45c8419-a650-4c5e-beb0-af0a476bdd78"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdzzmKAkEUgOHCyNBgggkMVAbRYZB237VdMhNxi9wXFERcElOP4FHmCH0U
jzBHcHl/I/Mamp+vX1dVd3C+76w8xpjo435Wrr/qK+2zzQPp4YS90ssR+6S/
rj+k1gF/Sp0d9ktvWxyQXt33Q8w3+Iv1axymSxqRTmf4mw7pD987wjE1t6i7
Pk4nNCG1FzjJfnOc4nz3/9LqezLq/Sz7jXGODmhenV+gXVpkfR+XpE4blzmv
hyu4havK9n9flE1NzZVNXc2VTUPNlU1Tzd++A6jtQL4=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 373.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888081074789*^9},
 CellLabel->
  "Out[332]=",ExpressionUUID->"274540bf-31ff-4c99-bb6e-743580b40268"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.739888082108923*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"9635c932-d922-4b93-9050-b23a04ea3a79"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdz79KQmEAhvGDU20ODWdoMAmRkNAys3/66RWIutikgqAOmphuwRFLoqYE
XRp0cNDNS/ASugRvQHBstHifsyjIw++8nnM+T8rNbMVjWVbg7/tffbZJNWe4
oK4K+EB1ytjLXsJH7I/YVovufqyuK9jHXsd+dVrDp7RLA2rQwUHV7uEz7u/j
kLp8w+eq7x2H984XYa/iC+ye93LvfFHVaeAr3tfCMTXj+lrdPuE49z/jG9qm
t6rp4Dt17f7+nue/4AfVfsUJNfyBk+rvJzb8nyHnwKEv9pQaHbHjn2/2tFqc
sOP8zBwuxp3pBg/mZgcJrkOj
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 3139.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888083084896*^9},
 CellLabel->
  "Out[333]=",ExpressionUUID->"e00a8d1b-b4a1-4555-bd36-8d2de39f358e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.7398880845740957`*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"f6e3167b-aa48-4bbe-984a-3d3f3f3c1eaa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdzjsOAVEYxfEblVKhUCiGiCAi4/1mPAqNZCJRiRgShQa9SKai02gVSguw
AEuxhFmCx3duxJnk5p/fnEzuRBab0dKnlEq+z6fyeO1vBkcLL6SOtl9qagek
2wMclN70HpI+T3BYej/DhvSiHZXaezgmtXZwXOpt4QT+TzslNdZwWnpdwRmp
O4VN6WMOZ3HfBM6hNprHPoYL+H4GF7E7cAkdomVyhVwl18h1coPcJLfIbbL1
b5esOrSTVZd2surRTlZ92n9+Af/iOnA=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 1261.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888085258939*^9},
 CellLabel->
  "Out[334]=",ExpressionUUID->"3c150d77-b0cb-4899-b573-73d27e6293a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.739888086338006*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"85e1a9c2-551c-4d3f-944c-482b7923347f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdy00KgkAYh/GXVi1dtGjRIiOiIkRNK/tyzE7QEQRXFl7Bo3mUjtAR+pgX
wmdgePjNn3GL+lb2RGTxud/a80p/eVZGH2zNXd23bR9qx7Yp1ANtoh3Co+4/
GcMTeArP4Dm8hFewB/twAIfwGo7gGN7AW3gHJ/AePsBH+ASf4RQ2XTewZNhh
uWCHJccOyxX732/RQSgS
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 238.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888086923654*^9},
 CellLabel->
  "Out[335]=",ExpressionUUID->"40d739a3-48c5-4c44-bec7-020ea9ed647e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.739888088029511*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"45cd9b44-41a2-4997-93fc-9cba5e2e9324"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxd0csKQVEYhuE/c2VgYGCwSUjaOZ8Py+EGUAYM7JQycwv7UlyKS8NeH/Ku
Wr09fWu2Cufb9pIys8rrvpucKO2Sxldfy/jeIzmr/SDnfN1RzqsnNdD7jVxU
92rJ97GTy+parcI1taHW4RBmm3ALbsMduAv34D48gIfwCB7DE3gKz+A57P4d
w7bADtsSO2wr7PD33z77z09cFivM
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 196.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888088747897*^9},
 CellLabel->
  "Out[336]=",ExpressionUUID->"5067c0ae-5209-4cfa-a62f-46413efcd9e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.73988809017157*^9}},
 CellLabel->
  "In[337]:=",ExpressionUUID->"a22581d5-062d-4dd3-a98a-3eeec16c9af5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdzTsKwkAUheGLlWUKCwuLKCIqEnzGtxmjQuoUgpUxEAiKuIUsxaW4lCzB
Jfi4B8QzMPx8c5mZanwLk4KItN77U11P75v8YnCAntGiNrrCltZO4ZI2T+Cy
9h7BFW0Ww7b2cYRreP8E1+l+Az2gTa0J4Tbe28Md/LeDHXIXDuAe6qJ98oA8
JI/I3DF5Qp6SZ+Q5eUFekldkj2z+nZFlTXOy+DQny4bmZNnS/OcXR7I0FA==

        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 235.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888090914624*^9},
 CellLabel->
  "Out[337]=",ExpressionUUID->"39a7b06a-a7c3-4917-a59e-76efd4a30bdc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.739888092040552*^9}},
 CellLabel->
  "In[338]:=",ExpressionUUID->"42c27720-9d27-4454-83b1-ea6dae152769"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdyUEKglAUheFD26iBxSMkQjK1rLTMnDhtCYFjt+AaXFFLS/FC+D/u4+fj
rD/tu1lIcsMfW/duuGWh8X2rqVpN7UqzZ82sG2tkdfAW9uEdvIcD+ACH8BFm
YziBT/AZTuELfIVvcAbn8B1+wMXcHawndlgldlgv7LAq7H//AM/4KGA=
        
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 41.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888092562531*^9},
 CellLabel->
  "Out[338]=",ExpressionUUID->"5cfa31e1-7b27-447f-a202-44d07837b36e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.7398880936507874`*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"47ae783a-5223-465f-86a5-f6c83405bad2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[{{1., 277.}, {2., 292.}, {3., 322.}, {4., 265.}, {5., 295.}, {
        6., 475.}, {7., 688.}, {8., 886.}, {9., 1489.}, {10., 1378.}, {11., 
        2497.}, {11.265625, 2854.}}], LineBox[CompressedData["
1:eJxd0L0LAWEAx/Enf4HRotiUS97fX87LaLhMNyuzCyGWR1FMLimLQSnZrEb+
A4O/wF9gMLBx/X7P4ur69un3dPWcv9lutFxCCO/vdWpfP57tKagL56kfUKGh
jz0dQrUNHUbnSzqCDm06ipqSjqHuMR1Hd8oJVPboJOpTTqG3Dp1GLxadQZ9d
Oota6nyOe5/O/50voMaALvL76nyJ+4jW0TPvJ2l7wr2MHqfcaWPGvYK+aUkH
FtyrqElL2lL/u4a+Vtzp+1r/AsRPO/U=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 2854.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888094103601*^9},
 CellLabel->
  "Out[339]=",ExpressionUUID->"f391ac03-52f8-4eee-a8dd-91a275403410"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.739888095144308*^9}},
 CellLabel->
  "In[340]:=",ExpressionUUID->"3ad10fd6-991f-49fa-8aaa-a5953433ab07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdyckJwlAUheGDPQhZuFCJIiLiPA9xqMAKRHCjxFhCSnFpBa7tw2ZMuBfE
/3EfPx+nckoO54KkWvbzfl5xdsVI+XverQqsj8RdsqY3d9l6jN1V36/u0Pq+
uOtwA27CLbgNd+Au3IP78AAewiN4DE/gKTyD5/ACXsIreA1H/05hbbDD2mKH
tcMOa4/95y/AmUxp
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 211.37500000000003`},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {214., 266.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888100222271*^9},
 CellLabel->
  "Out[340]=",ExpressionUUID->"0585cf65-b422-4909-9463-f39758a0e5ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.739888101615326*^9}},
 CellLabel->
  "In[341]:=",ExpressionUUID->"bcf76d68-c278-4a57-be2c-9808db5d3b69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdzDsKwkAYReEfK0sLCwuLKCIqIvH9NvGxAhEbLYIYLFO4gSzBJbhEl+Bj
rohnYDh8c2FKp2QbZ8ys/rrvuvMIPrldQz24+l9nXaOLnHO9J3Le1Yvlgmt4
kItyJHv67yyX1b1aUY9q1TXdyTU1UBtwE27BPtyGO3AX7sF9eAAP4RE8hifw
FJ7Bc3gBs+G/U9iW2GFbYYdtjR22Dfafn0JWMFI=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 313.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888102248275*^9},
 CellLabel->
  "Out[341]=",ExpressionUUID->"1ab955e9-c6c0-49fe-942a-4b223f226ef8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.739888103321013*^9}},
 CellLabel->
  "In[342]:=",ExpressionUUID->"d9859027-487a-4a29-b8b1-80de7976aea9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdzU8KgkAYh+GPVi1btHDRwiLEJKK/ppY6lSfwCEG0K7qBR+tIHkFzJmTe
geHlmd9ipvd3+RiIyKK9v+pT513cjzIPyvZQt3oZj3S/T+Ox6d8OPFHWP+LC
M3gOe7APB/ASXsFreANv4R28hw9wCB/hCI7hBD7BZziFMziHle0Klgt2WK7Y
Yblhh6XA3rsBNohGHA==
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 274.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888103800686*^9},
 CellLabel->
  "Out[342]=",ExpressionUUID->"2acc1ffb-4a3e-4ad2-818b-984adb60ca2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.739888104918975*^9}},
 CellLabel->
  "In[343]:=",ExpressionUUID->"14de7cdc-7690-4fcf-8fb2-48427c0674b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdzTkKwlAUheGLlaWFhYVFFBEVCcZ5znNIYyXqCgQLqxAERbDIElySS8oS
HO55SE4g/Hw5yUvpGO5OGRGpf+5v9Ur8X55XgwfaxDpr0ntOu73BefSBFvD+
HS5qX/Z7B77AZW0cwRX83+5VnGdd05oz3ED3aBPnHWAXDuAWukE9cpvcIXfJ
PXKfPCAPySPymDwhT8kz8pzsk03aMVkWtJNlSTtZVrSTZU37329KSDcB
        
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 448.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.73988810566938*^9},
 CellLabel->
  "Out[343]=",ExpressionUUID->"2fedaa52-1de0-43a8-a32c-2a63204efc5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.739888106695592*^9}},
 CellLabel->
  "In[344]:=",ExpressionUUID->"dda49798-1dd1-4e1b-8e5b-7c16eded069e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxd0D1IAmEcx/GjqdGhoMHBJMIkQrMXe/UxHR1EGppKgqCttoKiDio6Ecqp
2cEpiBxrC1obHKVNgmbHpijv9/0vHhxfPvc8/O+5m9w/qhyMeJ43838Pqquf
C9O8cjxQE+ZR9cUcUQ9v8Jjav8UTajbAUfW4hmNqxxxXq9d4inmXeHro/Qm1
YfuTarmOZ9VuA8+pwT1OqT93OD3keXpOM8w/wQt8zylexBd4Sd3x8bIasfNn
1bb9vxXV2flW1e0HvKZ+tPC6WnrGG+pZG2+q1VecC+v/vmMn73ZkHyc/Wc+H
db1v1uXmXo/1Le1/ZJ6Pn2x+QY7bfPltHHtFtdBlHQdf7g9vMlPm
        
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 46858.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888107313561*^9},
 CellLabel->
  "Out[344]=",ExpressionUUID->"aad60288-bb51-4668-a05e-f7d9348bc8b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.739888108517148*^9}},
 CellLabel->
  "In[345]:=",ExpressionUUID->"4bcae2fd-cba6-4f8b-b2ce-e47b54b47f2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdyjsKwkAURuFLtmGKKCEGEfER36+JugI7SRMHLLSxs3YpLsWlGb1XxDPM
cPj4p+6v+1MgInH13m3efHVrTj7nYg217myOtOXR3LC9NMfax9eJNvLm1P4X
5pb2eTC34Q7chXtwHx7AGTyER/AYnsBTeAbP4QW8hFfwGnb/vsOSY4dlgx2W
LXZYdth/fgEvL0Qx
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 208.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888113441032*^9},
 CellLabel->
  "Out[345]=",ExpressionUUID->"037f3f39-47f0-4b40-97cb-dd06b2506485"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.7398881145489073`*^9}},
 CellLabel->
  "In[346]:=",ExpressionUUID->"37fcb13f-b4b5-4aba-89c8-25429af2435f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdzDtqAlEUh/FLqpQWKSxSqARRETFqfCQ+xkcbGacQFMRBFDs1RYoUiktx
KS7FJbgEk5xPxP+F4eM3594Tn62DxYNzLv37/dXOufUfb+fxw+pv8aM1dnXE
ev7BT9bDN46Kn7m/wTH2rXDCevrCL9b9BCfplKbYH+KMNZzjLO8XOMd8ifPi
VzqiBd6PcREPcMnqBfiNDmlZXKGftMq+Pq5Zjz5+F3+I6+KGuCluib1778Wu
LXOx68hc7LoyF7uezG++AFCFRkQ=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 484.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888115029098*^9},
 CellLabel->
  "Out[346]=",ExpressionUUID->"1e16a841-358a-438a-b573-9ab468e11042"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.739888116096113*^9}},
 CellLabel->
  "In[347]:=",ExpressionUUID->"5fccfc62-98a7-4697-9659-fb216cfff978"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxd0T1LQlEcx/FDU2NDg0ODSYiJiKVlDz5cH9YcTNoCCYK2HN28oKBlkNCQ
L6IX0NgLcXRo9CWk/b5/5B7h8uF77+Wc/7kePjy3H3ecc8fra6N+q+o/8UnA
DflkvStTL/SenL3S+7I/o2Oy80EfsN4nHZdfczohY/b+key90Uk5eadT8tfm
ScvvIZ2Roc2fpad0jvnH9An72XqnMrD98vJnQBdwhGeya+c/lws7X1Eu7XwX
zNOhL9mvTV/hHV7z/j1dYp5buux1xeuqt34QfR7S7gZr3G9hLbqOqyPfJbTm
f3aNaIdeu6b3fNt/k4tCiQ==
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 1591.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888116679962*^9},
 CellLabel->
  "Out[347]=",ExpressionUUID->"737c2bc3-7702-442e-99bd-3bc3425eb2fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.73988811849862*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"bc554a43-d30a-4ff8-bd8f-8ff47eddb938"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdkUlqAkEYRhtXLl1k4cKFShCVIA7RaJzK4QSeQATBkDgFRxAsb+ARsnSZ
I+QoHsEjaPzfL3Q1NI9XXV/VV9WxwbQ3DHiel7q9/5Tn0rxj9m0YENo5HhSG
lnhIeNnhT8LTAQ8L+3s8Qn6DR+EWxllvhj+TV08IoxM8KTyrp6HOf2G+9s8I
/8Z41snnhD9feB7/wAtO/lVoR3jRyZec/m9Ov7LQ6H1XHH+nn/avCn8XeI3z
rfE6+63wBv30fE3Hjd8tbrR/y9/f4kft32Z/+lnc0/vpsN6U7/jj/3b9bnH7
aa4IBUYZ
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 565.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.73988812012465*^9},
 CellLabel->
  "Out[348]=",ExpressionUUID->"2fc2f10b-f0b1-4ea7-99c0-2fc67773d796"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.739888121649811*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"c1514496-0b97-4f0f-883c-17029bfcb2f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdzTsKwkAUheGLlWUKCwuLKCIqIr7fJvGxAlcgYhQbXyCWZikuwSW4pCxB
5RwRz8Dw880dZrKrwyJMmFnpvT/Fin3kGPAAdc50En2caIe+0ik0vtFp1P3e
z9B72kXvOzqHLtd0Ho1CuoA+t3QRDS50Wf6v8P0NXWX7bE1cFzfETXFL3BZ3
xF1xT6wdiIfikXgs9sS+OPh3JLaJzMU2lbnYZjIX21zmP78Ajhg1KA==
        
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 511.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888122758727*^9},
 CellLabel->
  "Out[349]=",ExpressionUUID->"ab955a12-95c2-49a0-950e-8e58560a831a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.73988812414148*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"0c4e59f3-db4a-41f3-9c7c-861791bc7ab2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdyU0KglAUhuFDo4YOGjRokBGREWHaf6ZWLiBcguDYSeTUJbU0l+DPPRC9
Fy4vz/nsrEjzgYg47e9qXh31eZWxHkzrj3po+n2rLe1KO4LH8ASewjN4Di/g
Jcyu4Q3swlvYg314B+/hA3yET/AZvsBXOIBvcAhHcPzvCpY7dlge2GF5Yocl
wf5zAxeYKvc=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 373.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888125162863*^9},
 CellLabel->
  "Out[350]=",ExpressionUUID->"31045444-37b2-4b03-9ad4-4da45c798e9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.739888126313937*^9}},
 CellLabel->
  "In[351]:=",ExpressionUUID->"b7ad408c-23b7-4e1a-a5b1-e51866359994"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdyTkKwlAURuGLlaWFRQoLFZEYRJyHxCTPAWwlOzBg7QYsgivLklyCw70Q
ch48Dt/9e/kjuzdEZPT9v+p7p/+UT2cH7fVlbmqL3NzSljdzW+sys2e9WDtw
F+7DA3gI+3AAj+EJPIVn8BxewEt4Ba/hDbyFd3AIR/AejuEETmFXdwHLATss
R+ywnLDDcsZe+QPcxjAJ
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 586.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.739888127935562*^9},
 CellLabel->
  "Out[351]=",ExpressionUUID->"354f298b-e193-411f-b7d5-e89936ba179d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestClassifier", "[", "HaltClassifier2", "]"}]], "Input",
 CellChangeTimes->{{3.7398725432992496`*^9, 3.7398725440774717`*^9}, {
  3.7398880805271807`*^9, 3.739888153094892*^9}},
 CellLabel->
  "In[373]:=",ExpressionUUID->"c4337c6f-b15f-46c1-bd4d-2bfcc75a95f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdz88rg3EAx/EnTTkuOUiPjNZIJj/ntz0Ps7P8BSIiPyY/soQmRwdK2nU7
umjlrOaykwMnBxdJ2fHJQXLC83l/L8/q6d1rnz17vk/rQmZuqcayrPjf9V99
vKSfQtbhC3V2H9ep3g4Oq2XjBnXeuFGNrGBbzRlHVGcdt+FVHMUZHFMLy7iD
3biT/9/EXTx/F3fzPke4h/Nu4F71wpy/L3B/P88/xgNq+RAP4hOcCJxvKOBh
zruGR9THbTyqlg7wmFo9xeMBT6ivZ3hSzV7ipPqdx44aLXIOHLpmd9XELTt+
vmOf8pv7rLDjhyf2adV+Yccf7+wpv1vnHrscrv6wz/gtfdW62uVQe71spfW7
pmbXXrx/u9qTW25i7i9bYlhh
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 51.}, {0, 743183.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{{3.739888153638381*^9, 3.739888169619108*^9}},
 CellLabel->
  "Out[373]=",ExpressionUUID->"93522c74-9cc5-4399-9b23-59d7cc527a20"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7398881830746727`*^9, 
  3.7398882310452642`*^9}},ExpressionUUID->"67fbd2d0-dac0-4a96-af9d-\
eacf489c9784"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Training Attempt #5: 5000 random SK expressions, depth 10, halted if \
SKHalt[40]==True. NoHalt dataset same length as Halt dataset. Using raw \
string. (Same as #1, but larger dataset) Worse than 1 (slightly).\
\>", "Subsection",
 CellChangeTimes->{{3.7398872588333893`*^9, 3.7398872606941757`*^9}, {
  3.739925769163535*^9, 3.739925817261409*^9}, {3.73992591716278*^9, 
  3.7399259189271*^9}, {3.7399265753572073`*^9, 3.739926580667159*^9}, {
  3.739956924042631*^9, 3.739956938275886*^9}, {3.7399698884558697`*^9, 
  3.739969900012792*^9}},ExpressionUUID->"db060e3c-74dc-4d24-8022-\
8cf76d79cd94"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lengths", " ", "=", " ", "x"}], ";"}]], "Input",
 CellChangeTimes->{{3.739926337214636*^9, 3.739926356784418*^9}, {
  3.7399569463835077`*^9, 3.7399569471165857`*^9}, {3.7399696114161797`*^9, 
  3.739969629443202*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"7f018db3-f966-4e89-b558-6b5b5e51c101"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NoHalt", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"lengths", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "False"}], "&"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Halt", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"lengths", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "True"}], "&"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "NoHalt", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "Halt", "]"}]}], "Input",
 CellChangeTimes->{{3.73996965928885*^9, 3.739969680045323*^9}},
 NumberMarks->False,
 CellLabel->
  "In[251]:=",ExpressionUUID->"aaf2894b-9586-47d9-8b2f-1e9fdeaff8ad"],

Cell[BoxData["862"], "Output",
 CellChangeTimes->{{3.73996965794422*^9, 3.739969680373193*^9}},
 CellLabel->
  "Out[253]=",ExpressionUUID->"302aa6a2-afa1-4133-a652-9b99cf7cb828"],

Cell[BoxData["4138"], "Output",
 CellChangeTimes->{{3.73996965794422*^9, 3.73996968043894*^9}},
 CellLabel->
  "Out[254]=",ExpressionUUID->"85e4aedb-8e4c-4274-9bfd-0120201a6a41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"HaltTrain", " ", "=", " ", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Halt", ",", 
     RowBox[{"Length", "[", "NoHalt", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainingData", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"HaltTrain", ",", "NoHalt"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainingData2", " ", "=", " ", 
   RowBox[{"ConvertSKTableToString", "[", "TrainingData", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "TrainingData2", "]"}]}], "Input",
 CellChangeTimes->{{3.7398718328071957`*^9, 3.7398719480890427`*^9}, {
  3.739882283988702*^9, 3.739882306676138*^9}, {3.739925864341235*^9, 
  3.739925865648127*^9}, {3.739926497854299*^9, 3.739926502137892*^9}, {
  3.739969691963895*^9, 3.7399697117210627`*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"1bce20ce-1bf2-4c08-ab1d-48c9f6ed06cc"],

Cell[BoxData["1724"], "Output",
 CellChangeTimes->{3.73996971266486*^9},
 CellLabel->
  "Out[258]=",ExpressionUUID->"de29ad2a-984f-4d81-aab1-cbbf5275c7c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HaltClassifier1", " ", "=", " ", 
  RowBox[{"Classify", "[", "TrainingData2", "]"}]}]], "Input",
 CellChangeTimes->{{3.739872064023624*^9, 3.739872082336583*^9}, {
   3.739872152860105*^9, 3.73987215599541*^9}, {3.73987218719993*^9, 
   3.739872196891059*^9}, 3.739872318601696*^9, {3.739872431581009*^9, 
   3.739872434756749*^9}, {3.739885596452054*^9, 3.739885598560957*^9}, {
   3.7399258911052427`*^9, 3.73992589220361*^9}, {3.739969782184577*^9, 
   3.7399697860249023`*^9}, {3.739969879539859*^9, 3.739969917927997*^9}, {
   3.739970010381384*^9, 3.739970014590765*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"69470b01-f441-4941-84c9-31f995394ace"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "False", "True"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Text\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "False", "True"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Markov\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["1724", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 1724, "ClassNumber" -> 2, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Text"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Text"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Text", "Weight" -> 1]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], "Fill" -> 
             "", "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], "Type" -> 
             "Text", "Version" -> {11.3, 0}, "ID" -> 7263179337424669307]], 
           MachineLearning`MLProcessor["ToLowerCase", 
            Association[
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 3139720177438361802, "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["RemoveDiacritics", 
            Association[
            "Invertibility" -> "Approximate", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 5643421565728107793, "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["TextToNominalSequence", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Forbidden", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Text", "Weight" -> 1]], 
             "Tokens" -> {{
               " ", "\n", "\t", "\:f39f", ",", ".", "!", "?", "\"", "'", "(", 
                ")", "$", "%", "&", "@", "*", "-", "+", "[", "]", "{", "}", 
                "\\", "|", "\\", ">", "/", "~", "`", "#", "^"}, {
               ":)", ":-)", ":D", ":-D", ";)", ";-)", "<3", ":p", ":-p", ":P",
                 ":-P", ":(", ":-(", "=(", ":/", ":-/", "</3"}, {
               "=", "<", ";", ":"}}, "Method" -> "WordSegment", 
             "Version" -> {11.3, 0}, "ID" -> 3051290048872824615, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor[
           "NoninvertibleIntegerEncodeNominalSequence", 
            Association[
            "Invertibility" -> "Impossible", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]], "Index" -> 
             MachineLearning`SortedHashAssociation[
               Association[
               "KeyHashes" -> {-9013817937938426079, -4973948215836336071, 
                 2077270817744784973, 3408017859420023313}, "Values" -> None, 
                "DefaultValue" -> -1, "HashFunction" -> 
                Function[{
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$}, 
                  Switch[
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, {
                    BlankSequence[String]}, 
                   Data`StringHash[
                   MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                   
                   Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                   Blank[List], 
                   Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    StringJoin[
                    ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
                    
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {11.3, 0}]], "MissingCode" -> 0, 
             "Version" -> {11.3, 0}, "ID" -> 2055599668730355056, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]]]]}, 
         "Invertibility" -> "Impossible", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 6577660353193586174]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[False -> 1, True -> 2]}, "MissingCode" -> 0, 
             "Version" -> {11.3, 0}, "ID" -> 5749777139264552649, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 2672999966851599696]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[False -> 0.5, True -> 0.5]], "Prior" -> Automatic, 
    "Utility" -> 
    SparseArray[
     Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
    "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
    Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association[
     "ClassPriors" -> 
      Association[1 -> 0.500362056480811, 2 -> 0.49963794351918894`], 
      "Method" -> "Markov2", "TokenNumber" -> 4, "Order" -> 4, 
      "MinimumTokenCount" -> 0, "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "NoninvertibleIntegerEncodeNominalSequence", 
            Association[
            "Invertibility" -> "Impossible", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]], "Index" -> 
             MachineLearning`SortedHashAssociation[
               Association[
               "KeyHashes" -> {1, 2, 3, 4}, "Values" -> None, 
                "DefaultValue" -> -1, "HashFunction" -> 
                Function[{
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$}, 
                  Switch[
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, {
                    BlankSequence[String]}, 
                   Data`StringHash[
                   MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                   
                   Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                   Blank[List], 
                   Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    StringJoin[
                    ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {11.3, 0}]], "MissingCode" -> 0, 
             "Version" -> {11.3, 0}, "ID" -> 3521096920526491024, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "NominalSequence", "Weight" -> 1],
              "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Impossible", "Missing" -> 
         "Imputed"]], "NGramPosition" -> MachineLearning`SortedHashAssociation[
        Association["KeyHashes" -> CompressedData["
1:eJw9lkmubEUMRN+AFQAbYAFI6S6dXsKX/oglMEBixOAzZe8cZ1Olp1cl+16n
m4hw/vbnP3/89d/X19ePn/j3/e8f/377lR+/1/DQjCrhe7nPVcexalmYLpE1
TIbXx7HMNGasiXfOIT6vI3nFgkC2Im2KvzemjqHCV1qVp6VeR4hWEkCmLFnp
/hzekcOnrcySmpUfhy5zHWuo+9Cafh0dWZbNCDUhPRvPkWNpVnDqSBJMuQ41
H7EylmRMC9zPgdlravAiqXHMdUjnqHOQzlw+Vr3Dx+oINLIIV1Zx36AjyzNp
rZXFKM1bB+8H6RhP8zA/X6gMbbvn7MN0qr5QZgyEbmWKpBLuOTTcTJjX5JjA
Ic9hgxGlKF2hnYzwOkYUT65ZPV4G+3o1lwrlqVKklau87k5ipdMjGRQpfJ4j
ooZGxRqjguE8MMzw4FD3NTqU17DrkAINM6hBhwiF13OQ1iRgOq8xYVsfh+9W
GX2mwSEv3VEcbsq4e7Y8drNipLMrE+d81eklH8cYzMlBpNOSXDfdSKoGnQQC
KTOB73VMB6NinMNkqixvHVTnPQoBzlGgd9x0GYIz0SpC8iMjr8Pph6mPSsAF
b0jwOhxCkeWcTIIvfRB1WzXmygF9nNRVn0ObduBweYO3fMVxwLyK8gE/wpm4
hD+HTIPrYAisMo18DldYAQWZnzZ39YUCAwGeBhU0KMjyOkYP0EE0vSTdeGco
lGri8ApvMMh1K6c2xsl4BrSkDNK4DiADLawGo0ACXOZzSGI2sxYfxvQGpZJi
DdMBOwGkPXIq8GEeITQDWAR6cBxCcFEA7DLMqftRrTsHN8sapd48v1kJobOD
gETQSD9v5ULR4a1K0ij0+LzRDYKfNIBMeXHIcwSzWwuCeC5vXj8HdTULUSc4
Lf7UBysS5bJRFSOLOn7ZSg3BBb0iV9gGUda1Q39km/H2hBefY0+6hMoYZdL/
BVyOHdYzGf62YIFGvXbGx5DBgijQjBd/Kl0agUTT9NalenaUfGCFki0bGcfe
AmEggNZCZHh57Sg9Khg9OZUCdvrs2lKA0AKkgWLVt5+PGMFsS4LDSU71bUau
rKQBRoZMhmrbjPKi79FCk04Mi20OwIVWox7IxHDibDM8LBFkoHrvQfgThEWH
ThF4kivgI8NthjRM11vbe8Qjt7lkjwMd62kgornrkSGLkqpXZC9C1OTaJ5Bm
Ep5Uwxrx0xeg2SImrcZk2J9jbxUZUKx7Mhdf93mbtI92wH5onvPiA2wSf8FL
BW0ITI5rJ3uQBKh6WMZQjh1OoXh0YbaEQrN7bnWWvdCCxNA+P3bQgaBhXmgj
youMbzutQUwF6ZqQ2Juc187Cw4agzAR/CPix28ZLqzDaQZvk5Glbd6v5632M
umw70g+z0P1efpNB+sGl9+YC8cHIQDpzPnV5i8mWWpDQwMlr53qzuDy0yMMW
pM6PfW25Qpiwc20A/8fe68yDEGycJrTWtfexcLPgNppo68SH5/R8Sxg6BK4u
T9ju8Ic0AD+UgHBx7Xun5uz7h/Y94fQteu2yZ6qFlDX5zkVAep3RNeSMqvPy
mZlS6mDdaV/UoNGJA0r2rQBqZi8Fijj2BghO+AmVmPvl52xRYPV431lQDXn2
JB9IiX7wXvROeXZw0ChiSTBHu3hAB0APDeWOgKpJ3zq2nYsYYRANBbik//Kn
K32hAg8kS0v19DNlzzWRpL4dwqqTD3Tru1ffX+C7tOofO0xgp8KNVgaSvfUm
19LWcca1d9K8erf2UmUC0AsR5iJ26mINcUXlQgy3W2hg+LErrULZQBAK1NfW
vPZpSd8YPhcEftxz6S2oZdtRMPxjmvd5uoUmUhIor5atg7deDn1F7OsPCokq
XDtB4EJfEbnicNTVAS4G3jtz7Utq53/ilwCU0XsxrO8BOuf/2msg9g==
          "], 
         "Values" -> None, "DefaultValue" -> Missing[], "HashFunction" -> 
         Function[{
           MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$}, 
           Switch[
           MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$, {
             BlankSequence[String]}, 
            Data`StringHash[
            MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$,
              "Murmur3-64"], 
            PatternTest[
             Blank[], 
             MachineLearning`PackageScope`PackedArrayQ[#, Integer, 1]& ], 
            MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$, 
            PatternTest[
             Blank[], 
             MachineLearning`PackageScope`PackedArrayQ[#, Integer, 2]& ], 
            
            Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`q = {
               
                Quotient[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^48], 
                Quotient[
                 Mod[
                 MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^48], 2^32], 
                Quotient[
                 Mod[
                 MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^32], 2^16], 
                Mod[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, 2^16]}; 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`q = 
              Transpose[
                MachineLearning`PackageScope`ToPackedArray[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`q]\
, {1, 3, 2}]; 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`q = 
              Transpose[
                Flatten[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`q,
                  1]]; Data`StringHash[
               FromCharacterCode[
                Abs[
                MachineLearning`file132SortedHashAssociation`PackagePrivate`q]\
], "Murmur3-64"]], 
            Blank[List], 
            Map[Switch[#, 
              Blank[String], 
              Data`StringHash[#, "Murmur3-64"], 
              PatternTest[
               Blank[], Developer`MachineIntegerQ], #, {
               PatternTest[
                BlankSequence[], Developer`MachineIntegerQ]}, 
              
              Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
               MachineLearning`file132SortedHashAssociation`PackagePrivate`q = {
                  Quotient[#, 2^48], 
                  Quotient[
                   Mod[#, 2^48], 2^32], 
                  Quotient[
                   Mod[#, 2^32], 2^16], 
                  Mod[#, 2^16]}; 
               MachineLearning`file132SortedHashAssociation`PackagePrivate`q = 
                Flatten[
                 MachineLearning`file132SortedHashAssociation`PackagePrivate`\
q]; Data`StringHash[
                 FromCharacterCode[
                  Abs[
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
q]], "Murmur3-64"]], 
              Blank[], 
              Data`StringHash[
               StringJoin[
                ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
             MachineLearning`file132SortedHashAssociation`PackagePrivate`keys$\
]]], "Version" -> {11.3, 0}]], 
      "ConditionalProbabilityMatrix" -> CompressedData["
1:eJxlVQs0lekaluRW0irX41YIJekiKpmno5IyNcZdci3lUJROMqRmx+ziNIg2
1VC6yLUUxuSaxE5suZ1/G8n+f9v+2SntGrfE1PlbZ846a/Gu71vv+tZ6v9v7
Ps/zLgsIcwqUlpKSimHmV29aodDRUEohIy5SnLC+D2923J14Pl+MqizP5awv
gxCJGzfUlxNYqLFwq5YFgR3RvkUKbArxX84VXv9I4neVU5qkDR+ff0iJP3mB
gCORLQz+jcKr6EXZ1eEk/nF26OPGf/Yj1ERgb0L1Q9r+gm3wkAh5J7tlzivR
mKhJdtu+kg/LhvBoTj+BajtB6cGqBthU2nyXsa0BtVEiayVNPt7r97uK3Qn4
/hw/upUWIUwot/RWMQ39riMjsQZ8vHhAOXULCMg7TD1LGe2A+HJRcceWTsgo
2sgMxPRAnpOXsJH9EpNpYZNpVjSC3JaqNoHG4enklUm8ITwVn5aUZA4hc9ev
t9fn8ZFRv/RBeBABRYuTkx1nBJj7jnt0w2oKUUUuwpVZBOpYcREGkQTSmxzW
72P+oTM2pBWpSEPqqyUTSO3YPqRwlkCfRe2aDx4CiG+lvc3ypuB4Q2YcXQTc
Ni0b+8D427xII1M9GsoZcvGKJn/tl3r/+H9+ws4p/2NzPc7YVd1gsRswdqln
m3Qbhc616fLfKVI43F+qql5JovRGys1uUwrSnknHclNFaHQ7N5VuS8M7TUfq
NSWCX7rLNxetaXxK8LljMY9E0uN6XQd9ClsmekIqkwXweTb/k70dhRMqolLt
eTRcv9oWGjUFQu9rCQIU6aQem9pFYTI4z8lyVITL1xuJ3Z9FOF+fk+CVT8Fi
bbitg1Ef+Ecn2oj7Iry2VGqPPUQjw7xEQz+Gea/+sGVaBYn6ZUF9ur9QMBhx
D825SQKmJRZccxrdJ9XiS7fRcG7aMqcxUIDlqss/0WHUrPM9N4vHJFuFUHa1
Ev1WJYTZs8Sz+27yse/iXrPctQRcThgNG3MJfD99tWA3j4ClRQY7gCNAM+eX
Y3vSe1GtxdWMSh6CNmc0JPj+EPLVxjJcK5j3ffrW/w8lCuVicbPXZi6MH0sW
3bduQBn3sP7+LxKE5rCjRj5L/qrP/625JcJLY0cvbMolfsW3e5Ab8zIn5iUJ
75Yyo7/JUFCtqnyV+YcAK388UHdLmsKVplUdxXoU3qrXljlnkWAf8L9Z8ojC
ptbEkbcbSdhrhLON1bvBuufZoI7fcarmuf4jNT4S7WpN5aX5ePrZ6loMj4Kk
fEhDT5fEuNmyqSTJIGKP/vmsLl2M73kxA/uC2zAWsZSIy20D70/ZnDXbKfRf
lpgPc0lwNFN37xARMLyipBn4moDORnLeYS0+clvozSqL+XD+yfd1NJOPOGVr
b68QEnkclSmWNo2PNWOrjDXpWfmcqR8XC4wWyGYSiGy9l7juZwLxnWeT/Rh+
1/LMheMJ/4bM3xcxg0JCk2FguoSEz48ajnmZ9bh3QbjkYUnDrPxFv0p+9yhu
AA/r5BwV/AZgVui30KJIgCe3FhqVM/gdlXIWF3fxMflwUWD0DwT4OdbKTz6I
4OvhqWU4LkLzXLdzK3IpjFvFvusrJ9F+XK+Us04EHh1evn81jdJiuTluRyhU
RNvohVeTs/gUWE0oxZqQ2ODfqufB8OPheKJWxEUBAoK02Vx/5v7QDWucRkSI
YuV7dDrTSJMV+gw+pvDuQl17CoPvA/8Krzm4T4yf+gJWtKuI0Vn4rPVacys6
L6yvVfrUisEP12WjGHyvfXW634C5V82l0PLM80GUeR6aX5c3iBObUtZN7yLg
Y6IdYLidwNWJPe4FN/jYn80zZrl2wSdxkI70EeDpgjjbkNfkrPipQyrR/UYk
3FcF6UiWUrib1CbTNCzCr5f839DKNKLK6Wlf7gAaBxJNFXgDs/TXbEl51jHd
Npyf11FWfqUF42vmN6rHC5DdvDj7OkWibu6KXFFSFwLXXf3WKJWARsCaaV3v
Puye3H25wEw4C+93+ot63yyh0S7cxvVk/GBVD2v18Q54XxsyIA92IJsu6eru
oDBnDvWgwpbEsNwunqIBjaZotZ1EIA3PnTvlFdfSiD7i2lS5kYaC+ONiF4af
78MWFI4z/Ny/WemUeYEICoUVY3J7GB1ixecphVBQUeVpfnOcqb+H2qqrESTO
yurYPtGioONgkOT3hMCZYvU9EUUMbpMvWV3OF8AjSnevJoOvmXyf2S9ytBVP
U6PEf+PYTD9I3ztty+xnO74f5j7snbWeqT8z+TBT7znuob5+d0XoNZRlcRh9
5L9Lt894LsCoY1SEsjkFRa5X92DyCxS92Luu5U4r/gPwvu+K
       "], "DiscountMatrix" -> 
      SparseArray[
       Automatic, {125, 2}, 0., {
        1, {{0, 2, 2, 4, 4, 6, 8, 10, 12, 14, 16, 18, 18, 18, 18, 20, 22, 24, 
          24, 24, 26, 26, 28, 28, 28, 30, 30, 32, 32, 34, 34, 36, 38, 40, 42, 
          44, 46, 46, 48, 50, 52, 54, 54, 56, 58, 60, 60, 62, 64, 64, 66, 66, 
          66, 66, 68, 68, 68, 68, 70, 72, 72, 72, 72, 72, 72, 72, 74, 74, 74, 
          74, 76, 76, 76, 78, 78, 78, 80, 80, 80, 82, 82, 84, 84, 84, 84, 86, 
          86, 86, 86, 88, 88, 90, 90, 90, 92, 94, 94, 94, 96, 96, 96, 96, 96, 
          98, 98, 98, 98, 100, 102, 102, 102, 102, 102, 104, 106, 106, 108, 
          110, 110, 112, 114, 116, 118, 118, 120, 120}, {{1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {
          1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {2}, {1}, {
          2}}}, CompressedData["
1:eJwtk3tMk2cUxusQ3q/Q2lIKdIWaNdqvMAQ2NlbK5HsPhRVRVGQytJJIECbj
GrFMBWO4mCplKlAZN1NNGAwvHWPMyxYRQTBMmdGBMbA6GeIMbJMP2mLLzXVp
n+Tk/Pfkd06eR5xekJS5isFgHLaPuoahLWznQ82f3b+cbOGD0G+defwagrLP
XhytTSPgEuN/0Xj41Ru7ZnBzWnZBaACNy9JLdldF0jjMf51uU/ECXnZ5PJzD
WMCv+9eszGYguIAm981dImA6LrUr+gTgrfrn87aWTVhzRLE+to+EvJ6dvPBp
KcxqqZT61QKgVVQOr9EXUmQVV65HmHCTfw3p+4kJLxUIitjP3KDr6faEoiAC
om47OMI8HFzKjMp9IwM+cGCQsVe47AtqsXjxzIwbQJdsRx1JADnbcVQuoXHI
xl17UikaX520vC/3CQQd5RqTHSUFVoJN53M+ACr5qm1rg6RgloVzjfb7attw
3NhHNK4266vPbDXhh5FND3JjTNgzQ52/JKYxexs7iaWg8S6OZXPeBgQbpBGq
MDOC3kHr8YGdCLLqk5OTLQhShnqCd9i5s6NvK3xLCDhgCt29UsuE++49T7Z8
gaDbFnXIX2LCQ6v7bg4qTfiJ+yK3VkBj+q1bxshAGrPoxHyxBME9K2deJSJA
J/ty3u++F7AavhvSW/jwMmDu+CIs4c7xaG24YRHn+Ow5a2oloPTEmD7uWwTo
2OXROTMXBHx1/ZVxLoSmqrTFHjy4ePnvtkKBF5QnHWFfJz2w/MV+/x8qvHG3
T2WWCkhoCD9Vn88LAI5IJxFZVnDdj3+ltytX8NW7d8gKCYXJ6onlaCoei4UK
4Tc2NzAplBljSgLUrvdKJ9yZkOqqqWqNRcBXfxASpWTju5xDjTdY3vjxRcP2
XJLGLsxGX7n9v4aZP+qEQTQ+HTbz8TEZjff/1m34dAFB/JhtLXsLAYzPQ8RF
G5mQ7XL61yANgsm96jZvCRNScpk1ooMIXnWMejZr/qESS98MRHRYqCovQ/yE
ZonynMrafK3DFSdyp9h3ChAwRP3lPUUEcJ15/snmyFGf13DIwapAUPLK4J1E
KbDDBiJ+TrJio+JlpoufFd8iOlldHCbkk+du5qUh+MrZA9K5BYu/G4zJTNC/
/v7tqQYEz6oT/k1/yoPp/o5m/QgPSjpZMX6ZCILlN049bEWgFZzrjQrmQjH1
/L0P13jCu6MOnybk4LK2nB3hxUjB+PWjamOvFAJWOfvn5D78IPZRu9Cey/bC
8sz1NP4P7zmg1A==
         "]}], "Discount" -> {0.5, 0.5}, 
      "DefaultUnigramProbabilities" -> {1.204064923180658*^-6, 
       1.826667519111509*^-6}, "Options" -> 
      Association[
       "Order" -> Association["Value" -> 4, "Options" -> Association[]], 
        "AdditiveSmoothing" -> 
        Association["Value" -> 0.1, "Options" -> Association[]], 
        "MinimumTokenCount" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "ExcludedTokens" -> 
        Association["Value" -> {}, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "MeanCrossEntropy", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         PlusMinus[0.6740276953340033, 0.0357952698294409], "Accuracy" -> 
         PlusMinus[0.5796308909139218, 0.03756995800179809], "EvaluationTime" -> 
         0.0038280144927536233`, "TestSize" -> 345, "TrainingSize" -> 1379, 
         "TrainingTime" -> 13.293309, "TrainingMemory" -> 129860384, 
         "ModelMemory" -> 35768, "ExperimentCount" -> 1, "ModelUtility" -> 
         0.5385790010100497, "MeanCrossEntropyHistory" -> {
           PlusMinus[0.6740276953340033, 0.025311078030799895`]}, 
         "AccuracyHistory" -> {
           PlusMinus[0.5796308909139218, 0.026565972071965222`]}, 
         "Configuration" -> {
          "Markov", "Order" -> Automatic, "AdditiveSmoothing" -> 0.1, 
           "MinimumTokenCount" -> Automatic, "ExcludedTokens" -> {}}], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory", 
          "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}]}], 
        Association["ID" -> 100227499251920]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "Markov", "Options" -> 
           Association[
            "Order" -> Association["Value" -> Automatic], "AdditiveSmoothing" -> 
             Association["Value" -> 0.1], "MinimumTokenCount" -> 
             Association["Value" -> Automatic], "ExcludedTokens" -> 
             Association["Value" -> {}]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.483123489602254, 0.43136114602525666`], "Accuracy" -> 
              PlusMinus[0.5578944886309899, 0.027860997759973836`], 
              "EvaluationTime" -> 0.0038337581818181816`, "TestSize" -> 1000, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.13076127272727273`, 
              "TrainingMemory" -> 1.0922210909090908`*^6, "ModelMemory" -> 
              35768., "ExperimentCount" -> 10, "ModelUtility" -> 
              0.2337244248175132, "MeanCrossEntropyHistory" -> {
                PlusMinus[4.2938182997905985`, 0.6644011371381479], 
                PlusMinus[1.2680360080827913`, 0.2206414711730291], 
                PlusMinus[2.1263914482004598`, 0.291690682644147], 
                PlusMinus[1.2931394079174474`, 0.23485202390179846`], 
                PlusMinus[1.4714668791948362`, 0.23024336880817575`], 
                PlusMinus[1.5045175563652038`, 0.15516320492394042`], 
                PlusMinus[4.855266601313037, 0.7632924907447788], 
                PlusMinus[1.3496822447929322`, 0.1952230981432857], 
                PlusMinus[1.020487832056452, 0.17959217651072906`], 
                PlusMinus[1.918460296817047, 0.2859688007557095]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.49009900990099037`, 0.049975705079116424`], 
                PlusMinus[0.5990099009900995, 0.04911373703086736], 
                PlusMinus[0.4504950495049506, 0.04970306403042821], 
                PlusMinus[0.6287128712871295, 0.04845719983009716], 
                PlusMinus[0.5891089108910896, 0.04929127496626447], 
                PlusMinus[0.4405940594059407, 0.049585758966034954`], 
                PlusMinus[0.5693069306930698, 0.04958575896603499], 
                PlusMinus[0.5693069306930698, 0.04958575896603499], 
                PlusMinus[0.6584158415841591, 0.047608514395515916`], 
                PlusMinus[0.5693069306930698, 0.04958575896603499]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.805700936281706, 0.03952910226133678], "Accuracy" -> 
              PlusMinus[0.5982406892231878, 0.022890981045464432`], 
              "EvaluationTime" -> 0.003885279, "TestSize" -> 900, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.5516582999999999, 
              "TrainingMemory" -> 4.7165464*^6, "ModelMemory" -> 35768., 
              "ExperimentCount" -> 9, "ModelUtility" -> 0.45010955482309634`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.7492799944504317, 0.08816669334389635], 
                PlusMinus[0.6642328875340958, 0.0863431084823072], 
                PlusMinus[0.807293035213492, 0.07289786098852571], 
                PlusMinus[0.8833855557924786, 0.08557299536000956], 
                PlusMinus[0.890333825248007, 0.10666202823535728`], 
                PlusMinus[0.900976383103564, 0.07935801836554651], 
                PlusMinus[0.8938449688686402, 0.11965784457118742`], 
                PlusMinus[0.7436419149046573, 0.06688687593465546], 
                PlusMinus[0.8088349526594873, 0.08135664801512468]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.6485148514851493, 0.047913342060285], 
                PlusMinus[0.6485148514851493, 0.047913342060285], 
                PlusMinus[0.5594059405940598, 0.04970306403042825], 
                PlusMinus[0.5792079207920797, 0.049448551345481616`], 
                PlusMinus[0.5891089108910896, 0.04929127496626447], 
                PlusMinus[0.5099009900990102, 0.04999512254661126], 
                PlusMinus[0.6485148514851493, 0.047913342060285], 
                PlusMinus[0.6188118811881194, 0.04869696478143408], 
                PlusMinus[0.5693069306930698, 0.04958575896603499]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.6839023534880616, 0.0216277566174456], "Accuracy" -> 
              PlusMinus[0.6221900545547043, 0.021456151043992094`], 
              "EvaluationTime" -> 0.003934292916666667, "TestSize" -> 700, 
              "TrainingSize" -> 300, "TrainingTime" -> 2.8156325, 
              "TrainingMemory" -> 2.777027*^7, "ModelMemory" -> 35768., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5312996884210391, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.7018904439700447, 0.0372093727592199], 
                PlusMinus[0.6879424717409436, 0.0393303828923404], 
                PlusMinus[0.670994251057844, 0.02876168892869343]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.604140541416924, 0.0346421628348942], 
                PlusMinus[0.642696484093208, 0.033742538013187946`], 
                PlusMinus[0.6198561698612408, 0.02802964922107336]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.6740276953340033, 0.0357952698294409], "Accuracy" -> 
              PlusMinus[0.5796308909139218, 0.03756995800179809], 
              "EvaluationTime" -> 0.0038280144927536233`, "TestSize" -> 345, 
              "TrainingSize" -> 1379, "TrainingTime" -> 13.293309, 
              "TrainingMemory" -> 129860384, "ModelMemory" -> 35768, 
              "ExperimentCount" -> 1, "ModelUtility" -> 0.5385790010100497, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.6740276953340033, 0.025311078030799895`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.5796308909139218, 0.026565972071965222`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0038280144927536233`, "MeanCrossEntropy" -> 
             PlusMinus[0.6740276953340033, 0.0357952698294409], "ModelMemory" -> 
             35768, "TrainingMemory" -> 129860384, "TrainingTime" -> 
             16.749807477223285`], "Index" -> 1]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory",
               "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            4], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 1], 
        Association["ID" -> 100223204284624]], "MaxTrainingSize" -> 1724, 
      "LastReportingTime" -> 3.739955663804586`16.32544144294355*^9, 
      "PreprocessorEvaluationTime" -> 4.2412109375`2.*^-6, 
      "PreprocessorMemory" -> 29048, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 10, "TimeBudgets" -> 8.575901428338328, 
          "ElapsedTimes" -> 8.590157, "ExperimentCounts" -> 10], 
         Association[
         "TrainingSizes" -> 50, "TimeBudgets" -> 10.719876785422903`, 
          "ElapsedTimes" -> 11.157809, "ExperimentCounts" -> 9], 
         Association[
         "TrainingSizes" -> 300, "TimeBudgets" -> 13.399845981778634`, 
          "ElapsedTimes" -> 12.640471999999999`, "ExperimentCounts" -> 3], 
         Association[
         "TrainingSizes" -> 1379, "TimeBudgets" -> 16.749807477223285`, 
          "ElapsedTimes" -> 15.131292, "ExperimentCounts" -> 1]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 4], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[100231794219216]], "ID" -> 
         100236089186512]]], "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "Text", "Weight" -> 1, 
           "Values" -> {
            "k[s[k[k[k[s[k[k]]][k[k[k[k[s[s][s[k][k]][k[s]][k]]]][s[s]]]]][s[\
k[s[s[s[s[k]]]]]]][k[s[k]][s]][k[s]][k]][k[s[s[k[k[k[k[s[s[s[s]][k[s[k[s]]][k]\
]][s[k[s]][s]][k[k]]]]]]]][s[s[k[k]]]]][k]][s[s[s[s[k[k][s[s[s[s[k[k[s[k[s[s[\
s]]]]]]]][k[s]][s]][s[k[k[s[s]]][k[k]]]]][k[s]][k]][s[k][k[s][s]][s[k]][s]]]]]\
]][s[s[k[k]][k[s[s[k]][s]][k[k]][s]][k[k[k[s]]]][k[s]]]][k[s[k[k[k[s[k[s[s[s[\
k]]][s[s]]]]][s[k]]]][s[s[k]][k]]]][s]][k[k[s[s[s[s][s[k]][s]]]]]]]][k[k]][k]\
"}, "ID" -> 3791095496786132862]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 48.864487, "MaxTrainingMemory" -> 136374416, 
      "DataMemory" -> 876968, "FunctionMemory" -> 135872, 
      "LanguageVersion" -> {11.3, 0}, "Date" -> 
      DateObject[{2018, 7, 7, 12, 34, 23.8333`8.129759162562756}, "Instant", 
        "Gregorian", -4.], "ProcessorCount" -> 2, "ProcessorType" -> "x86-64",
       "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.739969779619214*^9, 3.7399698776213093`*^9, {3.739969924139942*^9, 
   3.739969929767725*^9}, 3.739970063905294*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"2853cf92-5984-4818-92ec-b865ae4bc90b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TestClassifier", "[", 
    RowBox[{"HaltClassifier1", ",", "TrainingData2"}], "]"}], ",", "10"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7398724883407593`*^9, 3.739872538157875*^9}, {
  3.7398727453927603`*^9, 3.739872745995302*^9}, {3.7398856173218517`*^9, 
  3.7398856300888033`*^9}, {3.73988622562111*^9, 3.739886249634664*^9}, {
  3.7399699524242487`*^9, 3.7399699829471693`*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"23a592e1-e296-47e9-9efa-f5db91c46807"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"True", ",", 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd0jsOgkAURuEbKksLCgoLIcagMUQeKvhiUFdga0diY8MWWBpLYgmoXDWe
SSYn3/ztuGV1vVsiMnveV/vT5u80D6MPfc1NPdBetEPtXGvDDjyCx7AHT+Ap
7MPsAg7gJRzCERzDCbyC1/AGTuEM3sI7eA8f4COcw+bfNSwFdlhO2GE5Y4e/
/+iz/9wBCJsprw==
          "]]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 41.}, {0, 214.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdyzsKwkAURuGLlaWFhYVFlBA0hOArxmcmD1fgEgJCumxhluoSXIKPuUFy
BobDNz8zq9v7YyAiy8/91p2X+cU2uT64PjsPXb1aPXK1ncfqUj3Rhtpp/594
8Bz24QBewCEcwTG8gtfwBt7COziB93AKH+AjfILP8AW+whls4LxvC0uBHZYS
OywVdlhu2P9+A9OBKBo=
          "]]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 41.}, {0, 199.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdyTsKwkAUheGLlaWFhYVFDCIqIjHR+DZjYmEpWYJgYSXuIEt2CT7miPgP
DD/fPZ3zrbzUzGzw+u/698g+Ce5OB9/T13Vfd5UbvtVRbqqp2oLbaqQGalcN
YbYH9+EhPILHcARP4BhO4Ck8g1N4Di/gJbyC1/AG3sI7OIPdvyvY9thhy7HD
VmCH7YD95yezjymR
          "]]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 41.}, {0, 277.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdzjkKwkAAheHBytLCwsIiioiKSNx3E5cTpPAAoo3iVthZzFE8ikfxCB7B
ZV4Q/0D4+fIyJLnVMdokjDHl9/2pu57BN/411APXm5WTruFFTrl6Zznt+tjJ
Gdf7Sc6qW9VztfH7efkgF3R+Lxf1vXgvqWu1oi7Vqv43kmuwD9fhBtyEW3Ab
7sBduAf34QE8hEfwGJ7AARz+28Jmih02M+ywmWOHzQL7zy+iNDun
          
          "]]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 41.}, {0, 532.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQEf7MFUQIcDVABCn4DxOSB0RCeULwChN8DkRSB0
Qj2ULwGhA2qhfBkIPaEMyleA0pVQWglCSzRC+SoQWiEPyleD0A2FUL4GhF6Q
A+VrQegLRVC+DpRfAeXrQWiHaijfAEILlEL5hlD/NEH5RhCaoxvKN4bQBT1Q
vgmE7uiH8k2h7psI5ZtB6AlzoHxzCL1nFpRvAaHXzHN4ajrleoAflL9psQMA
0gguYQ==
          "]], 
         LineBox[{{26.717567567567567`, 2521.}, {27., 1267.}, {28., 28.}, {
          29., 19.}, {30., 10.}, {31., 10.}, {32., 1.}, {33., 1.}, {34., 
          1.}, {35., 1.}, {36., 1.}, {37., 1.}, {38., 1.}, {39., 1.}, {40., 
          1.}, {41., 1.}}]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 41.}, {0, 2521.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd0s9KAlEYh+FBWrSchYsWLcaIMAkxrdSsPJkXEBEYCqGhELRwLNAKFwO2
UogUgpZeQsuWXkbLLmEuofL3ns0MDC/PfIczzJ/ETfeiE3McZ/vv/K+OsLxM
88lwgVqvqu4jdlVvgOPqwq5fU5MjvK5+j7Gnxqd4Qx2+403Vn+EtdcU6qYYv
OKV+PuMdtenjNG7jjGqu8a4a1HAW13GO52vhPWq9H5kfsP8Vzkf2K+BLXIys
P8QNXFJ/OvhI9Xr4WPXt9zlh/1tcVt8esFHDPuvw/J75Kfe7Y45Nl3lFPed9
BzgcMj9T3YA5/rL/Q1UtTJjjj1fzCx+7RhE=
          "]]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 41.}, {0, 1375.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdzzsKwkAUheGLlaWFhYWFioiKSNT4fmR8FKII4gJMDKQO4gayFJfiklyC
j3tGyRkYfr7cYcKUw/gUZUSk8d6f6np63zg3gw/a4xXOohc0pw2s89p7ABe0
Dx8ukkuodUVrznCVzte0SQjX6f9N9IC2cH4Lt+E97NC8g+7QLrmHLlE3fY/0
UbxTBuQheUQekyfkKXlGnpMXZI9s0k7Iv3faOVlWNCfLmuZk2dD87xd5WjDm

          "]]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 41.}, {0, 307.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdzzFLQlEchvGLkzRJhDREaIWKRNxMTdPyaN+gjxAItaRSQ5aENQUu0iZE
2Ja4SEG4BC5i4OzeR3Bplcr3OUsXLg+/+7/3nHuCx6WjosdxnPDv/Vdd09w8
g5rhgRq4wl7VrWKfaq7xklq+wcuq9w6vqO1LHFCn53iN/Sp4Q22WcYj9TnFE
/Sri6D9vqvUTvMX+9nuX98/wNvvZ/4mpPfs/O6pr53HWv8AJ1rNOcr5bvKum
7nFK/WzgNOd7wHvqYwtn1P4Tzqq+Nt5XZy/4QF3o4Jzqf8VGLfU4Bx7ZeV4N
vzHHXewUmL8zx98fzA/nrQ+GZvV5PEkuymZ9ZH4An/tLBg==
          
          "]]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 41.}, {0, 11846.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdybkJAkEYhuHByNDAwMBARURFxPt2dz0q0A4EY1vY0izJErwGxGdgeHn+
r365na6FEELn9d/9vkf6yf2cxUPsMbaIS7iMK7iKa7iBm7iF27iLe7iPB3iI
R3iMJ3iKZ3iOF3iJV3iNN3iLE5zi7N85Djt2HPbsOBzYsc1/fgJ4NC0d
          
          "]]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 38.05},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 41.}, {40., 79.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd0bkKwkAURuGLlaWFhYWFioiKiPtuMm5Y2VgpWAnWvkIezUfyEVzmn4gn
MBy+uTMEkvL1frxlzKzxXp/65xl/8zg7bagXNevrTnJODefz6kEtYF5U92pJ
3aoV32QnV9WVWsP5Ot7XxL0W3IY7cBfuwX14AA/hETyGJ/AUnsFzeAEv4QiO
YffvBE6/e5jDtsYctg3mcPofw/znF96jKqw=
          "]]}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 41.}, {0, 112.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.739872122572629*^9, 3.739872143737302*^9}, {
   3.739872498147097*^9, 3.739872538613996*^9}, 3.739872746526968*^9, {
   3.739885617780693*^9, 3.739885634277184*^9}, {3.7398862160606127`*^9, 
   3.73988624997501*^9}, {3.739969932683633*^9, 3.739969952867454*^9}, 
   3.7399699842988663`*^9, 3.7399700672110157`*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"3c820de3-b55f-4fcd-bc09-7144e12f1f99"]
}, Closed]],

Cell[CellGroupData[{

Cell["Classifier test:", "Subsubsection",
 CellChangeTimes->{{3.739926154534072*^9, 
  3.7399261574440002`*^9}},ExpressionUUID->"6341057b-7e85-4034-a56a-\
5e4c04d7e90d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TestClassifier", "[", 
    RowBox[{"HaltClassifier1", ",", "TrainingData2"}], "]"}], ",", "10"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.739886451203587*^9, 3.7398864572192307`*^9}, {
  3.739886492702322*^9, 3.739886493206777*^9}, {3.739926108683092*^9, 
  3.739926146590344*^9}},ExpressionUUID->"93544c49-244c-402d-8381-\
f0d139bdfb42"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxd0L9vAWEcx/GLyShiuEgHGkS0Eb9p/bp2NogYjCKR2DAwMLgGaQ2VNl1u
rEFqEJPNYjGYO9QgYTT6C6T4fJ7lLrm887on99zzPXupmisbJElynu9LcR3T
12T7Ch+gk1faiGpD2oRu3mmLzjIrfIPKL7QNfevSt+ixRzvQD2EXehjQbrSm
0h502aHvUbVOe9HvKu1DizXaz+8JB9B9iw7q3g/p9g/zPA06QrfpKDoR88dQ
WfzfB7Qg5ntEtU86joY0OsHzj+gkWhnTKfQ0o9Poz5xW0OaCc8Dq14rrT/Df
muvw0vfL9Wc4v1WG1oz5zgvbpjvlHyCNSbg=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 32432.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.739886457595297*^9, 3.739886493693921*^9}, {
  3.7398865957623463`*^9, 3.739886609602104*^9}},
 CellLabel->
  "Out[260]=",ExpressionUUID->"8db7e944-ad85-4123-8e06-2ab77fce0be1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdkDluwkAUQC2qlBQUFCmcCBBCCCWEsAcPOYALWjbjYBbFgERF6aNwFAro
OYIPkCJHIPDfRGJGGj29+cvMnyd/0wsSlmVl//aVsn6dGw5zxYEwGuIPQm+C
J4WHMZ4iP8DTxKf4o1D1cRsf4c/CvYdn6OfjOXX/vjz1IV7Av/CiUV8irvu/
QD3PK/fP8LLQW+Fv9FvjFfKX+LtxX1UYa6/BAawzj/YGrv+zKbR1fcvwtlH/
Ifyfr8P7tDtGf0U+/xXh8YJ4lzjzRbj9TfyT/lt1cn+Oboifd+oCgftAkw==

        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 397.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{
  3.739886615422818*^9, {3.739887166765317*^9, 3.739887191064084*^9}},
 CellLabel->
  "Out[281]=",ExpressionUUID->"14d3c4a8-8bf6-4557-ba9f-5b7779d226c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdyUsKQWEYx+E3I0MDAwMDJCHJ/e6c47ICZQPK2BYs2RLcTsnz1dev5/3X
L7fTtRARndd/9/se6SfZOcsPeTd5i7iEy7iCq7iGG7iJW7iNu7iH+3iAh3iE
x3iCp3iG53iBl3iF19hucYJTnP37jmPHjmPPjuPAjuPI/vMTswsrXw==
        
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 85.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{
  3.739886616885604*^9, {3.739887196527751*^9, 3.739887203935425*^9}},
 CellLabel->
  "Out[287]=",ExpressionUUID->"8878aac3-90bc-4386-987d-e55c559ab4b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdzjmKAlEURuGHkaGBgYGBioiKNM7zULZuQMVAMCgFh6ChRWg6k3InLsUl
uJReQiv3iPgXPA7fu9yqSq6/p5uQcy53P4/a8zewnj0urLcTDlsTvzhiPfzg
KD7imPXyheNWb4sTvG+PU1Z/h9Ps+zhDVzTL/hrnrdclLuAF/qAzWrQGE1yS
eZn9pyv8/xxXxTX5Xl3mDTqmTXFL3BZ3xF1xT9wXD8TeuwOxG8pc7D5lLnYj
mYu1wcv/0lQ3Hg==
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 544.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.73988661828052*^9, 3.73988662298308*^9}},
 CellLabel->
  "Out[264]=",ExpressionUUID->"6cfac32a-149b-42a2-9c32-ce8a2729eef3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdyTsKwkAURuGLVcoUFhYpoogYkaAZ38bMmJg+zBIEa7eQJbsElbkgnoHh
8N1/fH/6x0BEss//NryXDe2cHkKdV0ehfauOtUY71E61IziBU3gCszN4Di/g
JZzDK3gNF7CBN/AW3sF7+AAf4RN8hkv4Alewhd2/e1iu2GGpscPSYIflhv3n
NxxPKHg=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 73.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.739886625796891*^9},
 CellLabel->
  "Out[265]=",ExpressionUUID->"5ece1500-0a99-4f25-bdbd-691b5093e741"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdzMsKAXEYhvEvK0sLCwuLIQlJzmdmHBaWSEkWJBM7tzCX5lJcgktw+L8l
z9T09Ju3+TKn2zqMmVnx/X7qnqf/zeMa6IN6UeOuXignXO8HOeka7OWUulPT
sOcabeUs/s/hft71eJYLuFfSvY1clldyRV2qVe0LuQbX4QbchFtwG+7AXbgH
9+EBPIRH8Bj24eDfEWwT7LBNscM2ww7bHPvPL0+OP/0=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 199.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.739886627831641*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"6507e16e-9d10-44bd-8184-6fbe35d8f463"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdy7sOQUEUheEdtUKhUCgQQUTE/e4Yl0KtEIWECI3GK5xH8SgezWUvEf8k
kz9f1kz+dNtcEmZWft13/STDJ4+r11LqWU1770c5ox7UrP7v5Zw37OSC/P1f
1PutXPLGa7kCV+EaXIcbcBNuwW24A3fhHtyHB/AQHsFjeAJP4QieweHfMWxz
7LAtsMO2xA7bCvvPT1ttPgw=
        "]]}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 41.}, {0, 214.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.73988709746204*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"0a3ade9a-a0df-43b4-940b-b6b2f03694ca"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.739886617967916*^9, 3.7398866272985353`*^9}, {
  3.7398870969146233`*^9, 
  3.739887107194312*^9}},ExpressionUUID->"9102b127-74cb-4c68-9f94-\
1be59417a03e"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.739887102765649*^9, 
  3.7398871042005873`*^9}},ExpressionUUID->"2729455f-6b68-41de-bffa-\
0abf056d5818"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SKGrid", "[", 
  RowBox[{"k", "[", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{"k", "[", 
        RowBox[{"k", "[", 
         RowBox[{"k", "[", 
          RowBox[{"s", "[", 
           RowBox[{"s", "[", 
            RowBox[{
             RowBox[{"k", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"k", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"k", "[", "k", "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"s", "[", "s", "]"}], "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"k", "[", "k", "]"}], "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"k", "[", "k", "]"}], "]"}], "[", "s", "]"}], 
                    "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"k", "[", "s", "]"}], "]"}], "]"}], "]"}], "[", 
                   RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{"k", "[", "k", "]"}], "[", 
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"s", "[", "s", "]"}], "[", 
                    RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
                    "k", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", "k", "]"}], "[", 
                    RowBox[{
                    RowBox[{"s", "[", "k", "]"}], "[", "k", "]"}], "]"}], "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "[", "k", "]"}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "[", "k", "]"}], 
                  "]"}], "]"}], "[", 
                RowBox[{
                 RowBox[{"s", "[", 
                  RowBox[{"k", "[", "s", "]"}], "]"}], "[", "k", "]"}], "]"}],
                "[", 
               RowBox[{"k", "[", 
                RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "]"}], "[", "k", 
             "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"k", "[", 
        RowBox[{"s", "[", 
         RowBox[{"s", "[", 
          RowBox[{"k", "[", 
           RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "]"}], "[", "s",
        "]"}], "]"}], "]"}], "[", 
    RowBox[{"k", "[", "s", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.739886342448246*^9, 3.739886350295829*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"1ab499e3-3359-4abf-9f59-e079a621283f"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt1kGOFDEMheGWYMcpOAl34AgjsebqXACJWde0J6RfnGen/pFQq/nixHaS
qv7+9vvnry+Px+Pb+7+/7/++Pq5/f358/v36/9fP0XxRvLq+O16tv1v/Tnf3
+Vjto3xwHMdxHMdxHMdxHMdxHMdxHMdxHN/n13HRd3W+KF5d3x2v1t+tf6e7
+3ysdvfzBcdxHMdxHMdxHMdxHMdxHMdxHMfxj39RXDRudr4oXl3fHa/W361/
p7v7fKx29/MFx3Ecx3Ecx3Ecx3Ecx3Ecx3Ecx/GPf1FcNG52viheXd8dr9Z/
t/6pfvf+Z/vp9XV39/NrtbvffziO4ziO4ziO4ziO4ziO4ziO47v9Oi76rs4X
xavru+PV+rv1b3d+7v7s3t/u+WW7u/7s+5Pt7vyrP79m1+92/tz9G/np9XV3
9/t1tY/ywXEcx3Ecx3Ecx3Ecx3Ecz/LruOi7Ol8Ur67vjlfrv1v/dufn7u/u
89E9v2x31599f7LdnX/159fs+t3On7t/Iz+9vpG76+/ev+ru/n2y2kf54DiO
4ziO4ziO4ziO4/jJfh0XfVfni+LV9d3xav13799s/O783Puz+3x1zy/b3fVn
359sd+df/fk1u3638+fu38hPr0/17u+33b8/que3ev7Z9av1J9ur3Z/Z9VU/
ff3q++Pu/8jd79/q/enu7uffah/lg+M4juM4juM4/r9+HRd9V+eL4tX13fFq
/d36Nzv/3frjrn92/mh81fjq+bnPb3V374/q2ffT7e7z73Z3/dXvx2n9qf5+
rpZftrvrd79fVK+ef/f9rd7fkVP/889X46Pxp57/0/JbPf/s+tX6k+3V7s/s
+qq71x85/fWu747HP3f382u1j/LBcRzHPX4dF31X54vi1fXd8Wr9d+vf7Px3
7+/u+mfnj8ZXja+en/v8Vnf3/qiefT/d7j7/bnfXX/1+nNaf6u/navllu7t+
9/tF9er5d9/f6v0dOfU//3w1Php/6vk/Lb/V88+uX60/2V7t/syur7p7/ZHT
31x391ddX3X3/rh//7jrP927349RHlEdOI7X8+u46Ls6XxSvru+OV+u/e/9m
42fnv/v+7K5/dv5ofNX46vm5z291d++P6tn30+3u8+92d/3V78dp/an+fq6W
X7a763e/X1Svnn/3/a3e35FT//PPV+Oj8aee/9PyWz3/7PrV+pPt1e7P7Pqq
u9cfOf3NdXd/1fVVd++P+/ePu37Vu+ef7d3v5yiPqA4cP9Gv46Lv6nxRvLp+
93i1f/R/Ln52/rvvz+76Z+ePxleNr56f+/xWd/f+qJ59P93uPv9ud9df/X6c
1p/q7+dq+WW7u373+0X16vl339/q/R059T//fDU+Gn/q+T8tv9Xzz65frT/Z
Xu3+zK6vunv9kdPfXHf3V11fdff+uH//uOtXvXv+2e6+n92fL+7nU7ZXr8+9
/+v8H2bAAUU=
   "], {{0, 0}, Offset[{759, 33}, {0, 0}]}, {0, 1}],
  Frame->False,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{759, 33},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{0, 759}, {0, 33}},
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.739886350777362*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"da12dc60-1e11-4922-b6a6-65926709b77d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"GenerateTable", "[", 
   RowBox[{"depth_", ",", "iterations_", ",", "number_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "exprs", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"exprs", " ", "=", " ", 
      RowBox[{"Monitor", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomSKExpr", "[", "depth", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "number"}], "}"}]}], "]"}], ",", "n"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"lengths", " ", "=", " ", 
      RowBox[{"Monitor", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"exprs", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "\[Rule]", " ", 
           RowBox[{"SKHalt", "[", 
            RowBox[{
             RowBox[{"exprs", "[", 
              RowBox[{"[", "n", "]"}], "]"}], ",", "iterations"}], "]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "number"}], "}"}]}], "]"}], ",", "n"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "lengths", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7398820958498487`*^9, 3.739882108437313*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"5dcb31c0-ea89-4460-ad20-5d4838817789"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"GenerateTable", "[", 
       RowBox[{"n", ",", "40", ",", "200"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}], "]"}], ",", "n"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.739872624489894*^9, 3.739872631123022*^9}, {
  3.7398817973913193`*^9, 3.7398818734295692`*^9}, {3.739881905560164*^9, 
  3.73988190594028*^9}, {3.739881944773789*^9, 3.7398819496386843`*^9}, {
  3.739882211866831*^9, 
  3.739882213871719*^9}},ExpressionUUID->"37335144-36ca-4b28-8b3d-\
a70d16f4e158"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"k", "[", "s", "]"}], "\[Rule]", "True"}], ",", 
           RowBox[{
            RowBox[{"s", "[", "k", "]"}], "\[Rule]", "True"}], ",", 
           TemplateBox[{"1997"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{
              RowBox[{"k", "[", 
               RowBox[{"k", "[", 
                RowBox[{
                 RowBox[{"s", "[", 
                  RowBox[{"k", "[", 
                   RowBox[{"k", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", "k", "]"}], "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{"k", "[", "s", "]"}], "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "[", 
                    RowBox[{"k", "[", "s", "]"}], "]"}], "[", "s", "]"}], 
                    "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"s", "[", "s", "]"}], "[", "s", "]"}], "]"}], "[", 
                    RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"k", "[", "s", "]"}], "[", 
                    RowBox[{"k", "[", "s", "]"}], "]"}], "[", "s", "]"}], 
                    "]"}], "[", 
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "[", "k", "]"}], 
                    "]"}], "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "[", "k", "]"}], 
                    "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", 
                    RowBox[{
                    RowBox[{"k", "[", "s", "]"}], "[", "s", "]"}], "]"}], 
                    "]"}], "[", "k", "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"k", "[", "s", "]"}], "]"}], "[", "s", "]"}], 
                    "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", "k", "]"}], "[", 
                    RowBox[{"k", "[", "s", "]"}], "]"}], "[", "s", "]"}], 
                    "]"}], "[", 
                    RowBox[{"s", "[", 
                    RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"s", "[", "k", "]"}], "]"}], "[", "k", "]"}], 
                    "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"s", "[", "k", "]"}], "[", 
                    RowBox[{
                    RowBox[{"k", "[", 
                    RowBox[{"s", "[", "s", "]"}], "]"}], "[", "k", "]"}], 
                    "]"}], "[", 
                   RowBox[{"s", "[", "k", "]"}], "]"}], "[", "s", "]"}], 
                 "]"}], "]"}], "]"}], "[", 
              RowBox[{"k", "[", "k", "]"}], "]"}], "]"}], "\[Rule]", 
            "True"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{73., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{61., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{61., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 19904695938153399865, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 19904695938153399865, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 150, 19904695938153399865, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{92., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[19904695938153399865 === $SessionID, 
   Out[150], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.739882204794662*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"43cbbcf1-e96c-4ca7-9777-a9f357cd5f7e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ML Advice - from Matteo Salvarazza", "Subsection",
 CellChangeTimes->{{3.7399695840233603`*^9, 
  3.739969596159363*^9}},ExpressionUUID->"8c7df693-15d8-42a7-a447-\
159a5fed6064"],

Cell["\<\
ML Advice
How to represent data?
- Sequence of \[OpenCurlyQuote]sequences\[CloseCurlyQuote]
Can you find a mapping between one of the sequences and an integer? 
\t--> base4 encoding (this will be unique)
\t\tProblem: input size is unbounded.
\t\tSolution: Generate training set, use base4 encoding, look at maximum
\t--> or ?strings or something?
\t\tAdvantages - it captures subtleties of combinators
\t\t\tAlternatively, use base4 and padding - then they become \
\[OpenCurlyQuote]images\[CloseCurlyQuote] (matrices).
\t\t\t\tIn this case, still use RNN - a sequence of n-dimensional vectors \
where n is the longest element in training set.
\t--> or trees?
\t\tAdvantages - purest method of representing combinators.
- or just initial SKcombinator (\[OpenCurlyQuote]sequence\[CloseCurlyQuote])

How to creat

Type of dataset? (50:50 halt:no halt or actual distribution?)
\tTraining set *must* be balanced, even if real world not balanced.

Ratio of data within dataset? (distribution of examples belonging to specific \
class)
\tUsually unimportant - just experiment. Generate a *balanced training set* \
and an *unbalanced training set*

What model to use?
\tRecurrent neural net.
\t\tbase4 format - sequence classification problem.
\t\t\tUsual entry-level problem - sentiment analysis. Take this architecture \
and experiment.
\t\t\tLook at tutorials about sentiment analysis (simple - this problem is \
much harder)

Ensure {no --> very few} combinators halt within the given training set, \
otherwise problem is trivial.
\t(e.g. size 10 vector - [[9]]!=[[10]] - experiment)


First thing to try: do the initial base 4 encoding, generate (some large n) \
training sets, find vocabulary size and check for presence of duplicates. If \
super sparse (large vocabulary, most tokens only appear once), this is bad
\t--> try sequence encoding, with padding method. (Problem - a lot of \
padding. This is also bad. Experiment with different initial evolution lengths)
(alternatively, try RNN with just initial state - will solve all of the above \
problems, but probably won\[CloseCurlyQuote]t work. 0th thing to try - \
training example just a sequence of {chars/base4 numbers})\
\>", "Text",
 CellChangeTimes->{
  3.7399695977101994`*^9},ExpressionUUID->"7d699ce5-2b2f-49d9-bb5f-\
644db38711ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Neural Net Attempt #1: Recurrent Neural Network, Raw String. \
SKCombinators_RNN_Raw_String.nb\
\>", "Subsection",
 CellChangeTimes->{{3.739980336326894*^9, 
  3.739980385697474*^9}},ExpressionUUID->"3806c5f7-8754-45b9-bad8-\
ac21caa1b796"],

Cell["\<\
Unsuccessful - no better than coin flipping. (Markov method earlier is better)\
\>", "Text",
 CellChangeTimes->{{3.739980387056725*^9, 
  3.739980398596262*^9}},ExpressionUUID->"212909c7-0273-441c-9908-\
2ccdfffafec0"]
}, Open  ]],

Cell["Neural Net Attempt #2 - Preprocessing: Find vocabulary.", "Subsection",
 CellChangeTimes->{{3.739980590446126*^9, 
  3.7399806235060863`*^9}},ExpressionUUID->"22c88fd6-bd6b-4bf6-b1ac-\
d93a47db6c5f"]
}, Open  ]]
},
WindowSize->{1114, 925},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 7, \
2018)",
StyleDefinitions->"ComplexSystems.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[561, 20, 493, 9, 114, "Title",ExpressionUUID->"ec14c10b-e02a-4061-ad68-7ef17987e975"],
Cell[1057, 31, 209, 3, 27, "Authors",ExpressionUUID->"a94335d6-91f9-437f-9269-94002258176a"],
Cell[1269, 36, 1328, 22, 184, "Abstract",ExpressionUUID->"69f9e600-7ff1-45c6-a38f-d2e873195b61"],
Cell[CellGroupData[{
Cell[2622, 62, 210, 4, 81, "Section",ExpressionUUID->"ca42a369-ab26-4492-bbe5-539a6af55613"],
Cell[2835, 68, 1548, 23, 143, "Text",ExpressionUUID->"7eee9944-15a7-4ef4-b297-f91e20a48ecb"],
Cell[CellGroupData[{
Cell[4408, 95, 169, 3, 57, "Subsection",ExpressionUUID->"0073fdca-aba4-41c3-9a29-9fd3f83c8d80"],
Cell[4580, 100, 1332, 33, 98, "Text",ExpressionUUID->"a86e485b-1b31-4ab5-956b-23f0dd7cdbd4"],
Cell[5915, 135, 234, 4, 29, "Text",ExpressionUUID->"b55e4ff2-fd91-4732-9823-aa583e391b54"],
Cell[6152, 141, 562, 19, 39, "NumberedFigureCaption",ExpressionUUID->"bed0d78a-6101-41f7-8edb-8516f9c42f9c"],
Cell[6717, 162, 261, 5, 29, "Text",ExpressionUUID->"d876a614-d62a-400b-ab76-77f795ba7b6b"],
Cell[6981, 169, 622, 22, 39, "NumberedFigureCaption",ExpressionUUID->"58783a23-2e05-4fe5-ac38-56af59ba2dd4"],
Cell[7606, 193, 265, 5, 29, "Text",ExpressionUUID->"01348c00-c37d-4106-9c59-f82a47732409"],
Cell[7874, 200, 515, 14, 39, "NumberedFigureCaption",ExpressionUUID->"f2226f25-85ff-4924-8a41-70aca1d4fa3f"],
Cell[8392, 216, 374, 11, 29, "Text",ExpressionUUID->"e1e460a0-bcb6-4a18-8bb1-f318a0115346"],
Cell[8769, 229, 215, 4, 75, "Text",ExpressionUUID->"257936dd-1048-4817-985e-4d9e00bf14dd"],
Cell[8987, 235, 479, 10, 75, "Text",ExpressionUUID->"d6eceea1-b56a-456f-8ef4-10a47c10ea3e"],
Cell[CellGroupData[{
Cell[9491, 249, 580, 17, 40, "Input",ExpressionUUID->"35377374-7b86-42ce-aa86-ff7bee5afbc6"],
Cell[10074, 268, 549, 16, 32, "Output",ExpressionUUID->"8cb6c0d4-aeaf-4c35-9b94-ff1628dff370"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10672, 290, 736, 11, 57, "Subsection",ExpressionUUID->"9760dc58-cb54-4dd2-8e25-ccd85499c856"],
Cell[11411, 303, 268, 6, 29, "Text",ExpressionUUID->"51ec8012-ee53-424b-9eb2-c9b7421aa847"],
Cell[11682, 311, 286, 6, 40, "Input",ExpressionUUID->"27974881-a153-4b4e-8f44-7af2cb1a093e"],
Cell[11971, 319, 555, 14, 58, "NumberedFigureCaption",ExpressionUUID->"6374d849-19c2-4454-bfef-d5c49a12d618"],
Cell[12529, 335, 391, 11, 40, "Input",ExpressionUUID->"c279123a-d3ca-46d7-88d7-3a3c986ea9d1"],
Cell[12923, 348, 314, 10, 39, "NumberedFigureCaption",ExpressionUUID->"44535661-47aa-434c-94f4-4a27720262b0"],
Cell[13240, 360, 431, 10, 40, "Input",ExpressionUUID->"57744649-8b88-46f4-b647-36d9cfa90adc"],
Cell[13674, 372, 403, 10, 39, "NumberedFigureCaption",ExpressionUUID->"a8b239ac-2739-4fad-bdc9-959467bbe0cd"],
Cell[14080, 384, 617, 10, 98, "Text",ExpressionUUID->"46fea085-5766-4fc2-b27e-5c41587dbe21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14734, 399, 156, 3, 57, "Subsection",ExpressionUUID->"e5bbda52-67f8-4c08-b99d-971bf23caac1"],
Cell[14893, 404, 297, 7, 29, "Text",ExpressionUUID->"51db2589-f382-440c-863f-62ef62f95080"],
Cell[CellGroupData[{
Cell[15215, 415, 529, 14, 39, "Input",ExpressionUUID->"4003d655-b845-4f6b-81cc-0947dfc2e219"],
Cell[15747, 431, 632, 18, 69, "Output",ExpressionUUID->"61bf225d-3886-478d-9711-dcb822da5a03"]
}, Open  ]],
Cell[16394, 452, 286, 9, 39, "NumberedFigureCaption",ExpressionUUID->"62bd2151-9c5f-4d1f-9a53-b2d58c503e39"],
Cell[CellGroupData[{
Cell[16705, 465, 587, 16, 39, "Input",ExpressionUUID->"f81cc690-546f-4b99-90b3-fc5af930850d"],
Cell[17295, 483, 1075, 34, 107, "Output",ExpressionUUID->"62a06fde-1ff0-4e92-9004-95fd92fcc5db"]
}, Open  ]],
Cell[18385, 520, 435, 17, 39, "NumberedFigureCaption",ExpressionUUID->"1712df3a-a0a8-4442-ae57-5e907c40de9b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18869, 543, 163, 3, 81, "Section",ExpressionUUID->"ea77a23f-3183-490d-a405-6f1cf89f3d42"],
Cell[CellGroupData[{
Cell[19057, 550, 155, 3, 57, "Subsection",ExpressionUUID->"257a0f97-6845-4851-a7e4-07bd117bea08"],
Cell[19215, 555, 146, 3, 29, "Text",ExpressionUUID->"ade51938-3ffe-4fad-8c96-ce8651990b4f"],
Cell[19364, 560, 141, 3, 29, "Text",ExpressionUUID->"5c690fd0-3101-4467-a9d0-8fa0fa30956c"]
}, Open  ]],
Cell[19520, 566, 1025, 16, 125, "Subsection",ExpressionUUID->"284039a4-77fd-4ca8-8d01-5690d6ec119b"],
Cell[CellGroupData[{
Cell[20570, 586, 249, 4, 32, "Subsection",ExpressionUUID->"89c774c8-252b-4c4c-8fb4-86eada9fc7f0"],
Cell[20822, 592, 3474, 85, 217, "Input",ExpressionUUID->"772fdb93-b262-4d48-93d6-f32f8f7d1a97"],
Cell[24299, 679, 3013, 86, 237, "Input",ExpressionUUID->"5c997991-14dd-4731-bc6d-0c199606cc86"],
Cell[27315, 767, 303, 8, 40, "Input",ExpressionUUID->"44462981-0def-4370-a211-a99c7780c91f"],
Cell[27621, 777, 470, 12, 40, "Input",ExpressionUUID->"bcc82660-a876-43d6-947e-36ea700893ae"],
Cell[CellGroupData[{
Cell[28116, 793, 766, 17, 39, "Input",ExpressionUUID->"1bf35d8a-d0a9-4e28-a3e1-f3783ac3dac9"],
Cell[28885, 812, 1459, 31, 209, "Output",ExpressionUUID->"38ae7b1b-213e-4db4-94de-28a19a485786"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30381, 848, 2883, 92, 78, "Input",ExpressionUUID->"dedad5af-20ea-4a62-87ce-affbc249cc54"],
Cell[33267, 942, 2802, 92, 71, "Output",ExpressionUUID->"ef1d2a43-9479-4902-b655-509eeecbda6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36106, 1039, 215, 4, 39, "Input",ExpressionUUID->"2d64a5c4-e0e3-46fc-8991-20ef14f5f382"],
Cell[36324, 1045, 14482, 310, 499, "Output",ExpressionUUID->"715d1696-78dd-4bc6-8b85-905699338a1b"]
}, Open  ]],
Cell[50821, 1358, 152, 3, 39, "Input",ExpressionUUID->"615d303a-241a-43f8-a6f1-0711cb1592c4"]
}, Open  ]],
Cell[50988, 1364, 174, 3, 57, "Subsection",ExpressionUUID->"4d0b8b23-908c-45ca-a37f-5139bc0264f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51199, 1372, 277, 4, 81, "Section",ExpressionUUID->"3a23b572-89cd-4fc9-8d1c-9dc750dc94c5"],
Cell[CellGroupData[{
Cell[51501, 1380, 162, 3, 57, "Subsection",ExpressionUUID->"e1f31e58-9667-4ec1-9dcf-c28137665188"],
Cell[51666, 1385, 195, 3, 29, "Text",ExpressionUUID->"a7bd15c6-9fee-4535-89e8-4a9da75c29bb"],
Cell[CellGroupData[{
Cell[51886, 1392, 1479, 39, 59, "Input",ExpressionUUID->"eb6340b1-b051-419a-af62-8e7cc87804ac"],
Cell[53368, 1433, 1511, 42, 4471, "Output",ExpressionUUID->"f2bd913c-c291-4ebe-8a52-47e1ec318b37"]
}, Closed]],
Cell[54894, 1478, 152, 3, 30, "Input",ExpressionUUID->"5c8d4e0b-ed1c-43a3-b97d-45ffe526cf09"],
Cell[CellGroupData[{
Cell[55071, 1485, 933, 23, 59, "Input",ExpressionUUID->"9a02eef6-b2ed-4120-ae3d-6951b951baa4"],
Cell[56007, 1510, 144189, 2369, 441, 79666, 1310, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"4cc49362-1a91-48ba-93e0-81041e1217db"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[200245, 3885, 169, 3, 57, "Subsection",ExpressionUUID->"eb162743-0085-40b7-8f55-0e4febe9effc"],
Cell[200417, 3890, 885, 18, 75, "Text",ExpressionUUID->"fd6411f0-a79b-47c4-adf3-d45866ee1f12"],
Cell[201305, 3910, 899, 18, 39, "Input",ExpressionUUID->"ee594e90-ff3e-41f3-8bb8-9955e946e4b8"],
Cell[CellGroupData[{
Cell[202229, 3932, 852, 19, 39, "Input",ExpressionUUID->"4a0ec6b9-d556-42a5-a86c-8dd447821140"],
Cell[203084, 3953, 156, 2, 32, "Output",ExpressionUUID->"70ccdefd-e61f-43af-a980-3a5812c5b0a8"]
}, Open  ]],
Cell[203255, 3958, 585, 15, 40, "Input",ExpressionUUID->"2dcb6a13-2ddd-4d24-89a4-cf767e143427"],
Cell[203843, 3975, 550, 14, 40, "Input",ExpressionUUID->"acadaaf1-f648-4e0a-9c63-ea4093da7f63"],
Cell[204396, 3991, 164, 3, 29, "Text",ExpressionUUID->"093f63e5-380e-4b92-8f60-4d2d6b5853f5"],
Cell[CellGroupData[{
Cell[204585, 3998, 494, 11, 39, "Input",ExpressionUUID->"9e9a2749-fead-4b64-a071-3d88a310aeab"],
Cell[205082, 4011, 1611, 42, 246, "Output",ExpressionUUID->"4ce5641c-a6cc-4d26-b272-f4f0dedcb94d"]
}, Open  ]],
Cell[206708, 4056, 321, 7, 29, "Text",ExpressionUUID->"0bc3d3ae-e376-4750-baea-d7cb74adf889"],
Cell[207032, 4065, 1542, 43, 253, "Input",ExpressionUUID->"5d0d71cc-f582-4e00-b497-9d56623a507d"],
Cell[208577, 4110, 230, 5, 29, "Text",ExpressionUUID->"b2b65ea0-42bc-4b4b-9550-0fc28ca57b09"],
Cell[208810, 4117, 1521, 42, 253, "Input",ExpressionUUID->"62d77996-58eb-4534-ad0c-d24100a1adc7"],
Cell[210334, 4161, 317, 7, 29, "Text",ExpressionUUID->"b8806225-4774-4e90-9dc6-7e237bfe3356"],
Cell[210654, 4170, 1707, 46, 419, "Output",ExpressionUUID->"65716c6e-b34f-42c0-b176-882fa3745172"],
Cell[CellGroupData[{
Cell[212386, 4220, 443, 10, 39, "Input",ExpressionUUID->"559c39aa-3d23-4add-bb38-7580ee8c13de"],
Cell[212832, 4232, 369, 9, 29, "Message",ExpressionUUID->"6fd9ef2b-1ea7-4821-83d9-167bdac8fb4b"],
Cell[213204, 4243, 369, 9, 29, "Message",ExpressionUUID->"639ed042-336f-4082-b042-bb2002deef96"],
Cell[213576, 4254, 1729, 45, 250, "Output",ExpressionUUID->"97d14f82-778f-42fe-9d61-0c5c0e4242a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215342, 4304, 672, 11, 39, "Input",ExpressionUUID->"f8f5cef8-43ba-4c8d-b0ad-7e38f53dbc08"],
Cell[216017, 4317, 1813, 45, 502, "Output",ExpressionUUID->"33f26878-0261-47b6-b1d3-5ffb9c5a2074"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217867, 4367, 860, 14, 39, "Input",ExpressionUUID->"198e838d-0f0c-4f06-9abd-094488936644"],
Cell[218730, 4383, 1759, 44, 620, "Output",ExpressionUUID->"8a96c4a4-3bc6-4a40-8bc5-3f4943bb68be"]
}, Open  ]],
Cell[220504, 4430, 154, 3, 39, "Input",ExpressionUUID->"d6486640-6fa2-46ba-8c51-a6a930b82481"],
Cell[CellGroupData[{
Cell[220683, 4437, 197, 3, 39, "Subsubsection",ExpressionUUID->"067c7792-f419-4f80-8770-96bd61bdf10e"],
Cell[220883, 4442, 201, 6, 52, "Text",ExpressionUUID->"2433fe8f-69d1-4952-8a47-3c838ee302cf"],
Cell[221087, 4450, 449, 12, 40, "Input",ExpressionUUID->"d8407442-55a5-425d-a719-407c6fab4dcd"],
Cell[CellGroupData[{
Cell[221561, 4466, 215, 3, 39, "Input",ExpressionUUID->"82807327-690e-4a0a-a9ab-9e59cc67e0d5"],
Cell[221779, 4471, 197, 2, 32, "Output",ExpressionUUID->"103949a1-d626-48d2-968e-0cba4311d1d0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[222049, 4481, 190, 3, 81, "Section",ExpressionUUID->"d7e4795e-2c05-484f-8339-50b127a69abc"],
Cell[CellGroupData[{
Cell[222264, 4488, 167, 3, 57, "Subsection",ExpressionUUID->"7b42aa53-0654-4933-9695-767730b9c223"],
Cell[CellGroupData[{
Cell[222456, 4495, 415, 8, 39, "Subsubsection",ExpressionUUID->"7e99dba4-8ffb-4270-a42a-1eaf83291df7"],
Cell[222874, 4505, 1289, 31, 97, "Input",ExpressionUUID->"2fef8580-a720-43d6-a0f8-2d86a972c780"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224200, 4541, 423, 8, 39, "Subsubsection",ExpressionUUID->"f7ad333e-258a-476a-981a-7b2037c766cc"],
Cell[224626, 4551, 986, 20, 98, "Input",ExpressionUUID->"cb4c070f-3d37-422c-a62d-c9c59b99c82c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225649, 4576, 471, 9, 39, "Subsubsection",ExpressionUUID->"b99bff67-a696-40f0-bbf8-7b6c68d0b9ee"],
Cell[226123, 4587, 206, 4, 39, "Input",ExpressionUUID->"050c52e9-6647-470d-a9aa-2b1a2cc90eea"],
Cell[226332, 4593, 1062, 21, 98, "Input",ExpressionUUID->"0fbe64c2-1459-422c-b8e6-527287814f64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227431, 4619, 523, 10, 39, "Subsubsection",ExpressionUUID->"e3111d0a-873b-46be-b28d-a88f64543811"],
Cell[227957, 4631, 206, 4, 39, "Input",ExpressionUUID->"ecabc96f-0dfe-43a2-ad4a-a10fd834e275"],
Cell[228166, 4637, 1060, 21, 98, "Input",ExpressionUUID->"0533a688-457e-4e40-8538-8fd22fd8ee10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229263, 4663, 306, 6, 39, "Subsubsection",ExpressionUUID->"8a95361d-e0a3-4dca-bc4e-d8e251d7bde8"],
Cell[229572, 4671, 615, 15, 79, "Input",ExpressionUUID->"c3f8d6f9-131c-44cd-b37c-fd8602f62fc0"],
Cell[CellGroupData[{
Cell[230212, 4690, 462, 12, 79, "Input",ExpressionUUID->"31a8d74e-ec72-4dae-94e3-6efa636ea83e"],
Cell[230677, 4704, 160, 3, 32, "Output",ExpressionUUID->"c3ea353b-f431-4e24-89e9-e4fa0358c1e9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[230886, 4713, 355, 7, 39, "Subsubsection",ExpressionUUID->"6aee55cd-f45a-45b8-9caf-368503deb3f7"],
Cell[CellGroupData[{
Cell[231266, 4724, 631, 14, 140, "Input",ExpressionUUID->"72fbf9e7-d262-47bc-9ff9-dbb2d71d72b4"],
Cell[231900, 4740, 287, 7, 45, "PrintTemporary",ExpressionUUID->"519ea52c-fcf4-4f4f-bdab-8e7230d1e881"]
}, Open  ]],
Cell[232202, 4750, 504, 12, 140, "Input",ExpressionUUID->"dad995d8-26db-4fa5-a0da-ce7fb184c088"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[232755, 4768, 479, 9, 79, "Subsection",ExpressionUUID->"6fdf6735-b43f-410e-bd2e-32b6bdaa7213"],
Cell[233237, 4779, 270, 6, 39, "Input",ExpressionUUID->"4f9974db-b37e-4580-b52e-b0bba6840fcc"],
Cell[233510, 4787, 1219, 31, 116, "Input",ExpressionUUID->"60938424-7c4c-4e51-8422-2393c6fbae89"],
Cell[234732, 4820, 514, 9, 39, "Input",ExpressionUUID->"204b98ad-2850-42fb-9662-874b99a5d840"],
Cell[CellGroupData[{
Cell[235271, 4833, 397, 7, 39, "Input",ExpressionUUID->"b6f8579d-8dc2-43b0-9115-235783c947ad"],
Cell[235671, 4842, 353, 6, 32, "Output",ExpressionUUID->"d17529df-f4b3-4d86-9a72-e6003c5d3e50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236061, 4853, 169, 3, 39, "Subsubsection",ExpressionUUID->"90e50879-6790-448a-8a45-3847efcc84a3"],
Cell[CellGroupData[{
Cell[236255, 4860, 401, 9, 39, "Input",ExpressionUUID->"fdd97a7d-3592-4cfe-82b1-26c0d8280613"],
Cell[236659, 4871, 1835, 47, 234, "Output",ExpressionUUID->"5dc4108e-31a3-4fc1-956e-6eca2e10ee76"],
Cell[238497, 4920, 1784, 47, 243, "Output",ExpressionUUID->"9c489918-82cf-41b0-af77-0d2b4f8380ae"],
Cell[240284, 4969, 1664, 45, 248, "Output",ExpressionUUID->"76615580-ce29-4674-9ec9-f0413be4b68b"],
Cell[241951, 5016, 1697, 45, 243, "Output",ExpressionUUID->"cea92276-d112-4275-a4d8-2f8d560d9d43"],
Cell[243651, 5063, 1605, 44, 248, "Output",ExpressionUUID->"2311a5da-947c-4061-aed5-205b7ecda5cf"],
Cell[245259, 5109, 1642, 44, 244, "Output",ExpressionUUID->"ba3426f8-6607-4d09-b98d-91b7fab366a9"],
Cell[246904, 5155, 1621, 44, 243, "Output",ExpressionUUID->"82ab3035-7de6-4ff3-8705-a9f684d9e32e"]
}, Open  ]],
Cell[248540, 5202, 205, 4, 39, "Input",ExpressionUUID->"9e51bc69-a7a4-4c3a-ba38-58a7bd1fca2b"],
Cell[248748, 5208, 154, 3, 39, "Input",ExpressionUUID->"9f711335-a35f-44e0-a7fa-3928ee902904"],
Cell[CellGroupData[{
Cell[248927, 5215, 3935, 96, 249, "Input",ExpressionUUID->"8b5710e9-1218-49cb-bb98-6ea2eaeb991e"],
Cell[252865, 5313, 2036, 40, 57, "Output",ExpressionUUID->"caa72cc7-5279-4b53-930f-d33171536de1"]
}, Open  ]],
Cell[254916, 5356, 1393, 37, 117, "Input",ExpressionUUID->"8cf338d8-acad-428c-ab0e-17cdf005643e"],
Cell[CellGroupData[{
Cell[256334, 5397, 656, 16, 39, "Input",ExpressionUUID->"7237e26f-aea6-4c11-a5ab-11d847b9cb76"],
Cell[256993, 5415, 12080, 309, 192, "Output",ExpressionUUID->"68278b35-9ab6-44b1-9fa3-221ce09d8455"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[269134, 5731, 507, 9, 79, "Subsection",ExpressionUUID->"b49b8db9-06ee-4c8a-bbe9-71db00e37430"],
Cell[269644, 5742, 225, 4, 39, "Input",ExpressionUUID->"fccccda1-8d14-4734-a57f-4c8182b921a1"],
Cell[CellGroupData[{
Cell[269894, 5750, 224, 4, 39, "Input",ExpressionUUID->"3f5f5e11-f495-45d8-99c1-95dc49369299"],
Cell[270121, 5756, 156, 3, 32, "Output",ExpressionUUID->"1d16ba11-a973-4bac-b86c-5ede5d1f5c88"]
}, Open  ]],
Cell[270292, 5762, 310, 7, 39, "Input",ExpressionUUID->"32bf3f75-c35f-4890-b640-b7d26e263c71"],
Cell[CellGroupData[{
Cell[270627, 5773, 300, 6, 39, "Input",ExpressionUUID->"9276463c-b75e-49bd-aa40-86c0f1a6ae77"],
Cell[270930, 5781, 48508, 950, 74, "Output",ExpressionUUID->"4171684c-04ef-4c9e-8508-f2aa463c3176"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319475, 6736, 438, 9, 39, "Input",ExpressionUUID->"015e27db-6bee-4167-b9b8-d208294962e1"],
Cell[319916, 6747, 257, 4, 32, "Output",ExpressionUUID->"d5be3a0a-7f2e-4f75-b932-13bcfdfa0289"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[320222, 6757, 408, 8, 79, "Subsection",ExpressionUUID->"42a59022-aefc-4229-8f21-ab2e54b784a9"],
Cell[320633, 6767, 350, 8, 39, "Input",ExpressionUUID->"fad2d926-33c0-44dc-aa1c-ee736fd0c0af"],
Cell[CellGroupData[{
Cell[321008, 6779, 267, 5, 39, "Input",ExpressionUUID->"9bf45c92-078b-4056-af8a-c012607741fb"],
Cell[321278, 6786, 232, 5, 32, "Output",ExpressionUUID->"3dd24324-ce9f-4d0f-8f51-27f4aadcb019"]
}, Open  ]],
Cell[321525, 6794, 318, 7, 39, "Input",ExpressionUUID->"45694c2e-b3fe-4de0-b8ff-610f60d43e78"],
Cell[CellGroupData[{
Cell[321868, 6805, 217, 4, 39, "Input",ExpressionUUID->"c714868e-a7d7-48f8-afb5-b43a3b9e5b3f"],
Cell[322088, 6811, 178, 3, 32, "Output",ExpressionUUID->"b662e897-c095-4d4f-b77f-fc7e81ddd4ab"]
}, Open  ]],
Cell[322281, 6817, 229, 5, 29, "Text",ExpressionUUID->"6b408b4e-7096-4de8-b015-02c7615ecc81"],
Cell[322513, 6824, 381, 10, 39, "Input",ExpressionUUID->"293a594b-410f-4f46-accf-6bd7d77d4ee1"],
Cell[322897, 6836, 374, 9, 39, "Input",ExpressionUUID->"1bb39b7b-e19c-48d2-851c-5fe987404cfa"],
Cell[CellGroupData[{
Cell[323296, 6849, 272, 5, 39, "Input",ExpressionUUID->"3178f4d3-40a0-44bf-8c86-1c142b5d6b2e"],
Cell[323571, 6856, 45487, 904, 74, "Output",ExpressionUUID->"d4ce0638-3bd1-4cf2-a2e2-5df309ecbf7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369095, 7765, 279, 6, 39, "Input",ExpressionUUID->"02e7d264-947a-4632-9a78-62ce6a9b9fa8"],
Cell[369377, 7773, 184, 3, 32, "Output",ExpressionUUID->"3d727098-c791-4924-942d-8b800313c23a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[369610, 7782, 456, 8, 79, "Subsection",ExpressionUUID->"4ef0e824-3016-446d-9e5a-da5a433ad970"],
Cell[CellGroupData[{
Cell[370091, 7794, 268, 7, 57, "Subsubsection",ExpressionUUID->"89befe17-c711-459e-9709-70bd8042bf56"],
Cell[CellGroupData[{
Cell[370384, 7805, 690, 16, 39, "Input",ExpressionUUID->"fd7c33c1-9e99-47ef-8443-670c53c7060d"],
Cell[371077, 7823, 454, 10, 28, "Message",ExpressionUUID->"9342f474-0ad3-4061-845b-f6d7614eb7a2"],
Cell[371534, 7835, 160, 3, 32, "Output",ExpressionUUID->"9af51e19-b99d-4c16-8a9d-820624ac8122"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371731, 7843, 1188, 26, 39, "Input",ExpressionUUID->"a1cd05f3-129e-419e-b1d0-86e7bfb3de59"],
Cell[372922, 7871, 385, 9, 29, "Message",ExpressionUUID->"ebe01dde-44ce-433e-85a0-f4ac5289b8e9"],
Cell[373310, 7882, 227, 3, 32, "Output",ExpressionUUID->"80e16d1e-87b0-4dab-a73b-6347f8ccd10c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373574, 7890, 206, 3, 39, "Input",ExpressionUUID->"a75fcc81-5b73-4501-9cde-d65447f9caef"],
Cell[373783, 7895, 396, 9, 28, "Message",ExpressionUUID->"5b72aadb-c4d8-42dd-9321-add4fbb2600b"],
Cell[374182, 7906, 396, 9, 28, "Message",ExpressionUUID->"221c54fd-924f-485e-a0c3-8b917098e573"],
Cell[374581, 7917, 454, 10, 27, "Message",ExpressionUUID->"a0e872de-44d4-4186-8d5e-36a3cba8f3ad"],
Cell[375038, 7929, 166, 3, 32, "Output",ExpressionUUID->"d297b4a3-b046-492a-9c64-aa05c1cbbd95"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375241, 7937, 629, 16, 39, "Input",ExpressionUUID->"9be06e94-f4f9-4b80-8226-75e4be50f943"],
Cell[375873, 7955, 385, 9, 29, "Message",ExpressionUUID->"84841c32-68fe-4957-8340-e2a028d6e7ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376295, 7969, 225, 4, 39, "Input",ExpressionUUID->"60e849df-70f1-4ce9-99d8-5670fcb0eaf4"],
Cell[376523, 7975, 5444, 132, 128, "Output",ExpressionUUID->"a3339bb0-59c3-4ba8-9953-74f74d523c37"]
}, Open  ]],
Cell[381982, 8110, 152, 3, 39, "Input",ExpressionUUID->"602bfeea-f6fe-4969-949e-4850bd814f01"],
Cell[382137, 8115, 151, 3, 39, "Input",ExpressionUUID->"6b42a872-1841-4a8f-8d31-a60d9d2ed8ed"],
Cell[CellGroupData[{
Cell[382313, 8122, 376, 8, 39, "Input",ExpressionUUID->"ab0d1309-3ce2-4092-b86e-47d1e4cdae19"],
Cell[382692, 8132, 176, 3, 32, "Output",ExpressionUUID->"e45e2f3b-cb8b-4d36-844e-73412171ad83"]
}, Open  ]],
Cell[382883, 8138, 1903, 55, 154, "Input",ExpressionUUID->"8cc99caf-0b6c-430d-9372-e3b4518c938b"],
Cell[CellGroupData[{
Cell[384811, 8197, 271, 5, 39, "Input",ExpressionUUID->"21197dee-f9e7-484d-9f7c-b153eca69f48"],
Cell[385085, 8204, 49311, 960, 74, "Output",ExpressionUUID->"a0258500-662e-4019-af06-e55574ac06c6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[434445, 9170, 158, 3, 39, "Subsubsection",ExpressionUUID->"643b5b98-ed77-4e73-903f-88de8bc6bc37"],
Cell[CellGroupData[{
Cell[434628, 9177, 280, 5, 39, "Input",ExpressionUUID->"8ea906d1-c055-4ab7-938d-9082dac8ec31"],
Cell[434911, 9184, 1787, 46, 239, "Output",ExpressionUUID->"14c52d85-0d55-4f4c-b008-26b8fcbed432"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436735, 9235, 262, 5, 39, "Input",ExpressionUUID->"e45c8419-a650-4c5e-beb0-af0a476bdd78"],
Cell[437000, 9242, 1717, 45, 243, "Output",ExpressionUUID->"274540bf-31ff-4c99-bb6e-743580b40268"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438754, 9292, 285, 5, 39, "Input",ExpressionUUID->"9635c932-d922-4b93-9050-b23a04ea3a79"],
Cell[439042, 9299, 1760, 46, 239, "Output",ExpressionUUID->"e00a8d1b-b4a1-4555-bd36-8d2de39f358e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[440839, 9350, 287, 5, 39, "Input",ExpressionUUID->"f6e3167b-aa48-4bbe-984a-3d3f3f3c1eaa"],
Cell[441129, 9357, 1706, 45, 239, "Output",ExpressionUUID->"3c150d77-b0cb-4899-b573-73d27e6293a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442872, 9407, 285, 5, 39, "Input",ExpressionUUID->"85e1a9c2-551c-4d3f-944c-482b7923347f"],
Cell[443160, 9414, 1633, 44, 250, "Output",ExpressionUUID->"40d739a3-48c5-4c44-bec7-020ea9ed647e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444830, 9463, 285, 5, 39, "Input",ExpressionUUID->"45cd9b44-41a2-4997-93fc-9cba5e2e9324"],
Cell[445118, 9470, 1640, 44, 244, "Output",ExpressionUUID->"5067c0ae-5209-4cfa-a62f-46413efcd9e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446795, 9519, 284, 5, 39, "Input",ExpressionUUID->"a22581d5-062d-4dd3-a98a-3eeec16c9af5"],
Cell[447082, 9526, 1673, 45, 243, "Output",ExpressionUUID->"39a7b06a-a7c3-4917-a59e-76efd4a30bdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448792, 9576, 285, 5, 39, "Input",ExpressionUUID->"42c27720-9d27-4454-83b1-ea6dae152769"],
Cell[449080, 9583, 1616, 44, 248, "Output",ExpressionUUID->"5cfa31e1-7b27-447f-a202-44d07837b36e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[450733, 9632, 287, 5, 39, "Input",ExpressionUUID->"47ae783a-5223-465f-86a5-f6c83405bad2"],
Cell[451023, 9639, 1892, 47, 245, "Output",ExpressionUUID->"f391ac03-52f8-4eee-a8dd-91a275403410"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452952, 9691, 285, 5, 39, "Input",ExpressionUUID->"3ad10fd6-991f-49fa-8aaa-a5953433ab07"],
Cell[453240, 9698, 1650, 44, 247, "Output",ExpressionUUID->"0585cf65-b422-4909-9463-f39758a0e5ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454927, 9747, 285, 5, 39, "Input",ExpressionUUID->"bcf76d68-c278-4a57-be2c-9808db5d3b69"],
Cell[455215, 9754, 1652, 44, 243, "Output",ExpressionUUID->"1ab955e9-c6c0-49fe-942a-4b223f226ef8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456904, 9803, 285, 5, 39, "Input",ExpressionUUID->"d9859027-487a-4a29-b8b1-80de7976aea9"],
Cell[457192, 9810, 1632, 44, 243, "Output",ExpressionUUID->"2acc1ffb-4a3e-4ad2-818b-984adb60ca2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458861, 9859, 285, 5, 39, "Input",ExpressionUUID->"14de7cdc-7690-4fcf-8fb2-48427c0674b8"],
Cell[459149, 9866, 1676, 45, 243, "Output",ExpressionUUID->"2fedaa52-1de0-43a8-a32c-2a63204efc5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[460862, 9916, 285, 5, 39, "Input",ExpressionUUID->"dda49798-1dd1-4e1b-8e5b-7c16eded069e"],
Cell[461150, 9923, 1798, 47, 234, "Output",ExpressionUUID->"aad60288-bb51-4668-a05e-f7d9348bc8b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462985, 9975, 285, 5, 39, "Input",ExpressionUUID->"4bcae2fd-cba6-4f8b-b2ce-e47b54b47f2e"],
Cell[463273, 9982, 1628, 44, 243, "Output",ExpressionUUID->"037f3f39-47f0-4b40-97cb-dd06b2506485"]
}, Open  ]],
Cell[CellGroupData[{
Cell[464938, 10031, 287, 5, 39, "Input",ExpressionUUID->"37fcb13f-b4b5-4aba-89c8-25429af2435f"],
Cell[465228, 10038, 1702, 45, 246, "Output",ExpressionUUID->"1e16a841-358a-438a-b573-9ab468e11042"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466967, 10088, 285, 5, 39, "Input",ExpressionUUID->"5fccfc62-98a7-4697-9659-fb216cfff978"],
Cell[467255, 10095, 1760, 46, 239, "Output",ExpressionUUID->"737c2bc3-7702-442e-99bd-3bc3425eb2fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[469052, 10146, 284, 5, 39, "Input",ExpressionUUID->"bc554a43-d30a-4ff8-bd8f-8ff47eddb938"],
Cell[469339, 10153, 1742, 46, 243, "Output",ExpressionUUID->"2fc2f10b-f0b1-4ea7-99c0-2fc67773d796"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471118, 10204, 285, 5, 39, "Input",ExpressionUUID->"c1514496-0b97-4f0f-883c-17029bfcb2f8"],
Cell[471406, 10211, 1677, 45, 243, "Output",ExpressionUUID->"ab955a12-95c2-49a0-950e-8e58560a831a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473120, 10261, 284, 5, 39, "Input",ExpressionUUID->"0c4e59f3-db4a-41f3-9c7c-861791bc7ab2"],
Cell[473407, 10268, 1624, 44, 243, "Output",ExpressionUUID->"31045444-37b2-4b03-9ad4-4da45c798e9b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475068, 10317, 285, 5, 39, "Input",ExpressionUUID->"b7ad408c-23b7-4e1a-a5b1-e51866359994"],
Cell[475356, 10324, 1632, 44, 244, "Output",ExpressionUUID->"354f298b-e193-411f-b7d5-e89936ba179d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477025, 10373, 285, 5, 39, "Input",ExpressionUUID->"c4337c6f-b15f-46c1-bd4d-2bfcc75a95f3"],
Cell[477313, 10380, 1846, 47, 230, "Output",ExpressionUUID->"93522c74-9cc5-4399-9b23-59d7cc527a20"]
}, Open  ]],
Cell[479174, 10430, 156, 3, 39, "Input",ExpressionUUID->"67fbd2d0-dac0-4a96-af9d-eacf489c9784"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[479379, 10439, 610, 10, 79, "Subsection",ExpressionUUID->"db060e3c-74dc-4d24-8022-8cf76d79cd94"],
Cell[479992, 10451, 336, 7, 39, "Input",ExpressionUUID->"7f018db3-f966-4e89-b558-6b5b5e51c101"],
Cell[CellGroupData[{
Cell[480353, 10462, 843, 24, 97, "Input",ExpressionUUID->"aaf2894b-9586-47d9-8b2f-1e9fdeaff8ad"],
Cell[481199, 10488, 178, 3, 32, "Output",ExpressionUUID->"302aa6a2-afa1-4133-a652-9b99cf7cb828"],
Cell[481380, 10493, 178, 3, 32, "Output",ExpressionUUID->"85e4aedb-8e4c-4274-9bfd-0120201a6a41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[481595, 10501, 935, 22, 97, "Input",ExpressionUUID->"1bce20ce-1bf2-4c08-ab1d-48c9f6ed06cc"],
Cell[482533, 10525, 155, 3, 32, "Output",ExpressionUUID->"de29ad2a-984f-4d81-aab1-cbbf5275c7c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[482725, 10533, 684, 11, 39, "Input",ExpressionUUID->"69470b01-f441-4941-84c9-31f995394ace"],
Cell[483412, 10546, 49168, 959, 74, "Output",ExpressionUUID->"2853cf92-5984-4818-92ec-b865ae4bc90b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532617, 11510, 531, 11, 39, "Input",ExpressionUUID->"23a592e1-e296-47e9-9efa-f5db91c46807"],
Cell[533151, 11523, 16800, 432, 25846, "Output",ExpressionUUID->"3c820de3-b55f-4fcd-bc09-7144e12f1f99"]
}, Closed]],
Cell[CellGroupData[{
Cell[549988, 11960, 169, 3, 36, "Subsubsection",ExpressionUUID->"6341057b-7e85-4034-a56a-5e4c04d7e90d"],
Cell[CellGroupData[{
Cell[550182, 11967, 401, 9, 39, "Input",ExpressionUUID->"93544c49-244c-402d-8381-f0d139bdfb42"],
Cell[550586, 11978, 1835, 47, 234, "Output",ExpressionUUID->"8db7e944-ad85-4123-8e06-2ab77fce0be1"],
Cell[552424, 12027, 1784, 47, 243, "Output",ExpressionUUID->"14d3c4a8-8bf6-4557-ba9f-5b7779d226c2"],
Cell[554211, 12076, 1664, 45, 248, "Output",ExpressionUUID->"8878aac3-90bc-4386-987d-e55c559ab4b5"],
Cell[555878, 12123, 1697, 45, 243, "Output",ExpressionUUID->"6cfac32a-149b-42a2-9c32-ce8a2729eef3"],
Cell[557578, 12170, 1605, 44, 248, "Output",ExpressionUUID->"5ece1500-0a99-4f25-bdbd-691b5093e741"],
Cell[559186, 12216, 1642, 44, 244, "Output",ExpressionUUID->"6507e16e-9d10-44bd-8184-6fbe35d8f463"],
Cell[560831, 12262, 1621, 44, 243, "Output",ExpressionUUID->"0a3ade9a-a0df-43b4-940b-b6b2f03694ca"]
}, Open  ]],
Cell[562467, 12309, 205, 4, 39, "Input",ExpressionUUID->"9102b127-74cb-4c68-9f94-1be59417a03e"],
Cell[562675, 12315, 154, 3, 39, "Input",ExpressionUUID->"2729455f-6b68-41de-bffa-0abf056d5818"],
Cell[CellGroupData[{
Cell[562854, 12322, 3935, 96, 249, "Input",ExpressionUUID->"1ab499e3-3359-4abf-9f59-e079a621283f"],
Cell[566792, 12420, 2036, 40, 57, "Output",ExpressionUUID->"da12dc60-1e11-4922-b6a6-65926709b77d"]
}, Open  ]],
Cell[568843, 12463, 1393, 37, 117, "Input",ExpressionUUID->"5dcb31c0-ea89-4460-ad20-5d4838817789"],
Cell[CellGroupData[{
Cell[570261, 12504, 656, 16, 39, "Input",ExpressionUUID->"37335144-36ca-4b28-8b3d-a70d16f4e158"],
Cell[570920, 12522, 12117, 309, 192, "Output",ExpressionUUID->"43cbbcf1-e96c-4ca7-9777-a9f357cd5f7e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[583098, 12838, 184, 3, 57, "Subsection",ExpressionUUID->"8c7df693-15d8-42a7-a447-159a5fed6064"],
Cell[583285, 12843, 2306, 52, 917, "Text",ExpressionUUID->"7d699ce5-2b2f-49d9-bb5f-644db38711ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[585628, 12900, 250, 6, 57, "Subsection",ExpressionUUID->"3806c5f7-8754-45b9-bad8-ac21caa1b796"],
Cell[585881, 12908, 228, 5, 29, "Text",ExpressionUUID->"212909c7-0273-441c-9908-2ccdfffafec0"]
}, Open  ]],
Cell[586124, 12916, 205, 3, 57, "Subsection",ExpressionUUID->"22c88fd6-bd6b-4bf6-b1ac-d93a47db6c5f"]
}, Open  ]]
}
]
*)

